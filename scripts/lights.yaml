lights_out:
  alias: Lights out
  fields:
    activatedFrom:
      description: From where was the "Lights out"-script triggered
      required: false
      default: kitchen
      selector:
        select:
          options:
            - kitchen
            - bedroom
  variables:
    activatedFrom: >-
      {% if activatedFrom in ['kitchen', 'bedroom'] %}
        {{ activatedFrom }}
      {% else %}
        kitchen
      {% endif %}
  sequence:
    - variables:
        # Front & back door and Garden should already be off (they have their
        # own automations) – included in case we go to bed early
        rooms_on: >-
          {{
            expand(
              'group.light_inside_rooms',
              'light.front_back_door',
              'light.garden' ) |
            selectattr('attributes.is_hue_group', 'defined') |
            selectattr('attributes.is_hue_group', 'true') |
            selectattr('state', 'eq', 'on') |
            selectattr('entity_id', 'ne', 'light.bedroom') |
            map(attribute='entity_id') | list
          }}
    - choose:
        # Activated from Kitchen
        - conditions:
            - >-
              {{ activatedFrom == 'kitchen' }}
          sequence:
            - if:
                - >-
                  {{
                    rooms_on | reject('eq', 'light.kitchen') | list | length
                      > 0
                  }}
              then:
                - service: light.turn_off
                  target:
                    entity_id: >-
                      {{ rooms_on | reject('eq', 'light.kitchen') | join(',') }}
            # Only continue if either the Kitchen or Hallway lights were on the
            # begin with
            - if:
                - condition: not
                  conditions:
                    - condition: state
                      entity_id:
                        - light.kitchen
                        - light.hallway
                      state: "off"
              then:
                # Dim Kitchen lights to provide a visual cue
                - service: scene.turn_on
                  target:
                    entity_id: scene.kitchen_movie
                # Turn on Hallway lights so there's light when going upstairs
                - service: scene.turn_on
                  target:
                    entity_id: scene.hallway_evening
                - delay: "00:05:00"
                # Lower Hallway brightness 1-minute prior to switching it off
                - service: light.turn_on
                  data:
                    brightness_step_pct: -15
                    entity_id:
                      - light.hallway
                - delay: "00:01:00"
                - service: light.turn_off
                  data:
                    entity_id: light.kitchen
                - service: light.turn_off
                  data:
                    transition: 10
                    entity_id: light.hallway
        # Activated from Bedroom
        - conditions:
            - >-
              {{ activatedFrom == 'bedroom' }}
          sequence:
            - if:
                - >-
                  {{ rooms_on | length > 0 }}
              then:
                - service: light.turn_off
                  target:
                    entity_id: >-
                      {{ rooms_on | join(',') }}
            - if:
                condition: state
                entity_id: light.hallway
                state: "on"
              then:
                - service: light.turn_off
                  data:
                    transition: 10
                    entity_id: light.hallway
            - if:
                - condition: state
                  entity_id: light.bedroom
                  state: "on"
              then:
                - service: light.turn_off
                  data:
                    transition: 10
                    entity_id: light.bedroom
    # If there's no motion in the Bathroom and Wardrobe, switch them off too –
    # note that we explicitly check the motions sensors (and not the "occupancy"
    # sensors) here as we intend to more quickly switch the lights off than we
    # would normally do...
    - if:
        - >-
          {{
            is_state('group.motion_bathroom', 'off') and
            is_state('binary_sensor.presence_63', 'off')
          }}
      then:
        - service: light.turn_off
          data:
            transition: 10
            entity_id:
              - light.bathroom
              - light.wardrobe
    # Occasionally, lights don't turn off properly – this causes the
    # "Everyone asleep"-state to not trigger. Here we ensure all lights are
    # *really* off by toggling all groups that are still reporting "on" to "off"
    # yet again... The 10-minute delay is important as it sometimes takes a
    # while for the state reported by the Hue API to align with the actual state
    # of the lights.
    # An exception is made for the the Bedroom (where the lights might still be
    # switched on intentionally).
    - delay: "00:10:00"
    - variables:
        force_off: >-
          {{
            expand('group.light_inside_rooms') |
            selectattr('attributes.is_hue_group', 'true') |
            selectattr('state', 'eq', 'on') |
            selectattr('entity_id', 'ne', 'light.bedroom') |
            join(',', attribute='entity_id')
          }}
    - condition: >-
        {{ force_off != '' }}
    - service: light.turn_off
      target:
        entity_id: >-
          {{ force_off }}
    - service: system_log.write
      data:
        level: warning
        message: >-
          The "{{ force_off }}" room(s) didn't properly respond to the
          Lights out-script and were forced off...
  mode: single
  icon: mdi:lightbulb-group-off
