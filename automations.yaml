- id: '1604348574344'
  alias: ⏰ Electric blanket on (daily at 23:00 when someone home)
  description: ''
  trigger:
  - platform: time
    at: '23:00'
  condition:
  - condition: state
    state: home
    entity_id: group.family
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.on_off_plug_in_unit_3
  mode: single
- id: '1604348675018'
  alias: 🤖 Electric blanket off (20 minutes after Bedroom lights off)
  description: ''
  trigger:
  - platform: state
    entity_id: light.bedroom
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: switch.on_off_plug_in_unit_3
    state: 'on'
  action:
  - delay: 00:20:00
  - service: switch.turn_off
    data: {}
    entity_id: switch.on_off_plug_in_unit_3
  mode: single
- id: '1604942792287'
  alias: ⏰ | 💡 | 🌴 Attic lights off when everyone away (weekdays around 19:00)
  description: ''
  trigger:
  - platform: time
    at: '18:30'
  condition:
  - condition: state
    state: 'on'
    entity_id: light.attic
  - condition: state
    entity_id: group.family
    state: not_home
  action:
  - delay: '{{ range(0, 3600) | random }}'
  - condition: state
    entity_id: group.family
    state: not_home
  - service: light.turn_off
    data: {}
    entity_id: light.attic
  mode: single
- id: '1604943496117'
  alias: ⏰ | 💡 Outside lights off (daily at 22:30)
  description: ''
  trigger:
  - platform: time
    at: '22:30'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.garden
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        entity_id: light.garden
    default: []
  - choose:
    - conditions:
      - condition: state
        entity_id: light.front_back_door
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        entity_id: light.front_back_door
    default: []
  mode: single
- id: '1604943870070'
  alias: ⏰ | 💡 | 🌴 Inside lights off when everyone away (daily around 00:00)
  description: ''
  trigger:
  - platform: time
    at: '23:00'
  condition:
  - condition: state
    entity_id: group.family
    state: not_home
  action:
  - delay: '{{ range(0, 7200) | random }}'
  - condition: state
    entity_id: group.family
    state: not_home
  - service: script.lights_out
    data: {}
    entity_id: light.attic
  mode: single
- id: '1604944801176'
  alias: 🤖 | 💡 Front & back door maximum brightness (door open)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.openclose_12
    - binary_sensor.openclose_16
    from: 'off'
    to: 'on'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.time_of_day
      state: day
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.front_back_door
        state: 'on'
      sequence:
      - service: light.turn_on
        data:
          brightness: 255
          entity_id: "{% if trigger.entity_id == \"binary_sensor.openclose_12\" %}\n\
            \  light.hue_filament_bulb_1\n{% else %}\n  light.hue_filament_bulb_1_2\n\
            {% endif %}\n"
      - wait_for_trigger:
        - platform: template
          value_template: '{{ is_state(trigger.entity_id, ''off'') }}'
      - delay: 00:00:20
      - service: hue.hue_activate_scene
        data:
          group_name: Front & back door
          scene_name: Evening
    - conditions:
      - condition: state
        entity_id: light.front_back_door
        state: 'off'
      sequence:
      - service: light.turn_on
        data:
          brightness: 255
          entity_id: "{% if trigger.entity_id == \"binary_sensor.openclose_12\" %}\n\
            \  light.hue_filament_bulb_1\n{% else %}\n  light.hue_filament_bulb_1_2\n\
            {% endif %}\n"
      - wait_for_trigger:
        - platform: template
          value_template: '{{ is_state(trigger.entity_id, ''off'') }}'
      - delay: 00:00:20
      - service: light.turn_off
        entity_id: light.front_back_door
    default: []
  mode: single
  max: 2
- id: '1605024371581'
  alias: ⏰ | 💡 Wakeup light bedroom (daily at «wakeup light start» time)
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wakeup_light_start
  condition:
  - condition: state
    entity_id: timer.wakeup_grace_time
    state: idle
  action:
  - service: script.wake_up_light_bedroom
    data: {}
  - delay: 02:20
  - service: light.turn_off
    data: {}
    entity_id: light.bedroom
  mode: single
- id: '1605402967826'
  alias: ⏰ | 💡 | 🌴 Attic lights on when everyone away (most weekdays around dusk)
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '-4800'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: group.family
    state: not_home
  - condition: template
    value_template: '{{ (range(0, 99) | random) > 10 }}'
  action:
  - delay: '{{ range(0, 4800) | random }}'
  - condition: state
    entity_id: group.family
    state: not_home
  - service: hue.hue_activate_scene
    data:
      group_name: Attic
      scene_name: Away
  mode: single
- id: '1605548847870'
  alias: 🤖 Set next «wakeup» (everyone awake)
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.everyone_asleep
    to: 'off'
    from: 'on'
  condition: []
  action:
  - service: timer.start
    data: {}
    entity_id: timer.wakeup_grace_time
  - choose:
    - conditions:
      - condition: time
        weekday:
        - fri
        - sat
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 09:00:00
        entity_id: input_datetime.wakeup
    - conditions:
      - condition: time
        weekday:
        - mon
        - tue
        - wed
        - thu
        - sun
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 08:00:00
        entity_id: input_datetime.wakeup
    default: []
  mode: single
- id: '1605551681027'
  alias: 🤖 Set «wakeup light start» time («wakeup» time change)
  description: ''
  trigger:
  - platform: state
    entity_id: input_datetime.wakeup
  condition: []
  action:
  - service: input_datetime.set_datetime
    data:
      time: '{{ (state_attr(''input_datetime.wakeup'', ''timestamp'') | int - 1200)
        |  timestamp_custom(''%H:%M:%S'', False) }}'
    entity_id: input_datetime.wakeup_light_start
  mode: single
- id: '1606159329722'
  alias: 🤖 | 💡 Garden lights on (kitchen / garden door open)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.openclose_12
    - binary_sensor.openclose_34
    from: 'off'
    to: 'on'
    for: 00:00:03
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.time_of_day
      state: day
  - condition: state
    entity_id: light.garden
    state: 'off'
  action:
  - service: hue.hue_activate_scene
    data:
      group_name: Garden
      scene_name: Ambiance
  - delay: 00:03:00
  - service: light.turn_off
    entity_id: light.garden
  mode: single
  max: 2
- id: '1606412740160'
  alias: ⏰ | 🔊 Alarm bedroom (daily at «wakeup» time)
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wakeup
  condition:
  - condition: state
    state: home
    entity_id: group.family
  - condition: state
    entity_id: timer.wakeup_grace_time
    state: idle
  action:
  - service: media_player.volume_set
    data:
      entity_id: media_player.pi0_speaker_bedroom
      volume_level: 0.45
  - repeat:
      count: '4'
      sequence:
      - service: media_player.play_media
        data:
          media_content_type: audio/ogg
          media_content_id: file:/var/lib/mopidy/media/Gnome.ogg
        entity_id: media_player.pi0_speaker_bedroom
      - delay: 00:00:15
  mode: single
- id: '1606679161866'
  alias: 🤖 | 🌡️ Turn on shed electric heater (< 6ºC)
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.temperature_27
    below: '6'
    for: 00:10:00
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.smart_plug_5
  mode: single
- id: '1606679446735'
  alias: 🤖 | 🌡️ Turn off shed electric heater (> 8ºC)
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.temperature_27
    for: 00:10:00
    above: '8'
  condition:
  - condition: state
    entity_id: switch.smart_plug_5
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.smart_plug_5
  mode: single
- id: '1606680231233'
  alias: 🤖 | 🌡️ Turn off shed electric heater (after 90 minutes)
  description: ''
  trigger:
  - platform: state
    entity_id: switch.smart_plug_5
    to: 'on'
    for: 01:30:00
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.smart_plug_5
  mode: single
- id: '1606680444691'
  alias: 🤖 Electric blanket off (after 2 hours)
  description: ''
  trigger:
  - platform: state
    entity_id: switch.on_off_plug_in_unit_3
    to: 'on'
    for: 02:00:00
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.on_off_plug_in_unit_3
  mode: single
- id: '1606685571203'
  alias: ⏰ | 🌪️ Guestroom fan on (daily at 05:00)
  description: ''
  trigger:
  - platform: time
    at: 05:00:00
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.on_off_plug_in_unit_4
  mode: single
- id: '1606685598640'
  alias: ⏰ | 🌪️ Guestroom fan off (daily at 07:00)
  description: ''
  trigger:
  - platform: time
    at: 07:00:00
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.on_off_plug_in_unit_4
  mode: single
- id: '1607992740551'
  alias: 🎮 Snooze alarm bedroom (Smart Switch)
  description: ''
  trigger:
  - device_id: da1237666189a9a364fa383795ba532d
    domain: deconz
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  - device_id: b26003b4b78afd0e5b2c3bcb3b06eeeb
    domain: deconz
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  condition:
  - condition: template
    value_template: "{{\n  ( as_timestamp(now()) - as_timestamp(state_attr(\n    \
      \  'automation.alarm_bedroom_daily_at_wakeup_time',\n      'last_triggered'\n\
      \    )) | int(0) ) <= 60\n}}"
  action:
  - service: automation.turn_off
    data: {}
    entity_id: automation.alarm_bedroom_daily_at_wakeup_time
  - service: automation.turn_on
    data: {}
    entity_id: automation.alarm_bedroom_daily_at_wakeup_time
  - service: media_player.media_stop
    data: {}
    entity_id: media_player.pi0_speaker_bedroom
  mode: single
- id: '1604354230527'
  alias: 🎮 Ensuite maximum brightness (Magic Cube)
  description: ''
  trigger:
  - device_id: 7053d7e589bf4a4496cff59a24b7c83c
    domain: deconz
    platform: device
    type: remote_double_tap_any_side
    subtype: ''
  condition: []
  action:
  - service: light.turn_on
    entity_id: light.hue_white_light_1
    data:
      brightness: 255
  mode: single
- id: '1608737163515'
  alias: 🤖 | 🔊 Blink Attic lights (doorbell rang)
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.vibration_43
    to: 'on'
  condition: []
  action:
  - repeat:
      count: '2'
      sequence:
      - service: light.turn_on
        data:
          flash: short
        entity_id: light.attic
      - delay: 00:00:01
  mode: single
