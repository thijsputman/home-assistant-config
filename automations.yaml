- id: '1592048449550'
  alias: ü§ñ Fireplace toggle (input boolean)
  description: ''
  trigger:
  - entity_id: input_boolean.fireplace
    platform: state
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.fireplace
        state: 'on'
      sequence:
      - service: rest_command.fireplace_start
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.fireplace
        state: 'off'
      sequence:
      - service: rest_command.fireplace_stop
        data: {}
    default: []
  mode: single
- id: '1603806968872'
  alias: ü§ñ | üå°Ô∏è Thermostat schedule off (everyone away)
  description: ''
  trigger:
  - platform: state
    entity_id: group.family
    from: home
    to: not_home
  condition:
  - condition: state
    entity_id: switch.thermostat_program
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data: {}
    entity_id: input_boolean.thermostat_previous_state
  - service: climate.set_preset_mode
    data:
      preset_mode: away
    entity_id: climate.thermostat
  - service: switch.turn_off
    data: {}
    entity_id: switch.thermostat_program
  mode: single
- id: '1603808339707'
  alias: ü§ñ | üå°Ô∏è Thermostat schedule on (someone home)
  description: ''
  trigger:
  - platform: state
    entity_id: group.family
    from: not_home
    to: home
  condition:
  - condition: state
    entity_id: input_boolean.thermostat_previous_state
    state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.thermostat_program
  - service: input_boolean.turn_off
    data: {}
    entity_id: input_boolean.thermostat_previous_state
  mode: single
- id: '1604338683175'
  alias: ü§ñ / ‚è∞ Fireplace off (Living room lights off / daily at 02:00)
  description: ''
  trigger:
  - platform: state
    entity_id: light.living_room
    from: 'on'
    to: 'off'
  - platform: time
    at: 02:00
  condition:
  - condition: state
    entity_id: input_boolean.fireplace
    state: 'on'
  action:
  - data: {}
    entity_id: input_boolean.fireplace
    service: input_boolean.turn_off
  - delay: 00:00:30
  - service: light.turn_off
    data: {}
    entity_id:
    - light.fireplace_1_living_room
    - light.fireplace_2_living_room
  mode: single
- id: '1604348574344'
  alias: ‚è∞ Electric blanket on (daily at 23:00 when someone home)
  description: ''
  trigger:
  - platform: time
    at: '23:00'
  condition:
  - condition: state
    state: home
    entity_id: group.family
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.on_off_plug_in_unit_3
  mode: single
- id: '1604348675018'
  alias: ü§ñ Electric blanket off (20 minutes after Bedroom lights off)
  description: ''
  trigger:
  - platform: state
    entity_id: light.bedroom
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: switch.on_off_plug_in_unit_3
    state: 'on'
  action:
  - delay: 00:20:00
  - service: switch.turn_off
    data: {}
    entity_id: switch.on_off_plug_in_unit_3
  mode: single
- id: '1604360962688'
  alias: ‚è∞ Arlo snapshot (every 2 hours)
  description: ''
  trigger:
  - platform: time_pattern
    hours: /2
    minutes: 0
    seconds: '0'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id:
      - camera.aarlo_back
      - camera.aarlo_front
      state: recording
  action:
  - service: aarlo.camera_request_snapshot
    data: {}
    entity_id:
    - camera.aarlo_back
    - camera.aarlo_front
  mode: single
- id: '1604942792287'
  alias: ‚è∞ | üí° | üå¥ Attic lights off when everyone away (weekdays around 19:00)
  description: ''
  trigger:
  - platform: time
    at: '18:30'
  condition:
  - condition: state
    state: 'on'
    entity_id: light.attic
  - condition: state
    entity_id: group.family
    state: not_home
  action:
  - delay: '{{ range(0, 3600) | random }}'
  - condition: state
    entity_id: group.family
    state: not_home
  - service: light.turn_off
    data: {}
    entity_id: light.attic
  mode: single
- id: '1604943496117'
  alias: ‚è∞ | üí° Outside lights off (daily at 22:30)
  description: ''
  trigger:
  - platform: time
    at: '22:30'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.garden
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        entity_id: light.garden
    default: []
  - choose:
    - conditions:
      - condition: state
        entity_id: light.front_back_door
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        entity_id: light.front_back_door
    default: []
  mode: single
- id: '1604943870070'
  alias: ‚è∞ | üí° | üå¥ Inside lights off when everyone away (daily around 00:00)
  description: ''
  trigger:
  - platform: time
    at: '23:00'
  condition:
  - condition: state
    entity_id: group.family
    state: not_home
  action:
  - delay: '{{ range(0, 7200) | random }}'
  - condition: state
    entity_id: group.family
    state: not_home
  - service: script.lights_out
    data: {}
    entity_id: light.attic
  mode: single
- id: '1604944472380'
  alias: üí§ | ü§ñ Everyone at home asleep (all lights off)
  description: ''
  trigger:
  - platform: state
    from: 'on'
    to: 'off'
    for: 00:10:00
    entity_id: group.light_inside_rooms_all
  condition:
  - condition: state
    entity_id: group.family
    state: home
  - condition: state
    entity_id: input_boolean.nighttime
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data: {}
    entity_id: input_boolean.everyone_asleep
  mode: single
- id: '1604944531342'
  alias: üí§ | ‚è∞ Everyone at home awake (daily at ¬´wakeup¬ª time)
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wakeup
  condition:
  - condition: state
    entity_id: group.family
    state: home
  - condition: state
    entity_id: input_boolean.everyone_asleep
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    entity_id: input_boolean.everyone_asleep
  mode: single
- id: '1604944801176'
  alias: ü§ñ | üí° Front & back door maximum brightness (door open)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.openclose_12
    - binary_sensor.openclose_16
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.nighttime
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.front_back_door
        state: 'on'
      sequence:
      - service: light.turn_on
        data:
          brightness: 255
          entity_id: "{% if trigger.entity_id == \"binary_sensor.openclose_12\" %}\n\
            \  light.hue_filament_bulb_1\n{% else %}\n  light.hue_filament_bulb_1_2\n\
            {% endif %}\n"
      - wait_for_trigger:
        - platform: template
          value_template: '{{ is_state(trigger.entity_id, ''off'') }}'
      - delay: 00:00:20
      - service: hue.hue_activate_scene
        data:
          group_name: Front & back door
          scene_name: Evening
    - conditions:
      - condition: state
        entity_id: light.front_back_door
        state: 'off'
      sequence:
      - service: light.turn_on
        data:
          brightness: 255
          entity_id: "{% if trigger.entity_id == \"binary_sensor.openclose_12\" %}\n\
            \  light.hue_filament_bulb_1\n{% else %}\n  light.hue_filament_bulb_1_2\n\
            {% endif %}\n"
      - wait_for_trigger:
        - platform: template
          value_template: '{{ is_state(trigger.entity_id, ''off'') }}'
      - delay: 00:00:20
      - service: light.turn_off
        entity_id: light.front_back_door
    default: []
  mode: single
  max: 2
- id: '1605024371581'
  alias: ‚è∞ | üí° Wakeup light bedroom (daily at ¬´wakeup light start¬ª time)
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wakeup_light_start
  condition:
  - condition: state
    entity_id: timer.wakeup_grace_time
    state: idle
  action:
  - service: script.wake_up_light_bedroom
    data: {}
  - delay: 02:20
  - service: light.turn_off
    data: {}
    entity_id: light.bedroom
  mode: single
- id: '1605228018087'
  alias: üåõ | ‚è∞ Nighttime
  description: ''
  trigger:
  - platform: sun
    event: sunset
  - platform: sun
    event: sunrise
  condition: []
  action:
  - choose:
    - conditions:
      - condition: sun
        after: sunset
      sequence:
      - service: input_boolean.turn_on
        data: {}
        entity_id: input_boolean.nighttime
    - conditions:
      - condition: sun
        after: sunrise
      sequence:
      - service: input_boolean.turn_off
        data: {}
        entity_id: input_boolean.nighttime
    default: []
  mode: single
- id: '1605228511473'
  alias: ü§ñ | üå°Ô∏è Thermostat to preset "sleep" (everyone asleep)
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.everyone_asleep
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: switch.thermostat_program
    state: 'on'
  - condition: not
    conditions:
    - condition: state
      entity_id: climate.thermostat
      attribute: preset_mode
      state: sleep
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: sleep
    entity_id: climate.thermostat
  mode: single
- id: '1605356452236'
  alias: ü§ñ | üå°Ô∏è Attic heating on (Attic lights on)
  description: ''
  trigger:
  - platform: state
    entity_id: light.attic
    from: 'off'
    to: 'on'
    for: 00:05
  condition:
  - condition: state
    entity_id: switch.thermostat_program
    state: 'on'
  - condition: or
    conditions:
    - condition: state
      entity_id: climate.thermostat
      attribute: preset_modes
      state: comfort
    - condition: state
      entity_id: climate.thermostat
      state: home
      attribute: preset_mode
  action:
  - service: climate.set_temperature
    data:
      temperature: 20.5
    entity_id: climate.thermostat_29
  mode: single
- id: '1605356537576'
  alias: ü§ñ | üå°Ô∏è Attic heating off (Attic lights off)
  description: ''
  trigger:
  - platform: state
    entity_id: light.attic
    from: 'on'
    to: 'off'
    for: 00:05
  condition: []
  action:
  - service: climate.set_temperature
    data:
      temperature: 15
    entity_id: climate.thermostat_29
  mode: single
- id: '1605402967826'
  alias: ‚è∞ | üí° | üå¥ Attic lights on when everyone away (most weekdays around dusk)
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '-4800'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: group.family
    state: not_home
  - condition: template
    value_template: '{{ (range(0, 99) | random) > 10 }}'
  action:
  - delay: '{{ range(0, 4800) | random }}'
  - condition: state
    entity_id: group.family
    state: not_home
  - service: hue.hue_activate_scene
    data:
      group_name: Attic
      scene_name: Away
  mode: single
- id: '1605548847870'
  alias: ü§ñ Set next ¬´wakeup¬ª (everyone awake)
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.everyone_asleep
    to: 'off'
    from: 'on'
  condition: []
  action:
  - service: timer.start
    data: {}
    entity_id: timer.wakeup_grace_time
  - choose:
    - conditions:
      - condition: time
        weekday:
        - fri
        - sat
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 09:00:00
        entity_id: input_datetime.wakeup
    - conditions:
      - condition: time
        weekday:
        - mon
        - tue
        - wed
        - thu
        - sun
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 08:00:00
        entity_id: input_datetime.wakeup
    default: []
  mode: single
- id: '1605551681027'
  alias: ü§ñ Set ¬´wakeup light start¬ª time (¬´wakeup¬ª time change)
  description: ''
  trigger:
  - platform: state
    entity_id: input_datetime.wakeup
  condition: []
  action:
  - service: input_datetime.set_datetime
    data:
      time: '{{ (state_attr(''input_datetime.wakeup'', ''timestamp'') | int - 1200)
        |  timestamp_custom(''%H:%M:%S'', False) }}'
    entity_id: input_datetime.wakeup_light_start
  mode: single
- id: '1606159329722'
  alias: ü§ñ | üí° Garden lights on (kitchen / garden door open)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.openclose_12
    - binary_sensor.openclose_34
    from: 'off'
    to: 'on'
    for: 00:00:03
  condition:
  - condition: state
    entity_id: input_boolean.nighttime
    state: 'on'
  - condition: state
    entity_id: light.garden
    state: 'off'
  action:
  - service: hue.hue_activate_scene
    data:
      group_name: Garden
      scene_name: Ambiance
  - delay: 00:03:00
  - service: light.turn_off
    entity_id: light.garden
  mode: single
  max: 2
- id: '1606412740160'
  alias: ‚è∞ | üîä Alarm bedroom (daily at ¬´wakeup¬ª time)
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wakeup
  condition:
  - condition: state
    state: home
    entity_id: group.family
  - condition: state
    entity_id: timer.wakeup_grace_time
    state: idle
  action:
  - service: media_player.volume_set
    data:
      entity_id: media_player.pi0_speaker_bedroom
      volume_level: 0.45
  - repeat:
      count: '4'
      sequence:
      - service: media_player.play_media
        data:
          media_content_type: audio/ogg
          media_content_id: file:/var/lib/mopidy/media/Gnome.ogg
        entity_id: media_player.pi0_speaker_bedroom
      - delay: 00:00:15
  mode: single
- id: '1606679161866'
  alias: ü§ñ | üå°Ô∏è Turn on shed electric heater (< 6¬∫C)
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.temperature_27
    below: '6'
    for: 00:10:00
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.smart_plug_5
  mode: single
- id: '1606679446735'
  alias: ü§ñ | üå°Ô∏è Turn off shed electric heater (> 8¬∫C)
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.temperature_27
    for: 00:10:00
    above: '8'
  condition:
  - condition: state
    entity_id: switch.smart_plug_5
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.smart_plug_5
  mode: single
- id: '1606680231233'
  alias: ü§ñ | üå°Ô∏è Turn off shed electric heater (after 90 minutes)
  description: ''
  trigger:
  - platform: state
    entity_id: switch.smart_plug_5
    to: 'on'
    for: 01:30:00
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.smart_plug_5
  mode: single
- id: '1606680444691'
  alias: ü§ñ Electric blanket off (after 2 hours)
  description: ''
  trigger:
  - platform: state
    entity_id: switch.on_off_plug_in_unit_3
    to: 'on'
    for: 02:00:00
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.on_off_plug_in_unit_3
  mode: single
- id: '1606680879430'
  alias: ü§ñ | üå°Ô∏è Toon‚Ñ¢ anti-b0rk protection (when heating)
  description: Toon is offline so much that a fallback is required...
  trigger:
  - platform: state
    entity_id: climate.thermostat
    to: heating
    for: 00:01:00
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: group.family
      state: not_home
    - condition: state
      entity_id: input_boolean.everyone_asleep
      state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: group.family
        state: not_home
      sequence:
      - service: climate.set_preset_mode
        data:
          preset_mode: away
        entity_id: climate.thermostat
    - conditions:
      - condition: state
        entity_id: input_boolean.everyone_asleep
        state: 'on'
      sequence:
      - service: climate.set_preset_mode
        data:
          preset_mode: sleep
        entity_id: climate.thermostat
    default: []
  mode: single
- id: '1606685571203'
  alias: ‚è∞ | üå™Ô∏è Guestroom fan on (daily at 05:00)
  description: ''
  trigger:
  - platform: time
    at: 05:00:00
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.on_off_plug_in_unit_4
  mode: single
- id: '1606685598640'
  alias: ‚è∞ | üå™Ô∏è Guestroom fan off (daily at 07:00)
  description: ''
  trigger:
  - platform: time
    at: 07:00:00
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.on_off_plug_in_unit_4
  mode: single
- id: '1606752964606'
  alias: ü§ñ Pause Shield TV (motion at front or back)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.aarlo_motion_front
    - binary_sensor.aarlo_motion_back
    to: 'on'
  condition:
  - condition: state
    entity_id: media_player.nvidia_shield_tv
    state: playing
  action:
  - service: media_player.media_play_pause
    data: {}
    entity_id: media_player.nvidia_shield_tv
  - service: script.tts_p20
    data:
      message: Motion detected at {{state.attributes.camera_name}}
  mode: single
- id: '1607362699584'
  alias: üîä Clear dismissed persistent notification (all devices; whitelisted only)
  description: ''
  trigger:
  - platform: event
    event_type: call_service
    event_data:
      domain: persistent_notification
      service: dismiss
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.service_data.notification_id in [''raining'']
      }}'
  action:
  - service: notify.all_devices
    data:
      message: clear_notification
      data:
        tag: '{{ trigger.event.data.service_data.notification_id }}'
  mode: single
- id: '1607992740551'
  alias: üéÆ Snooze alarm bedroom (Smart Switch)
  description: ''
  trigger:
  - device_id: da1237666189a9a364fa383795ba532d
    domain: deconz
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  - device_id: b26003b4b78afd0e5b2c3bcb3b06eeeb
    domain: deconz
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  condition:
  - condition: template
    value_template: "{{\n  ( as_timestamp(now()) - as_timestamp(state_attr(\n    \
      \  'automation.alarm_bedroom_daily_at_wakeup_time',\n      'last_triggered'\n\
      \    )) | int(0) ) <= 60\n}}"
  action:
  - service: automation.turn_off
    data: {}
    entity_id: automation.alarm_bedroom_daily_at_wakeup_time
  - service: automation.turn_on
    data: {}
    entity_id: automation.alarm_bedroom_daily_at_wakeup_time
  - service: media_player.media_stop
    data: {}
    entity_id: media_player.pi0_speaker_bedroom
  mode: single
- id: '1591988158985'
  alias: üéÆ Fireplace toggle (Magic Cube)
  description: ''
  trigger:
  - device_id: 7053d7e589bf4a4496cff59a24b7c83c
    domain: deconz
    platform: device
    type: remote_turned_clockwise
    subtype: ''
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.fireplace
    service: input_boolean.toggle
  mode: single
- id: '1604354230527'
  alias: üéÆ Ensuite maximum brightness (Magic Cube)
  description: ''
  trigger:
  - device_id: 7053d7e589bf4a4496cff59a24b7c83c
    domain: deconz
    platform: device
    type: remote_double_tap_any_side
    subtype: ''
  condition: []
  action:
  - service: light.turn_on
    entity_id: light.hue_white_light_1
    data:
      brightness: 255
  mode: single
- id: '1608564470366'
  alias: ü§ñ | üí° Basement light toggle (motion detected)
  description: ''
  use_blueprint:
    path: homeassistant/motion_light.yaml
    input:
      motion_entity: binary_sensor.presence_50
      light_target:
        entity_id: light.basement
      no_motion_wait: '30'
- id: '1608737163515'
  alias: ü§ñ | üîä Blink Attic lights (doorbell rang)
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.vibration_43
    to: 'on'
  condition: []
  action:
  - repeat:
      count: '2'
      sequence:
      - service: light.turn_on
        data:
          flash: short
        entity_id: light.attic
      - delay: 00:00:01
  mode: single
- id: '1609807066138'
  alias: ‚è∞ | üå°Ô∏è Attic heating on (weekdays at 08:30 when someone home)
  description: ''
  trigger:
  - platform: time
    at: 08:30:00
  condition:
  - condition: state
    entity_id: group.family
    state: home
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: switch.thermostat_program
    state: 'on'
  action:
  - service: climate.set_temperature
    data:
      temperature: 20.5
    entity_id: climate.thermostat_29
  - wait_for_trigger:
    - platform: state
      entity_id: light.attic
      to: 'on'
      for: 00:05:00
    timeout: 01:30:00
    continue_on_timeout: false
  - condition: template
    value_template: '{{ wait.completed }}'
  - service: climate.set_temperature
    data:
      temperature: 15
    entity_id: climate.thermostat_29
  mode: single
