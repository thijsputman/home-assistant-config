#!/usr/bin/env sh

set -e

mqtt_host="${1:?"Missing MQTT-broker hostname!"}"
mqtt_topic="${2:?"Missing MQTT-topic!"}"
ping_host="${3:-8.8.8.8}"
count="${4:-4}"

lock_file=/tmp/ping2mqtt.lock
sleep_pid=

# Ensure single instance of the script
if [ -f $lock_file ] ; then
  echo "Lock-file $lock_file exists!"
  exit 69
fi

# Store lock-file in /tmp (non-persistent storage). The script is executed upon
# "wanup" (WAN up), which can happen any number of times while the device is
# running. The lock-file prevents spawning an infinite number of scripts.
touch $lock_file

# Remove lock-file on script termination/exit
trap clean_up INT HUP TERM EXIT

clean_up(){
  rc="$?"
  rm "$lock_file"
  # Kill orphaned sleep-process
  if [ -n "$sleep_pid" ] ; then
    kill "$sleep_pid"
  fi
  # Reset EXIT-trap to prevent running clean_up twice in case of INT/TERM
  trap - EXIT
  exit "$rc"
}

while true; do

  # Idea courtesy of https://stackoverflow.com/a/59353917. Word-splitting is
  # required for this to work; hence the disabled ShellCheck warning...
  # shellcheck disable=SC2046
  set -- $(ping -c "$count" "$ping_host" | \
    grep round-trip | grep -oE "[[:digit:]]+\.[[:digit:]]{3}")

  # Ignore errors generated by mosquitto_pub
  mosquitto_pub -h "$mqtt_host" -t "$mqtt_topic" -m "$2" || true

  # Start sleep in background and wait for it to complete â€“ this way we don't
  # block on the sleep when receiving signals (i.e. TERM)
  sleep 1m & sleep_pid=$!
  wait $sleep_pid
  sleep_pid=

done
