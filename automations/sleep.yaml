# Note that input_boolean.everyone_asleep is toggled regardless of presence
# (i.e. it is also toggled when no-one is home). This keeps the overall setup
# as simple as possible. In the limited number of cases where asleep/awake-
# triggers should not cause things to happen when no-one is home, explicit
# exceptions are put in place...
- alias: üí§ | üí° Everyone asleep (all lights off)
  id: cdec9ae5-d391-4826-a957-36fb823a73a7
  trigger:
    - platform: state
      from: "on"
      to: "off"
      for: "00:20:00"
      entity_id: group.light_inside_rooms
  condition:
    - condition: state
      entity_id: input_boolean.everyone_asleep
      state: "off"
    - condition: state
      entity_id: group.light_inside_rooms
      state: "off"
    - condition: state
      entity_id: sensor.time_of_day
      state: night
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.everyone_asleep
  mode: single
# The "everyone awake"-transition fires once daily as a result of people waking
# up (at the first "wakeup" time of the day). Note that there are other events
# (irrespective of "wakeup" time) that can trigger this transition too...
- alias: üí§ | ‚è∞ Everyone awake (at ¬´wakeup¬ª time)
  id: dfe729c9-436a-4fdb-8970-b68492d9a1a2
  trigger:
    - platform: time
      at: input_datetime.wakeup
  condition:
    - condition: state
      entity_id: input_boolean.everyone_asleep
      state: "on"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.everyone_asleep
  mode: single
- alias: üí§ Set next ¬´wakeup¬ª (at ¬´wakeup¬ª time)
  id: 01d828d8-da3e-432c-8beb-0f20392d2f8e
  trigger:
    - platform: time
      at: input_datetime.wakeup
  condition:
    - condition: state
      entity_id: timer.wakeup_grace_time
      state: idle
  action:
    # The "grace-time" timer prevents the alarm (and related logic) from,
    # _unintentionally_ running multiple times in the same day. This occurs
    # when today's alarm triggers _before_ tomorrow's preset alarm time (as
    # defined below). If the alarm is to sound a second time during the same
    # day, simple cancel the timer...
    - service: timer.start
      entity_id: timer.wakeup_grace_time
    - choose:
        - conditions:
            - condition: time
              weekday: [fri, sat] # yamllint disable-line rule:brackets
          sequence:
            - service: input_datetime.set_datetime
              data:
                time: "09:00:00"
              entity_id: input_datetime.wakeup
        - conditions:
            - condition: time
              # yamllint disable-line rule:brackets
              weekday: [sun, mon, tue, wed, thu]
          sequence:
            - service: input_datetime.set_datetime
              data:
                time: "08:00:00"
              entity_id: input_datetime.wakeup
    # Unmute the wakeup alarm
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.wakeup_alarm_mute
  mode: single
- alias: üí§ Set ¬´wakeup light start¬ª time (on ¬´wakeup¬ª time change)
  id: 2067fdfb-bad3-40fb-aa7d-d35430dd5b78
  trigger:
    - platform: state
      entity_id: input_datetime.wakeup
  condition: []
  action:
    - service: input_datetime.set_datetime
      data:
        time: >-
          {{
            (state_attr('input_datetime.wakeup', 'timestamp') | int - 1200) |
              timestamp_custom('%H:%M:%S', false)
          }}
      entity_id: input_datetime.wakeup_light_start
  mode: single
- alias: üí° | üí§ Wakeup light bedroom (at ¬´wakeup light start¬ª time)
  id: 8dfa00b1-9749-4b77-b0c9-7eceaf146bf6
  trigger:
    - platform: time
      at: input_datetime.wakeup_light_start
  condition:
    - condition: state
      entity_id: light.bedroom
      state: "off"
    # N.B. Compared to the wakeup alarm automation (below) the omission of the
    # occupancy condition is intentionally (as the daily wakeup light is
    # considered to be part of occupancy simulation)
    - condition: state
      entity_id: timer.wakeup_grace_time
      state: idle
    - condition: state
      entity_id: input_boolean.wakeup_alarm_mute
      state: "off"
  action:
    - service: light.turn_on
      data:
        xy_color:
          - 0.4448
          - 0.4066
        brightness: 240
        transition: 1200
      entity_id: light.bedroom
    # Switch the Bedroom light off after 2 hours (accounting for the wakeup
    # light duration)
    - wait_for_trigger:
        - platform: state
          entity_id: light.bedroom
          from: "on"
          to: "off"
      timeout: "02:20:00"
      continue_on_timeout: true
    # Trigger expired ‚Äì continue; otherwise we abort (as the light was already
    # switched off)
    - condition: template
      value_template: >-
        {{ wait.trigger is none }}
    - service: light.turn_off
      entity_id: light.bedroom
  mode: single
  max_exceeded: silent
- alias: üí§ | üîä Wakeup alarm bedroom (at ¬´wakeup¬ª time)
  id: 4f9e08f9-b352-4945-b788-215e301ef883
  trigger:
    - platform: time
      at: input_datetime.wakeup
  condition:
    - condition: state
      state: home
      entity_id: group.family
    - condition: state
      entity_id: timer.wakeup_grace_time
      state: idle
    - condition: state
      entity_id: input_boolean.wakeup_alarm_mute
      state: "off"
  action:
    # Don't block on sounding the alarm
    - service: script.turn_on
      target:
        entity_id: script.wakeup_alarm
    # Wait for the snooze timer to start or for the "wakeup_alarm_silenced"
    # event ‚Äì both indicate interaction with the bedside Smart Switches
    - wait_for_trigger:
        - platform: state
          entity_id: timer.wakeup_snooze_time
          to: active
        - platform: event
          event_type: wakeup_alarm_silenced
      timeout: 300
      continue_on_timeout: true
    # No interaction; sound the alarm again after 5 minutes
    - condition: template
      value_template: >-
        {{ wait.trigger is none }}
    - service: script.turn_on
      target:
        entity_id: script.wakeup_alarm
  mode: single
- alias: üí§ | üïπÔ∏è Snooze wakeup alarm (bedside Smart Switches)
  id: 3c49fa1c-db0a-44ea-8fb3-8e57c515e310
  trigger:
    - device_id: da1237666189a9a364fa383795ba532d
      domain: deconz
      platform: device
      type: remote_button_short_press
      subtype: turn_on
    - device_id: b26003b4b78afd0e5b2c3bcb3b06eeeb
      domain: deconz
      platform: device
      type: remote_button_short_press
      subtype: turn_on
  condition:
    - condition: state
      entity_id: script.wakeup_alarm
      state: "on"
  action:
    # Stop the wakeup alarm ‚Äì the additional "media_stop" ensures the sound
    # stops playing right away (instead of at the end of the current play-loop)
    - service: script.turn_off
      target:
        entity_id: script.wakeup_alarm
    - service: media_player.media_stop
      data:
        entity_id: media_player.pi0_speaker_bedroom
    # The snooze timer allows other automations to modify their behaviour while
    # the wakeup alarm is snoozed (e.g. the Bedroom light can't be switched off
    # using the Smart Switches while the wakeup alarm is snoozed)
    - service: timer.start
      target:
        entity_id: timer.wakeup_snooze_time
    - wait_for_trigger:
        - platform: event
          event_type: timer.finished
          event_data:
            entity_id: timer.wakeup_snooze_time
      timeout: "01:00:00"
      continue_on_timeout: false
    # Sound the alarm again (non-blocking); ending this run of the automation.
    # We are now effectively in an alarm loop that can be broken by silencing
    # the wakeup alarm _or_ by not responding to it at all (hence there's no
    # risk of a runaway alarm loop).
    - service: script.turn_on
      target:
        entity_id: script.wakeup_alarm
  mode: single
  max_exceeded: silent
- alias: üí§ | üïπÔ∏è Silence wakeup alarm (bedside Smart Switches)
  id: 01722d26-3705-46c6-91c6-92700b39c4e0
  trigger:
    - device_id: da1237666189a9a364fa383795ba532d
      domain: deconz
      platform: device
      type: remote_button_double_press
      subtype: turn_on
    - device_id: b26003b4b78afd0e5b2c3bcb3b06eeeb
      domain: deconz
      platform: device
      type: remote_button_double_press
      subtype: turn_on
  condition:
    - condition: state
      entity_id: script.wakeup_alarm
      state: "on"
  action:
    - service: script.turn_off
      target:
        entity_id: script.wakeup_alarm
    - service: media_player.media_stop
      data:
        entity_id: media_player.pi0_speaker_bedroom
    # Let other automations know the wakeup alarm was silenced
    - event: wakeup_alarm_silenced
  mode: single
  max_exceeded: silent
