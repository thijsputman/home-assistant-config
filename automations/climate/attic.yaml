- alias: 🌡️ | 💡 Attic heating on (Attic lights on)
  id: e5978d8a-cfec-4b8d-a78d-03e973de84ae
  description: ""
  trigger:
    - platform: state
      entity_id: light.attic
      from: "off"
      to: "on"
      for: "00:05:00"
  condition:
    # Only act if the main (Living room) thermostat is on
    - condition: numeric_state
      entity_id: sensor.tado_smart_thermostat_setpoint
      above: 18.0
    - condition: state
      entity_id: climate.tado_smart_thermostat
      state: heat
  action:
    - service: climate.set_temperature
      data:
        temperature: 21.0
      entity_id: climate.tado_smart_radiator_attic
  mode: single
- alias: 🌡️ | 🤖 Attic heating retain setpoint (while lights are on)
  id: 4e9442c0-9b22-441a-9f3c-13fee3cedd52
  description: ""
  # This is primarily to prevent the tado°-schedule from switching the Attic
  # heating off on weekdays at 19:00 (while the lights is still on). Manual
  # adjustments also trigger this automation, but since it only triggers below
  # 18°, manual temperature adjustments are generally unaffected...
  trigger:
    - platform: numeric_state
      entity_id: sensor.tado_smart_radiator_attic_setpoint
      below: 18.0
  condition:
    - condition: state
      entity_id: light.attic
      state: "on"
    # Only act if the main (Living room) thermostat is on
    - condition: numeric_state
      entity_id: sensor.tado_smart_thermostat_setpoint
      above: 18.0
    - condition: state
      entity_id: climate.tado_smart_thermostat
      state: heat
  action:
    - service: climate.set_temperature
      data:
        temperature: 21.0
      entity_id: climate.tado_smart_radiator_attic
  mode: single
- alias: 🌡️ | 💡 Attic heating off (Attic lights off)
  id: 19c32aa8-2c41-4026-ba1a-798a34a2bf6b
  description: ""
  trigger:
    - platform: state
      entity_id: light.attic
      from: "on"
      to: "off"
      for: "00:05:00"
  condition:
    - condition: state
      entity_id: climate.tado_smart_radiator_attic
      state: heat
  action:
    - service: climate.set_temperature
      data:
        temperature: 12.0
      entity_id: climate.tado_smart_radiator_attic
  mode: single
- alias: 🌡️ | ⏰ Attic heating off (weekdays when lights remain off)
  id: fc16d0c4-d9ea-48da-ad28-ca9f83065f5d
  description: ""
  trigger:
    - platform: time
      at: "09:00:00"
  condition:
    - condition: time
      weekday: [mon, tue, wed, thu, fri] # yamllint disable-line rule:brackets
    # Only relevant if the Attic radiator is on
    - condition: numeric_state
      entity_id: sensor.tado_smart_radiator_attic_setpoint
      above: 18.0
    - condition: state
      entity_id: climate.tado_smart_radiator_attic
      state: heat
    # Waiting for the lights to remain off only makes sense if the lights are
    # off to begin with...
    - condition: state
      entity_id: light.attic
      state: "off"
  action:
    - wait_for_trigger:
        - platform: state
          entity_id: light.attic
          from: "off"
          to: "on"
      timeout: "01:30:00"
      continue_on_timeout: true
    # Only continue (i.e. switch the radiator off) if the timer expired (i.e.
    # the light in the Attic was not switched on within 90 minutes)
    - condition: template
      value_template: >-
        {{ wait.trigger is none }}
    - service: climate.set_temperature
      data:
        temperature: 12.0
      entity_id: climate.tado_smart_radiator_attic
  mode: single
- alias: 🌡️ | ✈️ Attic heating off (tado° from Away- to Home-mode)
  id: d8587843-f45f-48cc-811a-e7dbf346a31f
  description: ""
  trigger:
    # When tado° transitions from Away- to Home-mode, it restores all schedules
    # and thus potentially switches the Attic radiator on...
    - platform: state
      entity_id: climate.tado_attic
      attribute: preset_mode
      from: away
      to: home
      # Hold the state for a short while to ensure HomeKit (which we use for
      # radiator control) catches up with the online state...
      for: "00:01:00"
  condition:
    # Only relevant if the Attic radiator is on
    - condition: numeric_state
      entity_id: sensor.tado_smart_radiator_attic_setpoint
      above: 18.0
    - condition: state
      entity_id: climate.tado_smart_radiator_attic
      state: heat
  action:
    - service: climate.set_temperature
      data:
        temperature: 12.0
      entity_id: climate.tado_smart_radiator_attic
  mode: single
- alias: 🌡️ | 🤖 Attic heating off (Living room thermostat lowered)
  id: 529a20b2-7b28-4cf7-84c3-72c5d851d853
  description: ""
  trigger:
    # Mainly intended as a fail-safe to ensure the Attic radiator (which can
    # control the cv-boiler by itself) doesn't stay on throughout the night...
    - platform: numeric_state
      entity_id: sensor.tado_smart_thermostat_setpoint
      below: 18.0
  condition:
    # Only relevant if the Attic radiator is on
    - condition: numeric_state
      entity_id: sensor.tado_smart_radiator_attic_setpoint
      above: 18.0
    - condition: state
      entity_id: climate.tado_smart_radiator_attic
      state: heat
  action:
    - service: climate.set_temperature
      data:
        temperature: 12.0
      entity_id: climate.tado_smart_radiator_attic
  mode: single
# Keep the operation mode of the Attic thermostat in-sync with the main (i.e.
# Living room) thermostat. This generally happens just twice per year (once in
# Spring; once in Autumn) when the central heating gets switched on/off for the
# season. Using the Tado integration to ensure the operation mode change
# persists, which is not possible via HomeKit.
- alias: 🌡️ | 🤖 Attic heating operation mode (follow Living room thermostat)
  id: da50685d-7a61-470c-96d0-07c6ee84a53b
  description: ""
  trigger:
    - platform: state
      entity_id: climate.tado_living_room
  condition:
    # Only run if the states differ
    - condition: template
      value_template: >-
        {{ trigger.to_state.state != states('climate.tado_attic') }}
  action:
    - service: climate.set_hvac_mode
      data:
        hvac_mode: >-
          {{ trigger.to_state.state }}
      target:
        entity_id: climate.tado_attic
  mode: single
- alias: ❄️ | 👫 Airco – Attic on (occupied)
  id: f3bd94fa-4646-4c70-9e0d-fd7288579bfe
  description: ""
  trigger:
    - platform: state
      entity_id: light.attic
      from: "off"
      to: "on"
      for: "00:05:00"
  condition:
    - condition: state
      entity_id: input_boolean.airco_active
      state: "on"
    #  Attic temperature should to be above 24ºC for this to be useful
    - condition: numeric_state
      entity_id: sensor.temperature_3
      above: 24.0
    - condition: state
      entity_id: climate.tado_attic_ac
      state: "off"
  action:
    - service: climate.set_hvac_mode
      data:
        hvac_mode: auto
      target:
        entity_id: climate.tado_attic_ac
  mode: single
- alias: ❄️ | 👫 Airco – Attic off (unoccupied)
  id: 426b173e-cef1-4e6d-a7f0-a1249db7c745
  description: ""
  trigger:
    - platform: state
      entity_id: light.attic
      from: "on"
      to: "off"
      for: "00:05:00"
  condition:
    - condition: state
      entity_id: climate.tado_attic_ac
      state: auto
  action:
    - service: climate.set_hvac_mode
      data:
        hvac_mode: "off"
      target:
        entity_id: climate.tado_attic_ac
  mode: single
# On weekdays override the tado°-schedule (i.e. disable the airco) if the Attic
# remains unoccupied for half an hour after a scheduled activation
- alias: ❄️ | ⏰ Airco – Attic override schedule (remains unoccupied)
  id: bc7a77e4-3fad-4b78-a2aa-91b0e507681a
  description: ""
  trigger:
    - platform: time
      at: "09:00:00"
    - platform: time
      at: "14:00:00"
  condition:
    - condition: time
      weekday: [mon, tue, wed, thu, fri] # yamllint disable-line rule:brackets
    # Only relevant if the airco has its schedule enabled
    - condition: state
      entity_id: climate.tado_attic_ac
      state: auto
    # Waiting for the lights to remain off only makes sense if the lights are
    # off to begin with...
    - condition: state
      entity_id: light.attic
      state: "off"
  action:
    - wait_for_trigger:
        - platform: state
          entity_id: light.attic
          from: "off"
          to: "on"
      timeout: "00:30:00"
      continue_on_timeout: true
    # Only continue (i.e. switch the airco off) if the timer expired (i.e. the
    # Attic was not occupied within half an hour)
    - condition: template
      value_template: >-
        {{ wait.trigger is none }}
    - service: climate.set_hvac_mode
      data:
        hvac_mode: "off"
      target:
        entity_id: climate.tado_attic_ac
  mode: single
# Prevent the tado°-schedule from switching the airco off at 19:00 if the Attic
# is still occupied
- alias: ❄️ | ⏰ Airco – Attic override schedule (occupied)
  id: 29a57844-67d5-4a05-8fc8-2abef78c0943
  description: ""
  trigger:
    # Pre-empt schedule change – trigger slightly before 19:00
    - platform: time
      at: "18:59:00"
  condition:
    - condition: time
      weekday: [mon, tue, wed, thu, fri] # yamllint disable-line rule:brackets
    #  Attic temperature should to be above 24ºC for this to be useful
    - condition: numeric_state
      entity_id: sensor.temperature_3
      above: 24.0
    - condition: state
      entity_id: climate.tado_attic_ac
      state: auto
    - condition: state
      entity_id: light.attic
      state: "on"
  action:
    - variables:
        last_swing_mode: >-
          {{ state_attr('climate.tado_attic_ac', 'swing_mode') }}
        # HomeKit updates much faster – prefer that for the temperature
        last_temperature: >-
          {{ state_attr('climate.tado_smart_ac_control_attic', 'temperature') }}
    # Override tado°-schedule with manual "cool"-mode
    - service: script.airco_set_operating_mode
      data:
        entity_id: climate.tado_attic_ac
        hvac_mode: cool
        swing_mode: >-
          {{ last_swing_mode }}
        temperature: >-
          {{ last_temperature }}
    # Wait for the Attic to not be occupied anymore
    - wait_for_trigger:
        - platform: state
          entity_id: light.attic
          from: "on"
          to: "off"
      timeout: "04:01:00" # Wait until 22:00 sharp
      continue_on_timeout: true
    # Restore tado°-schedule (i.e. switch off)
    - service: climate.set_hvac_mode
      data:
        hvac_mode: auto
      target:
        entity_id: climate.tado_attic_ac
  mode: single
- alias: ❄️ | 🚪 Switch off Airco – Attic (window open)
  id: 717e590f-b4d7-4cf9-8efd-c540f5ea3298
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.openclose_33
      from: "off"
      to: "on"
    # Using HomeKit to trigger – triggers faster than the online integration
    - platform: state
      entity_id: climate.tado_smart_ac_control_attic
      to: cool
  condition:
    - condition: state
      entity_id: binary_sensor.openclose_33
      state: "on"
    - condition: state
      entity_id: climate.tado_smart_ac_control_attic
      state: cool
  action:
    - variables:
        # Take state from the (online) tadoº integration (so we can distinguish
        # between "cool" and "auto" hvac-modes)
        last_hvac_mode: >-
          {{ states('climate.tado_attic_ac') }}
        last_swing_mode: >-
          {{ state_attr('climate.tado_attic_ac', 'swing_mode') }}
        # HomeKit updates much faster, so prefer that for the temperature
        last_temperature: >-
          {{ state_attr('climate.tado_smart_ac_control_attic', 'temperature') }}
    # Control via (online) tadoº integration – this ensures a planned schedule
    # change doesn't overrule the off-state (and thus switches on the airco
    # regardless of the fact the window is still open)
    - service: climate.turn_off
      data: {}
      target:
        entity_id: climate.tado_attic_ac
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          targetDevices: home
          channel: Notification
          group: climate
          tag: airco_attic_window
          title: ❄️ Attic airco switched off – the window is open
          message: >-
            Please close the window in the Attic to allow the airco to switch
            back to {{ last_hvac_mode }}-mode...
    # Wait for the window to close or a manual override to occur
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.openclose_33
          from: "on"
          to: "off"
        - platform: state
          entity_id: climate.tado_smart_ac_control_attic
          # HomeKit only reports "off" and "cool"
          from: "off"
          to: cool
      timeout: "06:00:00"
      continue_on_timeout: true
    - service: persistent_notification.dismiss
      data:
        notification_id: airco_attic_window
    # Only restore previous state if "window closed" triggered
    - condition: template
      value_template: >-
        {{ wait.trigger.entity_id == 'binary_sensor.openclose_33' }}
    # Use the (online) tadoº integration to restore so we can properly restore
    # hvac- and swing-modes (even though it's slow to update its state, commands
    # come through without delay)...
    - choose:
        # No need to restore swing-mode or temperature in "auto" hvac-mode
        - conditions:
            - condition: template
              value_template: >-
                {{ last_hvac_mode == 'auto' }}
          sequence:
            - service: climate.set_hvac_mode
              data:
                hvac_mode: >-
                  {{ last_hvac_mode }}
              target:
                entity_id: climate.tado_attic_ac
      default:
        - service: script.airco_set_operating_mode
          data:
            entity_id: climate.tado_attic_ac
            hvac_mode: >-
              {{ last_hvac_mode }}
            swing_mode: >-
              {{ last_swing_mode }}
            temperature: >-
              {{ last_temperature }}
  mode: single
  max_exceeded: silent
