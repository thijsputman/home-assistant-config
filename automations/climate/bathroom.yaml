- alias: ðŸ’¨ | ðŸ¤– Bathroom fan on (Î”ðŸ’§ > 0.8%/min)
  id: 80c4a53f-223b-4dd9-95f5-b29c51ed6ffa
  trigger:
    - platform: numeric_state
      entity_id: sensor.humidity_change_bathroom
      above: 0.8
  condition:
    - condition: state
      entity_id: binary_sensor.occupancy_bathroom
      state: "on"
  action:
    # The aim is to only act if humidity is _above_ 50% â€“ if it's below that
    # level, wait for a bit to see if the threshold is reached (as we trigger
    # based on rising humidity)
    - if:
        - condition: numeric_state
          entity_id: sensor.humidity_25
          below: 50.0
      then:
        - wait_for_trigger:
            - platform: numeric_state
              entity_id: sensor.humidity_25
              above: 50.0
          timeout: "00:10:00"
          continue_on_timeout: false
    - service: fan.turn_on
      target:
        entity_id: fan.bathroom
- alias: ðŸ’¨ | ðŸ¤– Bathroom fan off (Î”ðŸ’§ < 0.4%/min; 40 minute rundown)
  id: 150bbec5-df6a-4d4b-9452-262f24ca47a7
  trigger:
    # We aim to determine when the humidity stops fluctuating (at which point
    # further running the fan has no benefit)
    - platform: numeric_state
      entity_id: sensor.humidity_change_bathroom
      value_template: >-
        {{ state.state | float | abs }}
      below: 0.4
      for: "00:40:00"
  condition:
    - condition: state
      entity_id: fan.bathroom
      state: "on"
  action:
    - service: fan.turn_off
      target:
        entity_id: fan.bathroom
# Backstop in case the automated "off" fails
- alias: ðŸ’¨ | ðŸ¤– Bathroom fan off (after 4 hours)
  id: e16ceadd-701f-4c72-9df0-50910099b2fb
  trigger:
    - platform: state
      entity_id: fan.bathroom
      to: "on"
      for: "04:00:00"
  condition: []
  action:
    - service: fan.turn_off
      target:
        entity_id: fan.bathroom
