- alias: 💡 | ✈️ Inside lights off when everyone away (daily between 23:00 - 01:00)
  description: ''
  trigger:
  - platform: time
    at: '23:00:00'
  condition:
  - condition: state
    entity_id: group.family
    state: not_home
  action:
  - delay: >-
      {{ range(0, 7200) | random }}
  - condition: state
    entity_id: group.family
    state: not_home
  - service: script.lights_out
    data: {}
  mode: single
- alias: 💡 | ✈️ Attic lights on when everyone away (most weekdays at dusk)
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.time_of_day
    from: 'day'
    to: 'dusk'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: group.family
    state: not_home
  - condition: template
    value_template: >-
      {{ (range(0, 99) | random) > 15 }}
  # Only run if the Attic lights haven't been switched off yet by the other
  # Attic occupancy simulation automation.
  # This effectively disables both automations (the "off"-automation in turn
  # depends on this automation running) if dusk is after 19:30±00:30 (at which
  # point the Attic lights become irrelevant for occupancy simulation).
  - condition: template
    value_template: >-
      {{
        state_attr(
          'automation.attic_lights_off_when_everyone_away_weekdays_between_19_00_20_00',
          'last_triggered'
        ) != none and
        now().strftime('%j')|int > state_attr(
          'automation.attic_lights_off_when_everyone_away_weekdays_between_19_00_20_00',
          'last_triggered'
        ).strftime('%j')|int
      }}
  action:
  - service: hue.hue_activate_scene
    data:
      group_name: Attic
      scene_name: Away
  mode: single
- alias: 💡 | ✈️ Attic lights off when everyone away (weekdays between 19:00 - 20:00)
  # N.B. This automation's name is used in the previous automation!
  description: ''
  trigger:
  - platform: time
    at: '19:00:00'
  condition:
  - condition: state
    state: 'on'
    entity_id: light.attic
  - condition: state
    entity_id: group.family
    state: not_home
  action:
  - delay: >-
      {{ range(0, 3600) | random }}
  - condition: state
    entity_id: group.family
    state: not_home
  - service: light.turn_off
    data: {}
    entity_id: light.attic
  mode: single
