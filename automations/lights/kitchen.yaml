- alias: ðŸ’¡ | ðŸ‘‹ Kitchen counter & cupboards toggle (motion detected)
  id: ff4ddb05-91d8-431d-9226-b51e0bbd9b36
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.presence_53 # Sink
        - binary_sensor.presence_155 # Coffee machine
      from: "off"
      to: "on"
  condition:
    # Don't trigger when Kitchen is "Bright (custom)" â€“ that's bright enough;
    # there's another automation handling motion for that situation
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.hue_scene_kitchen
          state: Bright (custom)
    - condition: or
      conditions:
        # One sensor triggers regardless of light level...
        - condition: template
          value_template: >-
            {{ trigger.entity_id == 'binary_sensor.presence_155' }}
        # ...the other not
        - condition: and
          conditions:
            - condition: template
              value_template: >-
                {{ trigger.entity_id == 'binary_sensor.presence_53' }}
            - condition: numeric_state
              entity_id: sensor.lightlevel_55
              # N.B. Same threshold value as in the next automation
              below: 200
    # Only switch on the lights under normal circumstances (i.e. the alarm is
    # either disarmed or "Armed night")
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
  action:
    - service: scene.turn_on
      target:
        entity_id: scene.kitchen_counter_cupboards_activity
    # Wait for _all_ motion sensors to clear â€“ otherwise race conditions are
    # possible where the lights go off (because one sensor clears) and never
    # come back on again (because the other sensor never clears due to
    # ongoing motion and thus never retriggers the lights).
    - wait_template: >-
        {{
          states('binary_sensor.presence_53') == 'off' and
          states('binary_sensor.presence_155') == 'off'
        }}
    - delay: "00:03:00"
    # If the Kitchen scene is not "Bright (custom)" and the scene for "Kitchen
    # counter & cupboards" is still "Activity", no changes were made to the
    # lighting (either manual, or by the "sustained activity"-automation). We
    # can safely restore the previous scene for the "Kitchen" as a whole...
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.hue_scene_kitchen
          state: Bright (custom)
    - condition: state
      entity_id: sensor.hue_scene_kitchen_counter_cupboards
      state: Activity
    # Changing the "Kitchen counter & cupboards" scene doesn't change the
    # "Kitchen" scene â€“ we thus can simply re-apply the active scene
    - service: script.hue_activate_scene
      data:
        scene_entity: sensor.hue_scene_kitchen
  mode: restart
- alias: ðŸ’¡ | ðŸ‘‹ Kitchen scene to "Bright (custom)" (sustained activity)
  id: ac457661-49b6-4ee6-b0cf-ceac3bd4ccab
  trigger:
    - platform: state
      id: activity
      entity_id:
        - binary_sensor.presence_53
        - binary_sensor.presence_155
      from: "off"
      to: "on"
    # Initial trigger only considers the sensor above the sink
    - platform: state
      id: sustained_activity
      entity_id: binary_sensor.presence_53
      from: "off"
      to: "on"
      # Empirically determined to be the threshold for "sustained activity" ðŸ˜‰
      for: "00:01:30"
  condition:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
    - condition: or
      conditions:
        - condition: trigger
          id: activity
        # Initial trigger should respect maximum light level
        - condition: and
          conditions:
            - condition: trigger
              id: sustained_activity
            - condition: numeric_state
              entity_id: sensor.lightlevel_55
              # N.B. Same threshold value as in the previous automation
              below: 200
  action:
    # Only attempt to change scene on the initial (sustained activity) trigger.
    # The additional (more prolific) trigger only serves to reset the delay
    # timer...
    - choose:
        - conditions:
            - condition: trigger
              id: sustained_activity
            - condition: not
              conditions:
                - condition: state
                  entity_id: sensor.hue_scene_kitchen
                  state: Bright (custom)
          sequence:
            - service: scene.turn_on
              target:
                entity_id: scene.kitchen_bright_custom
    - wait_template: >-
        {{
          states('binary_sensor.presence_53') == 'off' and
          states('binary_sensor.presence_155') == 'off'
        }}
    - delay: "00:06:00"
    # This restores the previous scene even if "Bright (custom)" was applied
    # manually. Given this automation aims to make manually applying "Bright
    # (custom)" in the Kitchen unnecessary, this should not pose an issue...
    - condition: state
      entity_id: sensor.hue_scene_kitchen
      state: Bright (custom)
    # Abort if the Living Room is "Active" and we're about to restore the
    # Kitchen to "Daytime" â€“ in this case it's better to keep the Kitchen lights
    # aligned with the Living Room (as it appears someone manually overrode the
    # daytime lights in the Living Room)
    # Note that a plain NOT-condition will not work here: In the below situation
    # that would equate an AND-condition with two nested NOTs. Situations where
    # _either_ the Living Room _or_ the Kitchen condition would be true, would
    # lead to an unwanted abort of the automation in that case...
    - condition: or
      conditions:
        - condition: not
          conditions:
            - condition: state
              entity_id: sensor.hue_scene_living_room
              state: Active
        - condition: not
          conditions:
            - condition: state
              entity_id: sensor.hue_scene_kitchen_previous
              state: Daytime
    # Don't restore daytime lighting when it's not daytime (anymore) â€“ restoring
    # to "Ambiance" seems most sensible at this point instead
    - if:
        - condition: not
          conditions:
            - condition: state
              entity_id: sensor.time_of_day
              state: day
        - condition: state
          entity_id: sensor.hue_scene_kitchen_previous
          state: Daytime
      then:
        - service: scene.turn_on
          target:
            entity_id: scene.kitchen_ambiance
      # Otherwise, restore Kitchen to previous scene
      else:
        - service: script.hue_activate_scene
          data:
            scene_entity: sensor.hue_scene_kitchen_previous
  mode: restart
