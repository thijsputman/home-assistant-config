- alias: ðŸ’¡ | ðŸ‘‹ Kitchen counter & cupboards toggle (motion detected)
  id: ff4ddb05-91d8-431d-9226-b51e0bbd9b36
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.presence_53 # Sink
        - binary_sensor.presence_155 # Coffee machine
      from: "off"
      to: "on"
  condition:
    # Don't trigger when Kitchen is "Bright (custom)" â€“ that's bright enough;
    # there's another automation handling motion for that situation
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.hue_scene_kitchen
          state: Bright (custom)
    - condition: or
      conditions:
        # One sensor triggers regardless of light level...
        - condition: template
          value_template: >-
            {{ trigger.entity_id == 'binary_sensor.presence_155' }}
        # ...the other not
        - condition: and
          conditions:
            - condition: template
              value_template: >-
                {{ trigger.entity_id == 'binary_sensor.presence_53' }}
            - condition: numeric_state
              entity_id: sensor.lightlevel_55
              # N.B. Same threshold value as in the next automation
              below: 200
    # Only switch on the lights under normal circumstances (i.e. the alarm is
    # either disarmed or "Armed night")
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
  action:
    - service: hue.hue_activate_scene
      data:
        group_name: Kitchen counter & cupboards
        scene_name: Activity
    # Wait for _all_ motion sensors to clear â€“ otherwise race conditions are
    # possible where the lights go off (because one sensor clears) and never
    # come back on again (because the other sensor never clears due to
    # ongoing motion and thus never retriggers the lights).
    # The "!= 'on'" check (as opposed to a "== 'off'") is intentional as it is
    # a bit more forgiving in cases where a sensor drops off the network (i.e.
    # "unavailable") while this automation is running.
    - wait_template: >-
        {{
          states('binary_sensor.presence_53') == 'off' and
          states('binary_sensor.presence_155') == 'off'
        }}
    - delay: "00:03:00"
    # If the scene for "Kitchen counter & cupboards" is still "Activity", no
    # changes were made to the lighting. We can safely restore the previous
    # scene for the "Kitchen" as a whole...
    - condition: state
      entity_id: sensor.hue_scene_kitchen_counter_cupboards
      state: Activity
    - choose:
        - conditions:
            - condition: state
              entity_id: sensor.hue_scene_kitchen
              state: <Off>
          sequence:
            - service: light.turn_off
              data:
                entity_id: light.kitchen
      default:
        - condition: not
          conditions:
            - condition: state
              entity_id: sensor.hue_scene_kitchen
              state: <Unknown>
        # Changing the "Kitchen counter & cupboards" scene doesn't change the
        # "Kitchen" scene â€“ we can simply re-apply the already active scene
        - service: hue.hue_activate_scene
          data:
            group_name: Kitchen
            scene_name: >-
              {{ states('sensor.hue_scene_kitchen') }}
  mode: restart
- alias: ðŸ’¡ | ðŸ‘‹ Kitchen scene to "Bright (custom)" (sustained activity)
  id: ac457661-49b6-4ee6-b0cf-ceac3bd4ccab
  trigger:
    - platform: state
      id: activity
      entity_id:
        - binary_sensor.presence_53
        - binary_sensor.presence_155
      from: "off"
      to: "on"
    # Initially trigger only considers the sensor above the sink
    - platform: state
      id: sustained_activity
      entity_id: binary_sensor.presence_53
      from: "off"
      to: "on"
      # Empirically determined to be the threshold for "sustained activity" ðŸ˜‰
      for: "00:01:30"
  condition:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
    - condition: or
      conditions:
        - condition: trigger
          id: activity
        # Initial trigger should respect maximum light level
        - condition: and
          conditions:
            - condition: trigger
              id: sustained_activity
            - condition: numeric_state
              entity_id: sensor.lightlevel_55
              # N.B. Same threshold value as in the previous automation
              below: 200
  action:
    # Only attempt to change scene on the initial (sustained activity) trigger.
    # The additional (more prolific) trigger only serves to reset the delay
    # timer...
    - choose:
        - conditions:
            - condition: trigger
              id: sustained_activity
            - condition: not
              conditions:
                - condition: state
                  entity_id: sensor.hue_scene_kitchen
                  state: Bright (custom)
          sequence:
            - service: hue.hue_activate_scene
              data:
                group_name: Kitchen
                scene_name: Bright (custom)
    - wait_template: >-
        {{
          states('binary_sensor.presence_53') == 'off' and
          states('binary_sensor.presence_155') == 'off'
        }}
    - delay: "00:06:00"
    # This restores the previous scene even if "Bright (custom)" was applied
    # manually. Given this automation aims to make manually applying "Bright
    # (custom)" in the Kitchen unnecessary, this should not pose an issue...
    - condition: state
      entity_id: sensor.hue_scene_kitchen
      state: Bright (custom)
    # Abort if the Living Room is "Active" and we're about to restore the
    # Kitchen to "Daytime" â€“ in this case it's better to keep the Kitchen lights
    # aligned with the Living Room (as it appears someone manually overrode the
    # daytime lights in the Living Room)
    # Note that a plain NOT-condition will not work here: In the below situation
    # that would equate an AND-condition with two nested NOTs. Situations where
    # _either_ the Living Room _or_ the Kitchen condition would be true, would
    # lead to an unwanted abort of the automation in that case...
    - condition: or
      conditions:
        - condition: not
          conditions:
            - condition: state
              entity_id: sensor.hue_scene_living_room
              state: Active
        - condition: not
          conditions:
            - condition: state
              entity_id: sensor.hue_scene_kitchen_previous
              state: Daytime
    - choose:
        - conditions:
            - condition: template
              value_template: >-
                {{ states('sensor.hue_scene_kitchen_previous') == '<Off>' }}
          sequence:
            - service: light.turn_off
              data:
                entity_id: light.kitchen
      default:
        - condition: not
          conditions:
            - condition: state
              entity_id: sensor.hue_scene_kitchen_previous
              state:
                - unknown
                - unavailable
        - service: hue.hue_activate_scene
          data:
            group_name: Kitchen
            scene_name: >-
              {{ states('sensor.hue_scene_kitchen_previous') }}
  mode: restart
- alias: ðŸ’¡ | ðŸ‘‹ Toilet light toggle (motion detected)
  id: e884ea40-fdf9-4069-ad27-4e09d8a45e2e
  trigger:
    - platform: state
      entity_id: binary_sensor.presence_60
      from: "off"
      to: "on"
  condition:
    # Only switch on the lights under normal circumstances (i.e. the alarm is
    # either disarmed or "Armed night")
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
  action:
    - service: light.turn_on
      data:
        brightness: 255
        kelvin: 4500
      target:
        entity_id: light.toilet
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.presence_60
          from: "on"
          to: "off"
    - delay: 270
    - service: light.turn_on
      data:
        brightness_step_pct: -30
      target:
        entity_id: light.toilet
    - delay: 30
    - service: light.turn_off
      target:
        entity_id: light.toilet
  mode: restart
- alias: ðŸ’¡ | ðŸ‘‹ Basement light toggle (motion detected)
  id: 7a1ebf52-c69e-4bf5-8670-0b32bba52600
  trigger:
    - platform: state
      entity_id: binary_sensor.presence_50
      from: "off"
      to: "on"
  condition:
    # Only switch on the lights under normal circumstances (i.e. the alarm is
    # either disarmed or "Armed night")
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
  action:
    - service: light.turn_on
      entity_id: light.basement
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.presence_50
          from: "on"
          to: "off"
    - delay: 60
    - service: light.turn_off
      entity_id: light.basement
  mode: restart
- alias: ðŸ’¡ | ðŸ‘‹ Wardrobe light toggle (motion detected)
  id: f30e4af7-6b31-4062-8f12-25fde6ae3577
  trigger:
    - platform: state
      entity_id: binary_sensor.presence_63
      from: "off"
      to: "on"
  condition:
    - condition: numeric_state
      entity_id: sensor.lightlevel_65
      below: 50
    # Only switch on the lights under normal circumstances (i.e. the alarm is
    # either disarmed or "Armed night")
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
  action:
    - choose:
        # Make the light a bit kinder on the eyes late at night
        - conditions:
            - condition: state
              entity_id: input_boolean.everyone_asleep
              state: "on"
          sequence:
            - service: light.turn_on
              data:
                brightness: 40
                kelvin: 2200
              entity_id: light.wardrobe
      default:
        - service: light.turn_on
          data:
            brightness: 255
            kelvin: 2900
          entity_id: light.wardrobe
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.presence_63
          from: "on"
          to: "off"
    - delay: 120
    - service: light.turn_off
      entity_id: light.wardrobe
  mode: restart
- alias: ðŸ’¡ | ðŸ‘‹ Bathroom light toggle (motion detected)
  id: 63b00f23-043a-4d8b-9974-03a7e850e897
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.presence_68
        - binary_sensor.presence_71
      from: "off"
      to: "on"
    # Trigger (i.e., restart) the automation when it gets too dark in the
    # Bathroom; this prevents a "live-lock" where continued motion prevents the
    # automation from triggering again (the sensor remains in the "on"-state)
    - platform: numeric_state
      entity_id: sensor.lightlevel_bathroom
      below: 200
  condition:
    - condition: numeric_state
      entity_id: sensor.lightlevel_bathroom
      below: 200
    # Light-level trigger should only proceed if motion is detected
    - condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.presence_68
          state: "on"
        - condition: state
          entity_id: binary_sensor.presence_71
          state: "on"
    # Only switch on the lights under normal circumstances (i.e. the alarm is
    # either disarmed or "Armed night")
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
  action:
    - choose:
        # Make the light a bit kinder on the eyes late at night
        - conditions:
            - condition: state
              entity_id: input_boolean.everyone_asleep
              state: "on"
          sequence:
            - service: light.turn_on
              data:
                brightness: 60
                kelvin: 2200
              entity_id: light.bathroom
      default:
        - service: light.turn_on
          data:
            brightness: 255
            kelvin: 2900
          entity_id: light.bathroom
    # Wait for _all_ motion sensors to clear
    - wait_template: >-
        {{
          states('binary_sensor.presence_68') == 'off' and
          states('binary_sensor.presence_71') == 'off'
        }}
    - delay: 150
    - service: light.turn_on
      data:
        brightness_step_pct: -30
      target:
        entity_id: light.bathroom
    - delay: 30
    - service: light.turn_off
      target:
        entity_id: light.bathroom
  mode: restart
- alias: >-
    ðŸ’¡ | ðŸ‘‹ Upstairs hallway light toggle (motion detected; everyone asleep)
  id: 456be834-0809-442b-a022-2827923c3358
  trigger:
    - platform: state
      entity_id: binary_sensor.presence_127
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.everyone_asleep
      state: "on"
    # Only switch on the lights under normal circumstances (i.e. the alarm is
    # either disarmed or "Armed night")
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
  action:
    - service: light.turn_on
      data:
        brightness: 40
      entity_id: light.upstairs_hallway
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.presence_127
          from: "on"
          to: "off"
    - delay: 60
    - service: light.turn_off
      entity_id: light.upstairs_hallway
  mode: restart
- alias: >-
    ðŸ’¡ | ðŸ‘‹ Downstairs hallway light toggle (motion detected; everyone asleep)
  id: 6d3da877-2a4f-453a-a4a2-cda751548fe0
  trigger:
    # Trigger only on the sensor in the staircase (i.e. someone walks down from
    # the bedroom at night)
    - platform: state
      entity_id: binary_sensor.presence_121
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.everyone_asleep
      state: "on"
    # Only switch on the lights under normal circumstances (i.e. the alarm is
    # either disarmed or "Armed night")
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
  action:
    - service: light.turn_on
      data:
        brightness: 40
      entity_id:
        - light.hue_filament_bulb_1_4
        - light.hue_filament_bulb_1_5
    # Wait for _all_ motion sensors in the downstairs hallway to clear
    - wait_template: >-
        {{
          states('binary_sensor.presence_121') == 'off' and
          states('binary_sensor.presence_123') == 'off' and
          states('binary_sensor.presence_125') == 'off'
        }}
    - delay: 60
    - service: light.turn_off
      entity_id:
        - light.hue_filament_bulb_1_4
        - light.hue_filament_bulb_1_5
  mode: restart
- alias: ðŸ’¡ | ðŸ‘‹ Attic hallway light toggle (motion detected)
  id: 6eb9fb1b-c177-4e11-986c-d6cfec41454a
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.presence_91
        - binary_sensor.presence_92
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: timer.attic_hallway_motion_pause
      state: idle
    # Only switch on the lights under normal circumstances (i.e. the alarm is
    # either disarmed or "Armed night")
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state:
        - disarmed
        - armed_night
  action:
    - choose:
        # Upstairs
        - conditions:
            - condition: template
              value_template: >-
                {{ trigger.entity_id == 'binary_sensor.presence_91' }}
          sequence:
            - service: light.turn_on
              data:
                entity_id: light.smart_relay_4
        # Downstairs
        - conditions:
            - condition: template
              value_template: >-
                {{ trigger.entity_id == 'binary_sensor.presence_92' }}
          sequence:
            - service: light.turn_on
              data:
                entity_id: light.smart_relay_3
      default:
        - service: light.turn_on
          data:
            entity_id:
              - light.smart_relay_3
              - light.smart_relay_4
    # Wait for _all_ motion sensors to clear
    - wait_template: >-
        {{
          states('binary_sensor.presence_91') == 'off' and
          states('binary_sensor.presence_92') == 'off'
        }}
    - delay: 60
    - condition: state
      entity_id: timer.attic_hallway_motion_pause
      state: idle
    - service: light.turn_off
      data:
        # Using the "light.attic_hallway" light group appears to be not 100%
        # reliable â€“ addressing the relays individually is...
        entity_id:
          - light.smart_relay_3
          - light.smart_relay_4
  mode: restart
