# The Gledopto controllers in the Kitchen are a bit stubborn; they don't always
# respond to the first scene change request nor do they always properly switch
# off when asked to do so... See "ðŸ“„ docs/HUE.md" for more details.
# The below aims to keep the "off" state of the Gledopto controllers in line
# with the other lights in the Kitchen (which don't exhibit this aberrant
# behaviour).
- alias: ðŸ’¡ | ðŸ©¹ Enforce "off"-state for Gledopto controllers
  id: 77eb93cc-0e5f-4ad9-9153-e2f7858b1688
  trigger:
    - platform: state
      entity_id:
        - light.extended_color_light_1_3
        - light.extended_color_light_1_4
      to: "on"
      for: 10
  condition:
    # Whenever these two lights-strips are on, the lights in the cupboards
    # should also be on â€“ if not, toggle the light-strips back off...
    - condition: state
      # Checking one of the four cupboard lights is sufficient
      entity_id: light.hue_color_spot_2_2
      state: "off"
  action:
    - service: light.turn_off
      target:
        entity_id:
          - light.extended_color_light_1_3
          - light.extended_color_light_1_4
  mode: restart
# Change scene in Kitchen twice to ensure the Gledopto controllers follow
- alias: ðŸ’¡ | ðŸ©¹ Enforce Kitchen scene change for Gledopto controllers
  id: 66dc6374-f19a-437c-966b-0679400fc2b5
  trigger:
    # Switching Kitchen counter & cupboards to "Activity" might cause Kitchen
    # to momentarily transition to <Unknown> (and then right back to its
    # previous/actual state). By prioritising (and blocking momentarily) on the
    # Kitchen counter & cupboards trigger, we prevent a race-condition where
    # the Kitchen trigger might undo the intended scene change.
    - platform: state
      entity_id: sensor.hue_scene_kitchen_counter_cupboards
      to:
        - Activity
    - platform: state
      entity_id: sensor.hue_scene_kitchen
      to:
        - Daytime
        - Ambiance
        - Movie
        - Bright (custom)
      for: "00:00:01"
  condition: []
  action:
    - variables:
        group_name: >-
          {% if trigger.entity_id ==
            'sensor.hue_scene_kitchen_counter_cupboards' %}
            Kitchen counter & cupboards
          {% elif trigger.entity_id == 'sensor.hue_scene_kitchen' %}
            Kitchen
          {% endif %}
    - condition: template
      value_template: >-
        {{ group_name is defined }}
    - service: hue.hue_activate_scene
      data:
        group_name: >-
          {{ group_name }}
        scene_name: >-
          {{ trigger.to_state.state }}
    - delay: 5
  mode: single
  max_exceeded: silent
# Occasionally, the Innr colour bulbs in the Garden refuse a scene change, so
# whenever we change the Garden, change it twice to ensure they properly follow
- alias: ðŸ’¡ | ðŸ©¹ Enforce Garden scene change for Innr bulbs
  id: 0c7cd39c-6355-45ee-9e53-ab2d3c940f08
  trigger:
    - platform: state
      entity_id: sensor.hue_scene_garden
      to:
        - Active
        - Ambiance
        - Summer Night
      # Best result is achieved if the repeat command is slightly delayed
      for: "00:00:03"
  condition: []
  action:
    - service: hue.hue_activate_scene
      data:
        group_name: Garden
        scene_name: >-
          {{ trigger.to_state.state }}
  mode: restart
- alias: ðŸ’¡ | ðŸ©¹ Log Hue scene heuristic failures
  id: c47f1d4b-d0dc-49e9-ae8d-0af0a2c3a092
  trigger:
    - platform: state
      entity_id:
        - sensor.hue_scene_living_room
        - sensor.hue_scene_kitchen
        - sensor.hue_scene_kitchen_counter_cupboards
        - sensor.hue_scene_garden
      to:
        - <Unknown>
      # Don't log recoverable failures
      for: "00:00:20"
  condition: []
  action:
    - variables:
        room: >-
          {{
            trigger.entity_id | replace('sensor.hue_scene_', '')
          }}
        num_lights: >-
          {#
            In hindsight, better choices could have been made with regards to
            naming the groups... ðŸ˜‡
          #}
          {% if room == 'kitchen_counter_cupboards' %}
            {{
              expand('group.hue_zone_' ~ room) |
                selectattr('state', '==', 'on') | list | length
            }}
          {% else %}
            {{
              expand('group.hue_room_' ~ room) |
                selectattr('state', '==', 'on') | list | length
            }}
          {% endif %}
        brightness: >-
          {{ state_attr('light.' ~ room, 'brightness') | int(-1) }}
        xy_color: >-
          {%
            if state_attr('light.' ~ room, 'xy_color') == none
          %}
            {{ [-1.0, -1.0] }}
          {% else %}
            {%
              set xy_color = state_attr('light.' ~ room, 'xy_color')
            %}
            {{ [xy_color[0] | round(2), xy_color[1] | round (2)] }}
          {% endif %}
    - service: system_log.write
      data:
        level: warning
        message: >-
          Hue scene heuristic failure: {{ trigger.entity_id }} transitioned from
          {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
          (num_lights: {{ num_lights}}, brightness: {{ brightness }},
          xy_color: {{ xy_color }})
  mode: parallel
  max: 3
