# Replay scene/lighting changes in various Hue rooms to ensure recalcitrant
# Zigbee-controllers follow properly â€“ some cheaper, non-Hue, controllers have
# the tendency to not respond to the first request.
# As I want to respect/propagate the transition-delay, trigger on
# `call_service`-events instead of regular state changes. To keep complexity
# down, only the first `entity_id` in any provided list is considered...
- alias: Enforce Kitchen scene change for Gledopto-controllers
  id: 66dc6374-f19a-437c-966b-0679400fc2b5
  triggers:
    - trigger: event
      event_type: call_service
      event_data:
        domain: hue
        service: activate_scene
    - trigger: event
      event_type: call_service
      event_data:
        domain: scene
        service: turn_on
    - trigger: event
      event_type: call_service
      event_data:
        domain: light
        service: turn_off
  variables:
    entities: >-
      {{
        trigger.event.data.service_data.entity_id if
          trigger.event.data.service_data.entity_id is list else
            [trigger.event.data.service_data.entity_id]
      }}
    transition: >-
      {{ trigger.event.data.service_data.transition | default (0) | int }}
    service: >-
      {{ trigger.event.data.domain ~ '.' ~ trigger.event.data.service }}
  conditions:
    - >-
      {{
        entities | first is
          search('^scene\.kitchen_.+') or
          entities | first in [
            'light.kitchen',
            'light.kitchen_counter_cupboards'
          ]
      }}
    # Ignore triggers resulting from this automation calling the service
    - >-
      {{
        trigger.event.context.id != this.context.id and
          trigger.event.context.parent_id != this.context.id
      }}
  actions:
    - action: >-
        {{ service }}
      target:
        entity_id: >-
          {{ entities | first }}
      data:
        transition: >-
          {{ [0, transition - 3] | max }}
  mode: restart
  trace:
    stored_traces: 10
- alias: Enforce Ensuite scene change for Chandelier
  id: 7d658000-c06d-4404-93f6-264b3598e9c2
  triggers:
    - trigger: event
      event_type: call_service
      event_data:
        domain: hue
        service: activate_scene
    - trigger: event
      event_type: call_service
      event_data:
        domain: scene
        service: turn_on
    - trigger: event
      event_type: call_service
      event_data:
        domain: light
        service: turn_off
  variables:
    entities: >-
      {{
        trigger.event.data.service_data.entity_id if
          trigger.event.data.service_data.entity_id is list else
            [trigger.event.data.service_data.entity_id]
      }}
    transition: >-
      {{ trigger.event.data.service_data.transition | default (0) | int }}
    service: >-
      {{ trigger.event.data.domain ~ '.' ~ trigger.event.data.service }}
  conditions:
    - >-
      {{
        entities | first is search('^scene\.ensuite_.+') or
          entities | first == 'light.ensuite'
      }}
    - >-
      {{
        trigger.event.context.id != this.context.id and
          trigger.event.context.parent_id != this.context.id
      }}
  actions:
    - delay: 3
    - action: >-
        {{ service }}
      target:
        entity_id: >-
          {{ entities | first }}
      data:
        transition: >-
          {{ [0, transition - 3] | max }}
  mode: restart
# The Inner-bulbs don't exhibit the issue when switching off...
- alias: Enforce Garden scene change for Innr-bulbs
  id: b0667545-e809-4d14-97db-a22f14031be3
  triggers:
    - trigger: event
      event_type: call_service
      event_data:
        domain: hue
        service: activate_scene
    - trigger: event
      event_type: call_service
      event_data:
        domain: scene
        service: turn_on
  variables:
    entities: >-
      {{
        trigger.event.data.service_data.entity_id if
          trigger.event.data.service_data.entity_id is list else
            [trigger.event.data.service_data.entity_id]
      }}
    transition: >-
      {{ trigger.event.data.service_data.transition | default (0) | int }}
    service: >-
      {{ trigger.event.data.domain ~ '.' ~ trigger.event.data.service }}
  conditions:
    - >-
      {{
        entities | first is search('^scene\.garden_.+')
      }}
    - >-
      {{
        trigger.event.context.id != this.context.id and
          trigger.event.context.parent_id != this.context.id
      }}
  actions:
    - delay: 3
    - action: >-
        {{ service }}
      target:
        entity_id: >-
          {{ entities | first }}
      data:
        transition: >-
          {{ [0, transition - 3] | max }}
  mode: restart
# Apart from the above, one of the Gledopto-controllers has been going
# absolutely off the rails as of late: It "ghost" switches on (without actually
# physically switching on) anywhere between 30-seconds and a couple minutes
# after being switched off.
# Somehow related to my recent changes; unclear as to why ðŸ˜• For now, whenever
# they get out-of-sync, switch both of them off.
- alias: Enforce Gledopto "Counter (Kitchen)" off
  id: 634be090-bb3e-460f-ae13-b9dfc6b72837
  triggers:
    - trigger: state
      entity_id:
        - light.extended_color_light_1_3
        - light.extended_color_light_1_4
      from: "off"
      to: "on"
      for: "00:00:02"
  conditions:
    - condition: state
      entity_id:
        - light.extended_color_light_1_3
        - light.extended_color_light_1_4
      state: "off"
      match: any
  actions:
    - action: light.turn_off
      entity_id:
        - light.extended_color_light_1_3
        - light.extended_color_light_1_4
    - action: system_log.write
      data:
        level: warning
        message: Forced Kitchen Gledopto-controllers off
  mode: restart
