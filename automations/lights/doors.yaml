- alias: Front door light to maximum brightness
  id: 78c89018-504b-4ff1-8aa1-fbebc14206e9
  triggers:
    # Front door
    - trigger: state
      entity_id: binary_sensor.openclose_16
      from: "off"
      to: "on"
    # Doorbell
    - trigger: state
      entity_id: binary_sensor.vibration_43
      from: "off"
      to: "on"
      # Slight delay on doorbell activation to not startle visitors / make it
      # less obvious the lights are automated
      for: "00:00:03"
  variables:
    light_state: >-
      {{ states('light.hue_filament_bulb_1_2') }}
    light_brightness: >-
      {{ state_attr('light.hue_filament_bulb_1_2', 'brightness') | int(0) }}
  conditions:
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: day
  actions:
    - action: light.turn_on
      data:
        brightness: 255
        entity_id: light.hue_filament_bulb_1_2
    # Wait for the front door to be closed for 30-seconds, or for the doorbell
    # to have rang 30-minutes ago
    - wait_for_trigger:
        - trigger: state
          entity_id: binary_sensor.openclose_16
          from: "on"
          to: "off"
          for: "00:00:30"
        - trigger: state
          id: doorbell
          entity_id: binary_sensor.vibration_43
          from: "on"
          to: "off"
          for: "00:29:00" # Sensor stays "on" for 1-minute
        # Abort if the light gets otherwise changed (this prevents us from
        # messing with other lighting automations)
        # N.B. To prevent triggering on the transition initiated above (which is
        # not instantaneous), we use a "from"-attribute check to trigger on
        # leaving the state we explicitly set above.
        - trigger: state
          id: abort
          entity_id: light.hue_filament_bulb_1_2
          attribute: brightness
          from: 255
      timeout: "02:00:00"
      continue_on_timeout: true
    - condition: >-
        {{ wait.trigger is none or wait.trigger.id != 'abort' }}
    # In case of a pending or triggered Home Alarm, don't further interfer
    - condition: not
      conditions:
        - condition: state
          entity_id: alarm_control_panel.home_alarm
          state:
            - pending
            - triggered
    - if: >-
        {{ light_state == 'on' and light_brightness > 0 }}
      then:
        - action: light.turn_on
          data:
            brightness: >-
              {{ light_brightness }}
          target:
            entity_id: light.hue_filament_bulb_1_2
      else:
        - action: light.turn_off
          target:
            entity_id: light.hue_filament_bulb_1_2
  mode: single
  max_exceeded: silent
- alias: Kitchen door light to maximum brightness
  id: ffff8c6f-9dbd-4791-8c32-766e1570811e
  triggers:
    - trigger: state
      entity_id: binary_sensor.openclose_12
      from: "off"
      to: "on"
  variables:
    light_state: >-
      {{ states('light.hue_filament_bulb_1') }}
    light_brightness: >-
      {{ state_attr('light.hue_filament_bulb_1', 'brightness') | int(0) }}
  conditions:
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: day
  actions:
    - action: light.turn_on
      data:
        brightness: 255
        entity_id: light.hue_filament_bulb_1
    # Wait for the back door to be closed for 30-seconds
    - wait_for_trigger:
        - trigger: state
          entity_id: binary_sensor.openclose_12
          from: "on"
          to: "off"
          for: "00:00:30"
        # Abort if the light gets otherwise changed
        - trigger: state
          id: abort
          entity_id: light.hue_filament_bulb_1
          attribute: brightness
          from: 255
      timeout: "02:00:00"
      continue_on_timeout: true
    - condition: >-
        {{ wait.trigger is none or wait.trigger.id != 'abort' }}
    - condition: not
      conditions:
        - condition: state
          entity_id: alarm_control_panel.home_alarm
          state:
            - pending
            - triggered
    - if: >-
        {{ light_state == 'on' and light_brightness > 0 }}
      then:
        - action: light.turn_on
          data:
            brightness: >-
              {{ light_brightness }}
          target:
            entity_id: light.hue_filament_bulb_1
      else:
        - action: light.turn_off
          target:
            entity_id: light.hue_filament_bulb_1
  mode: single
  max_exceeded: silent
- alias: Garden lights toggle
  id: cd0a0eac-d482-4add-ba9f-28e63fae0d26
  triggers:
    - trigger: state
      entity_id:
        - binary_sensor.openclose_12 # Kitchen door
        - binary_sensor.openclose_34 # Back gate
        - binary_sensor.openclose_189 # Shed door
      from: "off"
      to: "on"
  conditions:
    # Other automations are in effect if the alarm is armed (or triggered)
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: disarmed
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: day
    - condition: state
      entity_id: light.garden
      state: "off"
  actions:
    - action: scene.turn_on
      target:
        entity_id: scene.garden_ambiance
    # Wait for the door to close â€“ abort if we transition from dusk to night
    # (lights should stay on), or if the lights get switched off (nothing more
    # to do). Additionally, if a door remains open for more than 8-hours,
    # continue to switch off the lights (this should never happen; something
    # should've switched off the lights, and triggered one of the aborts).
    - wait_for_trigger:
        - trigger: template
          id: door_closed
          value_template: >-
            {{ is_state(trigger.entity_id, 'off') }}
        - trigger: state
          entity_id: sensor.time_of_day
          from: dusk
          to: night
        - trigger: state
          entity_id: light.garden
          to: "off"
      timeout: "08:00:00"
      continue_on_timeout: true
    - condition: >-
        {{ wait.trigger is none or wait.trigger.id == 'door_closed' }}
    # Keep the lights on for an additional 5 minutes (same abort conditions)
    - wait_for_trigger:
        - trigger: state
          entity_id: sensor.time_of_day
          from: dusk
          to: night
        - trigger: state
          entity_id: light.garden
          to: "off"
      timeout: "00:05:00"
      continue_on_timeout: true
    - condition: >-
        {{ wait.trigger is none }}
    # Also, don't bother switching the lights back off at dusk; they'll be
    # switched on again soon anyway...
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: dusk
    - action: light.turn_off
      entity_id: light.garden
  mode: restart
