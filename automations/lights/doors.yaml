- alias: >-
    ðŸ’¡ | ðŸšª Front door light to maximum brightness (door open / doorbell rang)
  id: 78c89018-504b-4ff1-8aa1-fbebc14206e9
  trigger:
    - platform: state
      entity_id: binary_sensor.openclose_16
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.vibration_43
      from: "off"
      to: "on"
      # Slight delay on doorbell activation to not startle visitors / make it
      # less obvious the lights are automated
      for: "00:00:03"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: day
    # Only continue if the light is _not_ yet at maximum brightness â€“ continuing
    # would overwrite the previous state and prevent restoring lights at the end
    # of the automation. Repeatedly pressing the doorbell
    # N.B. cannot use a regular state/attribute condition as the "brightness"
    # attribute is missing when the light is off.
    - condition: template
      value_template: >-
        {{
          state_attr('light.hue_filament_bulb_1_2', 'brightness')
            | int(-1) < 255
        }}
  action:
    - variables:
        light_state: >-
          {{ states('light.hue_filament_bulb_1_2') }}
        light_brightness: >-
          {{ state_attr('light.hue_filament_bulb_1_2', 'brightness') | int(0) }}
    - service: light.turn_on
      data:
        brightness: 255
        entity_id: light.hue_filament_bulb_1_2
    # Wait for the front door to be closed for 30 seconds or for the doorbell
    # to have rang 30 minutes ago. Theoretically this could lead us to switch
    # the lights off while the front door is still open â€“ in practice this is
    # unlikely to ever happen...
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.openclose_16
          from: "on"
          to: "off"
          for: "00:00:30"
        - platform: state
          id: doorbell
          entity_id: binary_sensor.vibration_43
          from: "on"
          to: "off"
          for: "00:29:00" # Sensor stays "on" for 60 seconds
        # Short-circuit if the light is switched off (covers both manual
        # intervention and the light getting switched off at dawn by another
        # automation) or in case of pending Home Alarm (at which point an alarm
        # related automation takes over).
        - platform: state
          id: abort
          entity_id: light.hue_filament_bulb_1_2
          to: "off"
        - platform: state
          id: abort
          entity_id: alarm_control_panel.home_alarm
          to: pending
      timeout: "24:00:00"
      continue_on_timeout: false
    - condition: template
      value_template: >-
        {{ wait.trigger.id != 'abort' }}
    - choose:
        - conditions:
            - condition: template
              value_template: >-
                {{ light_state == 'on' and light_brightness > 0 }}
          sequence:
            - service: light.turn_on
              data:
                brightness: >-
                  {{ light_brightness }}
              target:
                entity_id: light.hue_filament_bulb_1_2
      default:
        - service: light.turn_off
          target:
            entity_id: light.hue_filament_bulb_1_2
  mode: single
  max_exceeded: silent
- alias: ðŸ’¡ | ðŸšª Kitchen door light to maximum brightness (door open)
  id: ffff8c6f-9dbd-4791-8c32-766e1570811e
  trigger:
    - platform: state
      entity_id: binary_sensor.openclose_12
      from: "off"
      to: "on"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: day
    # Only continue if the light is not yet at maximum brightness
    - condition: template
      value_template: >-
        {{
          state_attr('light.hue_filament_bulb_1', 'brightness')
            | int(-1) < 255
        }}
  action:
    - variables:
        light_state: >-
          {{ states('light.hue_filament_bulb_1') }}
        light_brightness: >-
          {{ state_attr('light.hue_filament_bulb_1', 'brightness') | int(0) }}
    - service: light.turn_on
      data:
        brightness: 255
        entity_id: light.hue_filament_bulb_1
    # Wait for the back door to be closed for 30 seconds
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.openclose_12
          from: "on"
          to: "off"
          for: "00:00:30"
        # Short-circuit if the light is switched off or pending Home Alarm
        - platform: state
          id: abort
          entity_id: light.hue_filament_bulb_1
          to: "off"
        - platform: state
          id: abort
          entity_id: alarm_control_panel.home_alarm
          to: pending
      timeout: "24:00:00"
      continue_on_timeout: false
    - condition: template
      value_template: >-
        {{ wait.trigger.id != 'abort' }}
    - choose:
        - conditions:
            - condition: template
              value_template: >-
                {{ light_state == 'on' and light_brightness > 0 }}
          sequence:
            - service: light.turn_on
              data:
                brightness: >-
                  {{ light_brightness }}
              target:
                entity_id: light.hue_filament_bulb_1
      default:
        - service: light.turn_off
          target:
            entity_id: light.hue_filament_bulb_1
  mode: single
  max_exceeded: silent
- alias: ðŸ’¡ | ðŸšª Garden lights on (Kitchen door / Back gate open)
  id: cd0a0eac-d482-4add-ba9f-28e63fae0d26
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.openclose_12
        - binary_sensor.openclose_34
      from: "off"
      to: "on"
  condition:
    # Other automations are in effect if the alarm is armed (or triggered)
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: disarmed
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: day
    - condition: state
      entity_id: light.garden
      state: "off"
  action:
    - service: scene.turn_on
      target:
        entity_id: scene.garden_ambiance
    # Wait for the door to close
    - wait_for_trigger:
        - platform: template
          value_template: >-
            {{ is_state(trigger.entity_id, 'off') }}
    # Keep the lights on for an additional 5 minutes â€“ abort if we transition
    # from dusk to night (lights should stay on) or if the lights get switched
    # off (nothing more to do)
    - wait_for_trigger:
        - platform: state
          entity_id: sensor.time_of_day
          from: dusk
          to: night
        - platform: state
          entity_id: light.garden
          to: "off"
      timeout: "00:05:00"
      continue_on_timeout: true
    - condition: template
      value_template: >-
        {{ wait.trigger is none }}
    # Also, don't bother switching the lights back off at dusk; they'll be
    # switched on again soon anyway...
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: dusk
    - service: light.turn_off
      entity_id: light.garden
  mode: restart
