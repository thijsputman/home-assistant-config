- alias: üö® Trigger alarm (door / window opened)
  id: cb55dcf5-9182-482c-9d3a-ce14387709b5
  description: ""
  trigger:
    - platform: state
      # Not using groups of sensors ‚Äì They will trigger "off" ‚Üí "on" if one of
      # their members transitions from "unavailable" ‚Üí "on", which leads to false
      # alarms...
      # Furthermore, listing the individual entities is relevant as some
      # doors/windows might intentionally be left open ‚Äì using a group would
      # obscure all further state transitions.
      entity_id:
        - binary_sensor.openclose_12
        - binary_sensor.openclose_16
        - binary_sensor.openclose_17
        - binary_sensor.openclose_33
        - binary_sensor.openclose_36
        - binary_sensor.openclose_18
        - binary_sensor.openclose_19
        - binary_sensor.openclose_20
        - binary_sensor.openclose_8
        - binary_sensor.openclose_14
        - binary_sensor.openclose_15
      from: "off"
      to: "on"
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: alarm_control_panel.home_alarm
          state: armed_away
        - condition: state
          entity_id: alarm_control_panel.home_alarm
          state: armed_night
  action:
    - service: alarm_control_panel.alarm_trigger
      data: {}
      entity_id: alarm_control_panel.home_alarm
  mode: single
- alias: üö® | üëã Trigger alarm (motion detected in Hallway/staircase)
  id: 84cdd8f4-00e3-4bc1-8fc7-8344ba722c19
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.presence_91 # Attic stairs/hallway
        - binary_sensor.presence_92 # Attic stairs/hallway
        - binary_sensor.presence_123 # Downstairs hallway
        - binary_sensor.presence_125 # Downstairs hallway
        - binary_sensor.presence_121 # Stairs
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: armed_night
  action:
    # Only continue if the motion sensor in the first floor hallway _hasn't_
    # changed (i.e. been active) in the past fifteen minutes. The idea here is
    # that if we're home, all motion at night will start in the first floor
    # hallway (i.e. by someone leaving their bedroom). With this condition in
    # place, a small trip around the house during the night should not trigger
    # the alarm...
    - condition: template
      value_template: >-
        {{
          states.binary_sensor.presence_127 is defined and
          states.binary_sensor.presence_127.last_changed <=
            now() - timedelta(minutes=15)
        }}
    # WIP ‚Äì send a notification instead of triggering the alarm...
    # - service: alarm_control_panel.alarm_trigger
    #   data: {}
    #   entity_id: alarm_control_panel.home_alarm
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          targetDevices: my
          channel: Alert
          group: home alarm
          title: üß™ Motion detected in Hallway/staircase!
          message: >-
            {{ trigger.from_state.name }} tripped the alarm...
  mode: single
- alias: üö® | üëã Trigger alarm (vibration detected)
  id: b5f4a4ba-dc7b-49e3-afe6-6f6762a3031f
  trigger:
    # Vibration sensors could be made more sensitive by triggering on changes to
    # their "tiltangle" and "orientation" attributes. In that case the alarm
    # would also trigger when the sensor transitions to/from "unavailable" which
    # is undesirable (and complex to guard against).
    # As such the sensor's baseline vibration detection is used (which means you
    # need to somewhat more forcefully bump into an office chair to trigger the
    # alarm üòâ).
    - platform: state
      entity_id:
        - binary_sensor.vibration_106 # Office chair
        - binary_sensor.vibration_102 # Office chair
        - binary_sensor.vibration_122 # Drawer with wallets and (car) keys
      from: "off"
      to: "on"
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: alarm_control_panel.home_alarm
          state: armed_away
        - condition: state
          entity_id: alarm_control_panel.home_alarm
          state: armed_night
  action:
    # WIP ‚Äì send a notification instead of triggering the alarm...
    # - service: alarm_control_panel.alarm_trigger
    #   data: {}
    #   entity_id: alarm_control_panel.home_alarm
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          targetDevices: my
          channel: Alert
          group: home alarm
          title: üß™ Vibration detected!
          message: >-
            {{ trigger.from_state.name }} tripped the alarm...
  mode: single
- alias: üö® | üîä Sound the alarm (alarm triggered)
  id: 714cfa44-bce7-41f8-be78-9891769fef74
  description: ""
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: triggered
  condition: []
  action:
    - service: script.sirens
      data:
        mode: lselect
        ontime: 180
  mode: restart
- alias: üö® | üîä Stop sounding the alarm (alarm trigger ended)
  id: 06b3864d-3f70-45d7-96fa-6c30fa2576c2
  description: ""
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      from: triggered
  condition: []
  action:
    - service: script.sirens
      data:
        mode: none
  mode: single
- alias: üö® | üïπÔ∏è Silence the alarm (Bedroom Smart Switches)
  id: 830121ea-907f-4234-be81-b4acce05c1bc
  description: ""
  trigger:
    # Bedside Smart Switches
    - device_id: da1237666189a9a364fa383795ba532d
      domain: deconz
      platform: device
      type: remote_button_short_press
      subtype: turn_on
    - device_id: b26003b4b78afd0e5b2c3bcb3b06eeeb
      domain: deconz
      platform: device
      type: remote_button_short_press
      subtype: turn_on
  condition:
    # Only act if the "Home Alarm" is triggered, the siren is sounding _and_
    # someone is home
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: triggered
    - condition: state
      entity_id: script.sirens
      state: "on"
    - condition: state
      entity_id: group.family
      state: home
  action:
    # Silence ‚Äì continue blinking until the alarm state clears
    - service: script.sirens
      data:
        mode: blink
        ontime: 180
  mode: single
  max_exceeded: silent
- alias: üö® | üí° Bedroom lights on (everyone asleep; alarm triggered)
  id: 45a353ab-e5c4-459c-a2ca-ac0d6a5e3aa8
  description: ""
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: triggered
  condition:
    - condition: state
      entity_id: input_boolean.everyone_asleep
      state: "on"
    # Only useful if there's someone home (i.e. asleep in the bedroom)
    - condition: state
      entity_id: group.family
      state: home
  action:
    - service: light.turn_on
      data:
        brightness: 255
        kelvin: 6500
      entity_id: light.bedroom
  mode: single
- alias: üö® | üí° Flash lights (pending alarm)
  id: 4416cb36-8291-41ae-8c62-7a246fdc9d2d
  description: ""
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: pending
  condition: []
  action:
    # The below assumes the alarm is always triggered by a single state change.
    # Technically speaking not necessarily true ‚Äì though practically speaking
    # sufficient.
    - choose:
        # Front door opened
        - conditions:
            - condition: state
              entity_id: binary_sensor.openclose_16
              state: "on"
          sequence:
            - service: light.turn_on
              data:
                flash: long
                entity_id:
                  - light.hue_filament_bulb_1_5
                  - light.hue_filament_bulb_1_4
        # Kitchen door opened
        - conditions:
            - condition: state
              entity_id: binary_sensor.openclose_12
              state: "on"
          sequence:
            - service: light.turn_on
              data:
                flash: long
                entity_id:
                  - light.spot_4_kitchen_garden_side
                  - light.spot_3_kitchen
        # Hallway/staircase motion detected (when someone home)
        - conditions:
            - condition: or
              conditions:
                - condition: state
                  entity_id: group.motion_hallway
                  state: "on"
                - condition: state
                  entity_id: group.motion_attic
                  state: "on"
            - condition: state
              entity_id: group.family
              state: home
          sequence:
            - service: light.turn_on
              data:
                flash: long
                entity_id:
                  - light.hallway
                  - light.attic
            # The Attic staircase relay doesn't support flash ‚Äì instead of
            # rapidly toggling the relay (*click*, *click*, *click*, *click*),
            # switch it off and gently flash the lights in the Attic proper to
            # reach roughly the same effect...
            - service: light.turn_off
              data:
                entity_id: light.attic_hallway
      default: []
  mode: single
- alias: üö® | üí° Garden lights on (alarm triggered)
  id: af18c5c4-4619-485f-8ff0-97ce63c7e42f
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: triggered
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: day
  action:
    - service: hue.hue_activate_scene
      data:
        group_name: Garden
        scene_name: Active
    - wait_for_trigger:
        - platform: state
          id: disarmed
          entity_id: alarm_control_panel.home_alarm
          to: disarmed
        - platform: state
          entity_id: sensor.time_of_day
          from: dawn
          to: day
        # Short-circuit when the Garden lights switch off
        - platform: state
          entity_id: light.garden
          from: "on"
          to: "off"
      timeout: "24:00:00"
      continue_on_timeout: false
    # If someone is home _and_ manually disarmed the alarm via Lovelace, don't
    # do anything (i.e. leave the Garden lights on). In all other cases (either
    # the alarm got disarmed via other means, or it is light outside) switch off
    # the Garden lights.
    - condition: not
      conditions:
        - condition: state
          entity_id: group.family
          state: home
        - condition: template
          value_template: >-
            {{
              wait.trigger.id == 'disarmed' and
              wait.trigger.to_state.context.user_id is not none
            }}
    - service: light.turn_off
      data:
        entity_id: light.garden
  mode: restart
- alias: üö® | üí° Lights on (triggered alarm disarmed when someone home)
  id: 5132f575-5f3f-43e5-8720-8eddd8c66355
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      from: triggered
      to: disarmed
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: day
    # Someone should be home _and_ have manually disarmed the alarm via
    # Lovelace ‚Äì this prevents the lights from switching on if the alarm is
    # disarmed remotely (and/or automatically)
    - condition: state
      entity_id: group.family
      state: home
    - condition: template
      value_template: >-
        {{ trigger.to_state.context.user_id is not none }}
  action:
    - service: hue.hue_activate_scene
      data:
        group_name: Kitchen
        scene_name: Bright (custom)
    - service: hue.hue_activate_scene
      data:
        group_name: Living room
        scene_name: Active
    - service: hue.hue_activate_scene
      data:
        group_name: Hallway
        scene_name: Bright
- alias: üö® | üì± Notify on alarm pending
  id: 601cb512-c43b-4155-b58f-122441d49d22
  description: ""
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: pending
  condition: []
  action:
    - variables:
        # List all possible trigger sensors that are "on" _and_ changed in the
        # last five minutes. This prevents listing sensors that were "on" to
        # begin with (e.g. a window left open). Has the potential to include
        # irrelevant sensors (as not all sensors trigger the alarm under all
        # circumstances) but offers a good balance between accuracy and
        # complexity.
        tripped_sensors: >-
          {{
            (
              expand('group.openclose_all') + expand('group.motion_all') +
                expand('group.vibration_all')
            ) | selectattr('state', 'eq', 'on') | selectattr(
              'last_changed', 'gt', now() - timedelta(minutes=5)
            ) | map(attribute='name') | list
          }}
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          group: home alarm
          channel: Alert
          criticalNotification: true
          title: üö® Home Alarm pending!
          message: >-
            The Home Alarm just got triggered!
            If not promptly disarmed, the alarm will sound...
            {%- if tripped_sensors | length > 0 %}
              <br><br>
              {%- if tripped_sensors | length == 1 -%}
                The alarm was triggered by: {{ tripped_sensors[0] }}
              {%- else -%}
                The following sensors triggered the alarm:
                <br><br>‚óæ {{
                  tripped_sensors | join('<br>‚óæ ')
                -}}
              {%- endif -%}
            {% endif %}
  mode: single
- alias: üö® | üì± Notify on alarm sounding
  id: 05a2188b-8940-4311-adfb-bea75a792000
  description: ""
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: triggered
  condition: []
  action:
    - variables:
        # Largely identical to the previous automation _except_ this lists *all*
        # sensors changed in the last five minutes (and not only those that are
        # "on"). It is possible for sensors to transition to "off" in between
        # triggering and sounding the alarm. This list is thus less accurate
        # than the one provided in the trigger notification...
        tripped_sensors: >-
          {{
            (
              expand('group.openclose_all') + expand('group.motion_all') +
                expand('group.vibration_all')
            ) |
            selectattr('last_changed', 'gt', now() - timedelta(minutes=5)) |
            map(attribute='name') | list
          }}
    - service: script.turn_on
      target:
        entity_id: script.sms_notification
      data:
        variables:
          message: >-
            üö® Home Alarm sounding!
            {% if tripped_sensors | length > 0
            %}\nThe Home Alarm is sounding ‚Äì there's someone in the house!
              \n\n
              {%- if tripped_sensors | length == 1 -%}
                The alarm was triggered by: {{ tripped_sensors[0] }}
              {%- else -%}
                The following sensors triggered the alarm:
                \n\n‚óæ {{
                  tripped_sensors | join('\n\n‚óæ ')
                -}}
              {%- endif -%}
            {% endif %}
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          group: home alarm
          channel: Critical
          importance: high
          lovelaceDismiss: false
          criticalNotification: true
          title: üö® Home Alarm sounding!
          message: >-
            The Home Alarm is sounding
            {%- if tripped_sensors | length > 0
              %} ‚Äì there's someone in the house!
              <br><br>
              {%- if tripped_sensors | length == 1 -%}
                The alarm was triggered by: {{ tripped_sensors[0] }}
              {%- else -%}
                The following sensors triggered the alarm:
                <br><br>‚óæ {{
                  tripped_sensors | join('<br>‚óæ ')
                -}}
              {%- endif -%}
            {%- else -%}
              .
            {%- endif -%}
  mode: single
- alias: üö® | üì± Notify on alarm disarmed
  id: d06c2a3e-f1a7-41c2-9bf3-d29c6c352c93
  variables:
    tablet_kitchen_user_id: !secret tablet_kitchen_user_id
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      from:
        - pending
        - triggered
      to:
        - disarmed
  condition: []
  action:
    - variables:
        actor: >-
          {%- if trigger is defined and
              trigger.to_state.context.user_id is defined -%}
            {% if trigger.to_state.context.user_id == tablet_kitchen_user_id %}
              from the tablet in the Kitchen
            {% else %}
              {%- set persons = states.person | selectattr(
                'attributes.user_id', 'eq', trigger.to_state.context.user_id
              ) | list -%}
              {%- if persons | count == 1 %}
                {# Firstname only; remove everything after first space #}
                by {{
                  persons[0].attributes.friendly_name |
                  regex_replace(' .*$', '')
                }}
              {%- endif -%}
            {%- endif -%}
          {%- endif -%}
    - service: script.turn_on
      target:
        entity_id: script.sms_notification
      data:
        variables:
          message: >-
            üîì Home Alarm disarmed
            \nThe Home Alarm just got disarmed
            {%- if actor != '' %} {{ actor }} {%- endif -%}.
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          group: home alarm
          channel: Alert
          lovelaceDismiss: false
          criticalNotification: true
          title: üîì Home Alarm disarmed
          message: >-
            The Home Alarm just got disarmed
            {%- if actor != '' %} {{ actor }} {%- endif -%}.
