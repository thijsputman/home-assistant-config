- alias: üìπ | ‚è∞ Arm Arlo (daily at 22:30)
  description: ''
  trigger:
  - platform: time
    at: '22:30:00'
  # In case "Everyone asleep" occurs before 22:30
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_night
  condition:
  # Only act if Arlo is currently disarmed (to prevent unintentionally toggling
  # from armed "Away" to armed "Night")
  - condition: state
    entity_id: !secret aarlo_control_panel
    state: "disarmed"
  action:
  - service: alarm_control_panel.alarm_arm_night
    entity_id: !secret aarlo_control_panel
    data: {}
  mode: single
- alias: üìπ | ü§ñ Arm Arlo (following "Home Alarm")
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_away
  condition: []
  action:
  - service: alarm_control_panel.alarm_arm_away
    entity_id: !secret aarlo_control_panel
    data: {}
  mode: single
- alias: üìπ | ü§ñ Disarm Arlo (following "Home Alarm")
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: disarmed
  condition: []
  action:
  - service: alarm_control_panel.alarm_disarm
    data: {}
    entity_id: !secret aarlo_control_panel
  mode: single
- alias: üìπ | ‚è≥ Pause Arlo (timer started)
  description: ''
  trigger:
  - platform: event
    event_type:
    - timer.started
    - timer.restarted
    event_data:
      entity_id: timer.aarlo_pause
  condition: []
  action:
  - choose:
    - conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: !secret aarlo_control_panel
          state: armed_night
      sequence:
      - service: timer.cancel
        data:
          entity_id: timer.aarlo_pause
    default:
    - service: alarm_control_panel.alarm_disarm
      entity_id: !secret aarlo_control_panel
      data: {}
  mode: single
- alias: üìπ | ‚è≥ Resume Arlo (timer ended)
  description: ''
  trigger:
  - platform: event
    event_type:
    - timer.finished
    - timer.paused
    event_data:
      entity_id: timer.aarlo_pause
  condition: []
  action:
  - service: alarm_control_panel.alarm_arm_night
    entity_id: !secret aarlo_control_panel
    data: {}
  mode: single
- alias: üìπ | ‚è∞ Arlo snapshot (every 2 hours)
  description: ''
  trigger:
  - platform: time_pattern
    hours: /2
    minutes: 0
    seconds: '0'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id:
      - camera.aarlo_back
      - camera.aarlo_front
      state: recording
  action:
  - service: aarlo.camera_request_snapshot
    data: {}
    entity_id:
    - camera.aarlo_back
    - camera.aarlo_front
  mode: single
- alias: üìπ | ‚è∞ Arlo store daily garden snapshot (at dawn and dusk)
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.time_of_day
    from: dawn
    to: day
  - platform: state
    entity_id: sensor.time_of_day
    from: day
    to: dusk
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: camera.aarlo_back
      state: recording
  action:
  - service: aarlo.camera_request_snapshot_to_file
    data:
      filename: "/config/var/aarlo/back-{{ now() | as_timestamp | timestamp_custom('%Y%m%d%H%M') }}.jpg"
    entity_id: camera.aarlo_back
  mode: single
