- alias: ðŸš§ | ðŸ“± Clear dismissed persistent notification (all devices; whitelisted only)
  description: ''
  trigger:
  - platform: event
    event_type: call_service
    event_data:
      domain: persistent_notification
      service: dismiss
  condition:
  - condition: template
    value_template: >-
      {{
        trigger.event.data.service_data.notification_id in
          ['raining', 'home_alarm', 'system_general', 'calamity_leak']
      }}
  action:
  - service: notify.all_devices
    data:
      message: clear_notification
      data:
        tag: >-
          {{ trigger.event.data.service_data.notification_id }}
  mode: single
- alias: ðŸ“± | ðŸ”‹ Sensor low battery notification (any battery-level < 20%)
  variables:
    # Exclude mobile phones and tablets
    exclude:
    - sensor.p20hd_eea_battery_level
    - sensor.sm_g930f_battery_level
    - sensor.gm1913_battery_level
    # Courtesy of https://gist.github.com/sbyx/1f6f434f0903b872b84c4302637d0890
    sensors: >-
      {% set result = namespace(sensors=[]) %}
      {% for state in states.sensor |
          selectattr('attributes.device_class', '==', 'battery') %}
        {% if not state.entity_id in exclude and state.state | int(100) < 20 %}
            {% set result.sensors = result.sensors +
              [state.name ~ ': ' ~ state.state ~ '%'] %}
        {% endif %}
      {% endfor %}
      {{ result.sensors | join('</li><li>') }}
  trigger:
  - platform: time
    at: "10:00"
  condition:
  # Only on Saturday if there are battery-levels below 20%
  - condition: template
    value_template: >-
      {{ now().isoweekday() == 6 and sensors != '' }}
  action:
  - service: script.persistent_notification_my_devices
    data:
      tag: system_general
      title: Low sensor battery
      message: >-
        <ul><li>{{sensors}}</li><ul>
  mode: single
- alias: ðŸ“± Notify on integration failure (unknown/unavailable-state)
  description: ''
  variables:
    # Entities that require Internet-connectivity to function
    online:
      - binary_sensor.ib1700339968_connection_state
      - !secret aarlo_connected_sensor
      - vacuum.neato_d7
      - switch.pi_hole
  trigger:
  - platform: state
    entity_id:
    - sensor.power_consumption
    - sensor.weewx_outside_temperature
    - sensor.weewx_outside_temperature_balcony
    - light.range_extender_2  # deCONZ
    - sensor.hue_dimmer_switch_1_battery_level
    - binary_sensor.ib1700339968_connection_state # tadoÂ° (online)
    - climate.tado_smart_thermostat
    - !secret aarlo_connected_sensor
    - vacuum.neato_d7
    - switch.pi_hole
    to:
    - "unknown"
    - "unavailable"
    for: "00:10:00"
  # Gas consumption updates once per hour
  - platform: state
    entity_id: sensor.gas_consumption
    to:
    - "unknown"
    - "unavailable"
    for: "01:00:00"
  condition:
  # We should either be online (i.e. the Remote UI is connected), or the entity
  # in question should _not_ require Internet-connectivity to function
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.remote_ui
      state:  "on"
    - condition: template
      value_template: >-
        {{ not trigger.entity_id in online }}
  action:
  - service: script.persistent_notification_my_devices
    data:
      tag: system_general
      title: Potential integration failure
      message: >-
        {{ trigger.to_state.attributes.friendly_name }} has been in an
        {{ trigger.to_state.state }}-state for
        {{ relative_time(trigger.to_state.last_changed) }}.
  mode: single
