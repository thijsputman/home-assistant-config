- alias: ðŸš§ | ðŸ“± Clear dismissed persistent notification (all devices; whitelisted only)
  description: ''
  trigger:
  - platform: event
    event_type: call_service
    event_data:
      domain: persistent_notification
      service: dismiss
  condition:
  - condition: template
    value_template: >-
      {{
        trigger.event.data.service_data.notification_id in
          ['raining', 'home_alarm', 'system_general', 'calamity_leak']
      }}
  action:
  - service: notify.all_devices
    data:
      message: clear_notification
      data:
        tag: >-
          {{ trigger.event.data.service_data.notification_id }}
  mode: single
- alias: ðŸ“± | ðŸ”‹ Sensor low battery notification (any battery-level < 20%)
  variables:
    # Exclude mobile phones and tablets
    exclude:
    - sensor.p20hd_eea_battery_level
    - sensor.sm_g930f_battery_level
    - sensor.gm1913_battery_level
    # Courtesy of https://gist.github.com/sbyx/1f6f434f0903b872b84c4302637d0890
    sensors: >-
      {% set result = namespace(sensors=[]) %}
      {% for state in states.sensor |
          selectattr('attributes.device_class', '==', 'battery') %}
        {% if not state.entity_id in exclude and state.state | int(100) < 20 %}
            {% set result.sensors = result.sensors +
              [state.name ~ ': ' ~ state.state ~ '%'] %}
        {% endif %}
      {% endfor %}
      {{ result.sensors | join('</li><li>') }}
  trigger:
  - platform: time
    at: "10:00"
  condition:
  # Only on Saturday if there are battery-levels below 20%
  - condition: template
    value_template: >-
      {{ now().isoweekday() == 6 and sensors != '' }}
  action:
  - service: script.persistent_notification_my_devices
    data:
      tag: system_general
      title: Low sensor battery
      message: >-
        <ul><li>{{sensors}}</li><ul>
  mode: single
- alias: ðŸ“± Notify on (suspected) integration failure
  description: ''
  trigger:
  # DSMR
  - platform: state
    entity_id: sensor.power_consumption
    to: "unknown"
    for: "00:20:00"
  - platform: state
    entity_id: sensor.gas_consumption
    to: "unknown"
    for: "02:00:00" # Gas consumption updates once per hour
  # WeeWX
  - platform: state
    entity_id: sensor.weewx_outside_temperature
    to: "unknown"
    for: "00:20:00"
  - platform: state
    entity_id: sensor.weewx_outside_temperature_balcony
    to: "unknown"
    for: "00:20:00"
  # deCONZ
  - platform: state
    entity_id: light.range_extender_2
    to: "unknown"
    for: "00:20:00"
  # Hue
  - platform: state
    entity_id: sensor.hue_dimmer_switch_1_battery_level
    to: "unknown"
    for: "00:20:00"
  # tadoÂ° (online integration & HomeKit)
  - platform: state
    entity_id: binary_sensor.ib1700339968_connection_state
    to: "unknown"
    for: "00:20:00"
  - platform: state
    entity_id: climate.tado_smart_thermostat
    to: "unknown"
    for: "00:20:00"
  # A(a)rlo (online integration)
  - platform: state
    entity_id: !secret aarlo_connected_sensor
    to: "unknown"
    for: "00:20:00"
  # Neato (online integration)
  - platform: state
    entity_id: vacuum.neato_d7
    to: "unknown"
    for: "00:20:00"
  # Pi-hole
  - platform: state
    entity_id: switch.pi_hole
    to: "unknown"
    for: "00:20:00"
  condition:
  # Only trigger when remote UI is connected (i.e. Internet is most likely
  # working) â€“ without Internet-connectivity (some of the) sensors will become
  # unavailable without an actual integration failure
  - condition: state
    entity_id: binary_sensor.remote_ui
    state:  "on"
  action:
  - service: script.persistent_notification_my_devices
    data:
      tag: system_general
      title: Potential integration failure
      message: >-
        {{ trigger.to_state.attributes.friendly_name }} has been in an unknown
        state for {{ trigger.for }}.
  mode: single
