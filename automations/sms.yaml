- alias: 📱 | 💸 Reminder to top-up prepaid credit (credit low)
  id: 260c182b-f9e8-4784-b2f1-f4e2e82253e3
  trigger:
    - platform: numeric_state
      entity_id: sensor.gammu_credit_vodafone
      below: 5
    - platform: numeric_state
      entity_id: sensor.gammu_credit_vodafone
      below: 2
  condition: []
  action:
    - choose:
        # Credit fell below € 2 – send an SMS reminder too
        - conditions: >-
            {{ states('sensor.gammu_credit_vodafone') | float < 2 }}
          sequence:
            - service: script.sms_notification
              data:
                targetDevices: my
                message: >-
                  💸 Top-up Vodafone prepaid credit!
                  \nVodafone prepaid credit is
                  € {{ states('sensor.gammu_credit_vodafone') }} –
                  time to top it up:
                  \n\n✉️ #secret# credit top up [5|10|20|30|40|50]
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          group: general
          channel: Notification
          tag: vodafone_credit
          action_1: Top-up € 5
          action_2: € 10
          targetDevices: my
          title: 💸 Top-up Vodafone prepaid credit
          message: >-
            Vodafone prepaid credit is
            € {{ states('sensor.gammu_credit_vodafone') }} –
            to top-up using the actions below, or SMS:
            <br><br>✉️ #secret# credit top up [5|10|20|30|40|50]
    # Top-up initiated from phone notification
    - wait_for_trigger:
        - platform: event
          id: top_up_5
          event_type: mobile_app_notification_action
          event_data:
            action: ACTION_1_vodafone_credit
        - platform: event
          id: top_up_10
          event_type: mobile_app_notification_action
          event_data:
            action: ACTION_2_vodafone_credit
      timeout: "00:20:00"
      continue_on_timeout: false
    - condition: template
      value_template: >-
        {{ wait.trigger.id in ['top_up_5', 'top_up_10'] }}
    - variables:
        credit: >-
          {% if wait.trigger.id == 'top_up_5' %}
            5
          {% elif wait.trigger.id == 'top_up_10' %}
            10
          {% endif %}
    # Don't block on sending the request to Vodafone (we might be too late
    # setting up the trigger)
    - service: script.turn_on
      target:
        entity_id: script.sms_notification
      data:
        variables:
          phoneNumber: 4000
          message: >-
            {{ credit }} EURO
    - wait_for_trigger:
        - platform: state
          entity_id: sensor.gammu_received_message
      timeout: 120
      continue_on_timeout: false
    - variables:
        top_up_link: >-
          {%
            if states('sensor.gammu_received_message') is
              search('https:\/\/opwaarderen\.vodafone\.nl\/.*?(?: |$)')
            and state_attr('sensor.gammu_received_message', 'number')
              == '<Vodafone>'
          %}
            {{
              states('sensor.gammu_received_message') |
                regex_findall_index(
                  '(https:\/\/opwaarderen\.vodafone\.nl\/.*?)(?: |$)')
            }}
          {% endif %}
    - condition: template
      value_template: >-
        {{ top_up_link is not none }}
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          group: general
          channel: Notification
          tag: vodafone_credit
          targetDevices: my
          title: 💸 Vodafone prepaid credit top-up link
          message: >-
            Top-up the Vodafone prepaid credit with € {{ credit }}:
            {{ top_up_link }}
  mode: restart
- alias: 📱 | 💸 Prepaid credit top-up confirmation (credit increased)
  id: d532d891-6752-418b-ae12-43b405979f3c
  trigger:
    # Increase with € 5 or more indicates prepaid credit was topped-up
    - platform: template
      value_template: >-
        {{
          state_attr('sensor.gammu_credit_vodafone', 'last_credit') | float > 0
            and
          states('sensor.gammu_credit_vodafone') | float -
            state_attr('sensor.gammu_credit_vodafone', 'last_credit') | float
          >= 5
        }}
  condition: []
  action:
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          group: general
          channel: Notification
          tag: vodafone_credit
          targetDevices: my
          title: 💸 Vodafone prepaid credit topped-up
          message: >-
            Vodafone credit was topped-up with
            € {{
              (
                states('sensor.gammu_credit_vodafone') | float -
                state_attr('sensor.gammu_credit_vodafone', 'last_credit') | float
              ) | round(0)
            }} – total credit is now
            € {{ states('sensor.gammu_credit_vodafone') }}.
# Top-up via SMS (in case of no Internet connectivity)
- alias: >-
    📱 | ✉️ Top-up prepaid credit (received "credit top up [5|10|20|30|40|50]")
  id: cf444f7f-6ce8-4fed-a45a-9f416838fbff
  trigger:
    - platform: state
      entity_id: sensor.gammu_received_authenticated_command
  condition:
    - condition: template
      value_template: >-
        {{
          states('sensor.gammu_received_authenticated_command')
            is match('^credit top.?up (5|10|20|30|40|50)( |$)')
        }}
  action:
    - variables:
        credit: >-
          {{
            states('sensor.gammu_received_authenticated_command') |
              regex_findall_index('^credit top.?up (5|10|20|30|40|50)(?: |$)')
          }}
    - condition: template
      value_template: >-
        {{ credit in [5, 10, 20, 30, 40, 50] }}
    - service: script.turn_on
      target:
        entity_id: script.sms_notification
      data:
        variables:
          phoneNumber: 4000
          message: >-
            {{ credit }} EURO
    - wait_for_trigger:
        - platform: state
          entity_id: sensor.gammu_received_message
      timeout: 120
      continue_on_timeout: false
    - variables:
        top_up_link: >-
          {%
            if states('sensor.gammu_received_message') is
              search('https:\/\/opwaarderen\.vodafone\.nl\/.*?(?: |$)')
            and state_attr('sensor.gammu_received_message', 'number')
              == '<Vodafone>'
          %}
            {{
              states('sensor.gammu_received_message') |
                regex_findall_index(
                  '(https:\/\/opwaarderen\.vodafone\.nl\/.*?)(?: |$)')
            }}
          {% endif %}
    - condition: template
      value_template: >-
        {{ top_up_link is not none }}
    - service: script.sms_notification
      data:
        phoneNumber: >-
          {{
            state_attr('sensor.gammu_received_authenticated_command',
              'number')
          }}
        message: >-
          💸 Vodafone prepaid credit top-up link
          \nTop-up the prepaid credit with € {{ credit }}:
          {{ top_up_link }}
    - wait_for_trigger:
        - platform: template
          value_template: >-
            {{
              states('sensor.gammu_credit_vodafone') | float -
                state_attr('sensor.gammu_credit_vodafone', 'last_credit') | float
              >= 5
            }}
      timeout: "00:20:00"
      continue_on_timeout: false
    - service: script.sms_notification
      data:
        phoneNumber: >-
          {{
            state_attr('sensor.gammu_received_authenticated_command',
              'number')
          }}
        message: >-
          💸 Vodafone prepaid credit topped-up
          \nVodafone credit was topped-up with
          € {{
            (
              states('sensor.gammu_credit_vodafone') | float -
              state_attr('sensor.gammu_credit_vodafone', 'last_credit') | float
            ) | round(0)
          }} – total credit is now
          € {{ states('sensor.gammu_credit_vodafone') }}.
  mode: restart
- alias: 📱 | ✉️ Status update (received "status [camera]")
  id: a8a8de72-902b-4ab1-8c1b-ce4ad1a1dae5
  trigger:
    - platform: state
      entity_id: sensor.gammu_received_authenticated_command
  condition:
    - condition: template
      value_template: >-
        {{
          states('sensor.gammu_received_authenticated_command')
            is match('^status( |$)')
        }}
  action:
    - variables:
        statusAction: >-
          {{
            states('sensor.gammu_received_authenticated_command') |
              regex_findall_index('^status ?(|camera)(?: |$)')
          }}
    - choose:
        - conditions: >-
            {{ statusAction == 'camera' }}
          sequence:
            - service: script.sms_notification
              data:
                phoneNumber: >-
                  {{
                    state_attr('sensor.gammu_received_authenticated_command',
                      'number')
                  }}
                message: >-
                  {% set result = namespace(cameras=[]) %}
                  {% for state in states.camera |
                    selectattr('attributes.brand', 'eq', 'Netgear Arlo')
                  %}
                    {% if state.attributes.last_video is defined %}
                      {% set result.cameras = result.cameras + [
                        '🎞️ ' ~ state.name ~
                        ' – latest video: ' ~ state.attributes.last_video

                      ] %}
                    {% endif %}
                      {% set result.cameras = result.cameras + [
                        '🖼️ ' ~ state.name ~
                        ' – latest thumbnail: ' ~ state.attributes.last_thumbnail
                      ] %}
                  {% endfor %}
                  📹 Latest camera footage:
                  \n\n{{ result.cameras | join('\\n\\n') }}
      default:
        - service: script.sms_notification
          data:
            phoneNumber: >-
              {{
                state_attr('sensor.gammu_received_authenticated_command',
                  'number')
              }}
            message: >-
              {% set result = namespace(sensors=[], cameras=[]) %}
              {% for state in states.binary_sensor |
                selectattr('attributes.device_class', 'in',
                  ['smoke', 'moisture', 'motion', 'opening', 'vibration']
                )
              %}
                {% if state.state == 'on' %}
                  {% set result.sensors = result.sensors + [state.name] %}
                {% endif %}
              {% endfor %}
              {% for state in states.camera |
                selectattr('attributes.brand', 'eq', 'Netgear Arlo')
              %}
                {#
                  Last active retrieval is a bit crude – but hey, it works!
                #}
                {% set result.cameras = result.cameras + [
                  state.name ~ ': ' ~ state.state | capitalize ~
                  ' (' ~ state.attributes.battery_level ~ '%)' ~

                  ' [' ~ states('sensor.' ~ state.object_id |
                    replace('_', '_last_')) ~']'
                ] %}
              {% endfor %}
              📡 Active binary sensors:
              \n\n🔸 {{ result.sensors | join('\\n🔸 ') }}
              \n\n📹 Status of cameras:
              \n\n🔸 {{ result.cameras | join('\\n🔸 ') }}
              \n\nRetrieve latest camera footage:
              \n\n✉️ #secret# status camera
- alias: >-
    🚨 | ✉️ Alarm arm away, disarm or silence
      (received "alarm [arm|disarm|silence]")
  id: 36d36c51-35b1-44ac-9820-f54dec96ca8f
  trigger:
    - platform: state
      entity_id: sensor.gammu_received_authenticated_command
  condition:
    - condition: template
      value_template: >-
        {{
          states('sensor.gammu_received_authenticated_command')
            is match('^alarm( |$)')
        }}
  action:
    - variables:
        alarmAction: >-
          {{
            states('sensor.gammu_received_authenticated_command') |
              regex_findall_index('^alarm ?(|arm|disarm|silence)(?: |$)')
          }}
    - choose:
        - conditions: >-
            {{ alarmAction == 'arm' }}
          sequence:
            - service: alarm_control_panel.alarm_arm_night
              entity_id: alarm_control_panel.home_alarm
              data: {}
        - conditions: >-
            {{ alarmAction == 'disarm' }}
          sequence:
            - service: alarm_control_panel.alarm_disarm
              data:
                code: !secret alarm_code
              entity_id: alarm_control_panel.home_alarm
        - conditions: >-
            {{ alarmAction == 'silence' }}
          sequence:
            - service: script.sirens
              data:
                mode: none
    - service: script.sms_notification
      data:
        phoneNumber: >-
          {{
            state_attr('sensor.gammu_received_authenticated_command', 'number')
          }}
        message: >-
          {%-
            if states('alarm_control_panel.home_alarm') in
              ['triggered', 'pending']
          -%}
            🚨 Home alarm is {{ states('alarm_control_panel.home_alarm') }}!
          {%- else -%}
            🛡️ Home alarm is {{ states('alarm_control_panel.home_alarm') }}
          {%- endif -%}
          {%- if alarmAction in ['arm', 'disarm', 'silence'] -%}
            \nYou requested the Home alarm to be {%
                if alarmAction == 'arm' -%}
              changed to "Armed away"-mode.
            {%- elif alarmAction == 'disarm' -%}
              changed to "Disarmed"-mode.
            {%- elif alarmAction == 'silence' -%}
              silenced...
            {%- endif %} To further control the alarm:
          {%- else -%}
            \nTo further control the alarm:
          {%- endif -%}
          \n\n✉️ #secret# alarm [arm|disarm|silence]
