- alias: 📱 | ✉️ Ping? Pong! (received "ping?")
  id: 249b657c-fd79-4ba4-b1a8-1040df15eb39
  trigger:
    - platform: state
      entity_id: sensor.gammu_received_authenticated_command
  condition:
    # Only trigger if the authenticated command was received in the last
    # 5-minutes — this prevents replaying an outdated/stale command upon Home
    # Assistant restart or when template entities are reloaded
    - condition: template
      value_template: >-
        {{
          (
            state_attr('sensor.gammu_received_authenticated_command',
              'datetime') | as_datetime | as_local
          ) >= (now() | as_local) - timedelta(minutes=5)
        }}
    # Using a template condition (instead of a static state) to allow greater
    # flexibility in matching the command. Cannot use the template condition as
    # trigger as that would prevent triggering if the same command is received
    # again (which is a valid use-case).
    - condition: template
      value_template: >-
        {{
          states('sensor.gammu_received_authenticated_command')
            is match('^ping\??( |$)')
        }}
  action:
    - service: script.sms_notification
      data:
        phoneNumber: >-
          {{
            state_attr('sensor.gammu_received_authenticated_command', 'number')
          }}
        message: 🏓 Pong!
- alias: 📱 | ✉️ List available commands (received "help|commands")
  id: ac9bad86-5ed6-41b5-b276-95dce78cdd3b
  trigger:
    - platform: state
      entity_id: sensor.gammu_received_authenticated_command
  condition:
    - condition: template
      value_template: >-
        {{
          (
            state_attr('sensor.gammu_received_authenticated_command',
              'datetime') | as_datetime | as_local
          ) >= (now() | as_local) - timedelta(minutes=5)
        }}
    - condition: template
      value_template: >-
        {{
          states('sensor.gammu_received_authenticated_command')
            is match('^(help|commands?)( |$)')
        }}
  action:
    - service: script.sms_notification
      data:
        phoneNumber: >-
          {{
            state_attr('sensor.gammu_received_authenticated_command', 'number')
          }}
        message: >-
          ✉️ #secret# status [camera]\n
          ✉️ #secret# alarm [arm|disarm|silence]\n
          ✉️ #secret# ping?
- alias: 📱 | ✉️ Status update (received "status [camera]")
  id: a8a8de72-902b-4ab1-8c1b-ce4ad1a1dae5
  variables:
    arlo_connection_state: !secret aarlo_connected_sensor
    tado_connection_state: !secret tado_ib1_connection_state
  trigger:
    - platform: state
      entity_id: sensor.gammu_received_authenticated_command
  condition:
    - condition: template
      value_template: >-
        {{
          (
            state_attr('sensor.gammu_received_authenticated_command',
              'datetime') | as_datetime | as_local
          ) >= (now() | as_local) - timedelta(minutes=5)
        }}
    - condition: template
      value_template: >-
        {{
          states('sensor.gammu_received_authenticated_command')
            is match('^status( |$)')
        }}
  action:
    - variables:
        statusAction: >-
          {{
            states('sensor.gammu_received_authenticated_command') |
              regex_findall_index('^status ?(|camera)(?: |$)')
          }}
    - choose:
        - conditions: >-
            {{ statusAction == 'camera' }}
          sequence:
            - service: script.sms_notification
              data:
                phoneNumber: >-
                  {{
                    state_attr('sensor.gammu_received_authenticated_command',
                      'number')
                  }}
                message: >-
                  {% set result = namespace(cameras=[]) %}
                  {% for state in states.camera |
                    selectattr('attributes.brand', 'defined') |
                    selectattr('attributes.brand', 'eq', 'Netgear Arlo')
                  %}
                    {% if state.attributes.last_video is defined %}
                      {% set result.cameras = result.cameras + [
                        '🎞️ ' ~ state.name ~
                        ' – latest video: ' ~ state.attributes.last_video

                      ] %}
                    {% endif %}
                      {% set result.cameras = result.cameras + [
                        '🖼️ ' ~ state.name ~
                        ' – latest thumbnail: ' ~ state.attributes.last_thumbnail
                      ] %}
                  {% endfor %}
                  📹 Latest camera footage:\n\n
                  {{ result.cameras | join('\\n\\n') }}
      default:
        - service: script.sms_notification
          data:
            phoneNumber: >-
              {{
                state_attr('sensor.gammu_received_authenticated_command',
                  'number')
              }}
            message: >-
              {% set result = namespace(sensors=[], cameras=[]) %}
              {% for state in states.binary_sensor |
                selectattr('attributes.device_class', 'defined') |
                selectattr('attributes.device_class', 'in',
                  ['smoke', 'moisture', 'motion', 'opening', 'vibration']
                )
              %}
                {% if state.state == 'on' %}
                  {% set result.sensors = result.sensors + [state.name] %}
                {% endif %}
              {% endfor %}
              {% for state in states.camera |
                selectattr('attributes.brand', 'defined') |
                selectattr('attributes.brand', 'eq', 'Netgear Arlo')
              %}
                {#
                  Last active retrieval is a bit crude – but hey, it works!
                #}
                {% set result.cameras = result.cameras + [
                  state.name ~ ': ' ~ state.state | capitalize ~
                  ' (' ~ state.attributes.battery_level ~ '%)' ~

                  ' [' ~ states('sensor.' ~ state.object_id |
                    replace('_', '_last_')) ~']'
                ] %}
              {% endfor %}
              {{ '⚡ Power is on' if states('binary_sensor.power_outage') ==
                'off' else '⛔ Power is out!' }}\n\n
              📡 Connectivity:\n\n
                {{ '✅' if states('binary_sensor.google_dns_ping') == 'on'
                  else '⛔' }} Internet ({{ state_attr(
                    'binary_sensor.google_dns_ping', 'round_trip_time'
                  ) | float | round(1) }} ms)\n
                {{ '✅' if states('binary_sensor.remote_ui') == 'on'
                  else '⛔' }} Nabu Casa\n
                {{ '✅' if states(arlo_connection_state) == 'on'
                  else '⛔' }} Arlo\n
                {{ '✅' if states(tado_connection_state) == 'on'
                  else '⛔' }} tadoº\n\n
              {% if result.sensors | length > 0 %}
                🤖 Active binary sensors:\n\n
                ◾ {{ result.sensors | join('\\n◾ ') }}\n\n
              {% endif %}
              📹 Status of cameras:\n\n
              ◾ {{ result.cameras | join('\\n◾ ') }}\n\n
              Retrieve latest camera footage:\n\n
              ✉️ #secret# status camera
- alias: >-
    🚨 | ✉️ Alarm arm away, disarm or silence
      (received "alarm [arm|disarm|silence]")
  id: 36d36c51-35b1-44ac-9820-f54dec96ca8f
  trigger:
    - platform: state
      entity_id: sensor.gammu_received_authenticated_command
  condition:
    - condition: template
      value_template: >-
        {{
          (
            state_attr('sensor.gammu_received_authenticated_command',
              'datetime') | as_datetime | as_local
          ) >= (now() | as_local) - timedelta(minutes=5)
        }}
    - condition: template
      value_template: >-
        {{
          states('sensor.gammu_received_authenticated_command')
            is match('^alarm( |$)')
        }}
  action:
    - variables:
        alarmAction: >-
          {{
            states('sensor.gammu_received_authenticated_command') |
              regex_findall_index('^alarm ?(|arm|disarm|silence)(?: |$)')
          }}
    - choose:
        - conditions: >-
            {{ alarmAction == 'arm' }}
          sequence:
            - service: alarm_control_panel.alarm_arm_away
              entity_id: alarm_control_panel.home_alarm
        - conditions: >-
            {{ alarmAction == 'disarm' }}
          sequence:
            - service: alarm_control_panel.alarm_disarm
              data:
                code: !secret alarm_code
              entity_id: alarm_control_panel.home_alarm
        - conditions: >-
            {{ alarmAction == 'silence' }}
          sequence:
            - service: script.sirens
              data:
                mode: none
    - service: script.sms_notification
      data:
        phoneNumber: >-
          {{
            state_attr('sensor.gammu_received_authenticated_command', 'number')
          }}
        message: >-
          {%
            if states('alarm_control_panel.home_alarm') in
              ['triggered', 'pending']
          %}
            🚨 Home Alarm is {{ states('alarm_control_panel.home_alarm') }}!\n
          {%
            elif states('alarm_control_panel.home_alarm') == 'disarmed'
          %}
            🔓 Home Alarm is disarmed\n
          {% else %}
            🛡️ Home Alarm is in "{{
                states('alarm_control_panel.home_alarm') | replace('_', ' ') |
                capitalize
              }}"-mode\n
          {% endif %}
          {% if alarmAction in ['arm', 'disarm', 'silence'] %}
            You requested the Home Alarm to be
            {% if alarmAction == 'arm' -%}
              changed to "Armed away"-mode.\n\n
            {%- elif alarmAction == 'disarm' -%}
              disarmed.\n\n
            {%- elif alarmAction == 'silence' -%}
              silenced...\n\n
            {%- endif %}
          {%- endif -%}
          To further control the alarm:\n\n
          ✉️ #secret# alarm [arm|disarm|silence]
