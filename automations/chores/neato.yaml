- alias: üì± | üßπ Notify on (potential) Neato docking-failure
  id: 3a327d1c-422a-496a-8dd4-b3700fdb41e1
  trigger:
    # It appears this is the most reliable way to detect whether Neato didn't
    # dock properly. Making it smarter (e.g. by relying on the state Neato
    # reports) doesn't work (as the reported state doesn't always reflect
    # reality ‚Äì Neato can be driving around the Living room while its state
    # indicates it's "docked").
    - platform: numeric_state
      entity_id:
        - sensor.neato_d7_battery
        - sensor.d7_upstairs_battery
      below: 95
      for: "03:00:00"
  condition: []
  action:
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          group: general
          channel: Notification
          tag: >-
            neato_failure_{{ context.id }}
          targetDevices: home
          title: üßπ Neato failed to dock!
          message: >-
            Neato {{ device_attr(trigger.entity_id, 'name') }}'s battery-level
            has been below 95% for more than three hours ‚Äì please ensure it has
            docked properly...
    - wait_for_trigger:
        - platform: template
          value_template: >-
            {{ states(trigger.entity_id) | int(0) >= 95 }}
      timeout: "12:00:00"
      continue_on_timeout: false
    - service: persistent_notification.dismiss
      data:
        notification_id: >-
          neato_failure_{{ context.id }}
  mode: parallel
  max: 2
- alias: üì± | üßπ Notify on Neato dustbin full
  id: f8ba3ff2-5319-40f6-8038-e75fa4f0fe02
  trigger:
    - platform: state
      entity_id:
        - vacuum.neato_d7
        - vacuum.d7_upstairs
      attribute: status
      to:
        - Dust bin full
        - Please empty dust bin
  condition:
    # Neato drops offline from time to time, prevent (re)triggering when the
    # integration comes back online
    - condition: template
      value_template: >-
        {{ trigger.from_state.state not in ['unknown', 'unavailable'] }}
  action:
    - service: script.turn_on
      target:
        entity_id: script.persistent_notification
      data:
        variables:
          group: chores
          channel: Notification
          # Limit to a single notification per Neato unit ‚Äì the "bin full"
          # state can persist for some time, no need to generate identical
          # notifications...
          tag: >-
            neato_failure_{{ trigger.entity_id }}
          targetDevices: home
          title: üßπ Neato dustbin full
          message: >-
            Neato {{ device_attr(trigger.entity_id, 'name') }}'s dustbin is
            full, please empty it{%-
              if state_attr(trigger.entity_id, 'status') == 'Dust bin full'
            -%} ‚Äì Neato will automatically resume cleaning when its dustbin is
            emptied{%-
              endif
            -%}...
    - wait_for_trigger:
        - platform: template
          value_template: >-
            {{
              states(trigger.entity_id) in ['docked', 'cleaning'] and
              state_attr(trigger.entity_id, 'status') not in
                ['Dust bin full', 'Please empty dust bin']
            }}
      timeout: "12:00:00"
      continue_on_timeout: false
    - service: persistent_notification.dismiss
      data:
        notification_id: >-
          neato_failure_{{ trigger.entity_id }}
  mode: parallel
  max: 2
- alias: üßπ | ‚úàÔ∏è Disable Neato schedules (on vacation)
  id: 58b5a8da-d714-4314-adbb-fbd0f6fc352c
  trigger:
    - platform: state
      entity_id: input_boolean.alarm_vacation_mode
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id:
        - switch.neato_d7_schedule
        - switch.d7_upstairs_schedule
      state: "on"
  action:
    - service: switch.turn_off
      entity_id:
        - switch.neato_d7_schedule
        - switch.d7_upstairs_schedule
  mode: single
- alias: üßπ | ‚úàÔ∏è Enable Neato schedules (back from vacation)
  id: 7ae52e61-d2d3-4772-9e08-b1f93012e871
  trigger:
    - platform: state
      entity_id: input_boolean.alarm_vacation_mode
      from: "on"
      to: "off"
  condition:
    - condition: state
      entity_id:
        - switch.neato_d7_schedule
        - switch.d7_upstairs_schedule
      state: "off"
  action:
    - service: switch.turn_on
      entity_id:
        - switch.neato_d7_schedule
        - switch.d7_upstairs_schedule
  mode: single
