- alias: üîä | üöó "Welcome home!" announcement (someone home)
  id: 4cfd2c21-b014-4b43-b8ad-99db4dc9cb6d
  trigger:
    # Should be away for more than 90-minutes to receive a "Welcome home"
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: armed_away
      for: "01:30:00"
  condition: []
  action:
    - wait_for_trigger:
        - platform: state
          entity_id: alarm_control_panel.home_alarm
          # The omission of "armed_vacation" is intentional: No value in
          # summarising a vacation's worth of announcements; only continue from
          # a regular "armed_away" state.
          from: armed_away
          to:
            - pending
            - disarmed
      # Home Alarm is "Armed Vacation" well before this timeout expires...
      timeout: "24:00:00"
      continue_on_timeout: false
    # Wait for pending Home Alarm to disarm; abort if it doesn't
    - if:
        - condition: state
          entity_id: alarm_control_panel.home_alarm
          state: pending
      then:
        - wait_for_trigger:
            - platform: state
              entity_id: alarm_control_panel.home_alarm
              from: pending
              to: disarmed
          timeout: 60
          continue_on_timeout: false
    # Abort all queued up announcements
    - event: tts_queue_abort_all
    # The message is rendered the moment the announcement gets queued; this
    # would prevent it from working properly as there will _always_ be a single
    # person home at that time (namely, the person who's phone got detected
    # first).
    # Wait an additional 5-minutes for more people to "arrive". This greatly
    # increases the chance of rendering the correct message (at the cost of a
    # moderate delay in announcing it).
    - wait_for_trigger:
        - platform: state
          entity_id:
            - !secret person_1
            - !secret person_2
          from: not_home
          to: home
      timeout: "00:05:00"
      # After waiting 5-minutes, continue regardless...
      continue_on_timeout: true
    # The below only works because there's two occupants with a single phone
    # each, so the "not_home" phone always belongs to the person who's away...
    # The reason the "source"-device from the preceding trigger can't be used is
    # the fact that each person has two devices: One (GPS-tracked) phone and one
    # device whose MAC address is tracked on the network. The latter is often
    # faster to respond, but of course doesn't provide an actual GPS location.
    - variables:
        home: >-
          {{
            expand('group.family') |
            selectattr('state', '==', 'home') |
            map(attribute = 'name') | list
          }}
        away: >-
          {{
            expand(
              'device_tracker.pixel_9_pro_unifi',
              'device_tracker.samsung_s21_fe'
            ) |
            selectattr('state', '==', 'not_home') |
            map(attribute = 'entity_id') | list
          }}
    - service: script.turn_on
      target:
        entity_id: script.tts_queue
      data:
        variables:
          message: >-
            Welcome home
            {% if home | length == 1 %}
              {{ home | first | regex_replace(' .*$', '') }}
            {% endif %}!
    - if:
        - >-
          {{ away | length == 1 }}
      then:
        - service: script.turn_on
          target:
            entity_id: script.tts_queue
          data:
            variables:
              chime: false
              message: >-
                {%
                  set person_away = expand('group.family') |
                    selectattr('state', '==', 'not_home') | list | first
                %}
                {%
                  set sensor = 'sensor.' ~ away | first |
                    regex_replace('^.*\.', '') ~ '_geocoded_location'
                %}
                You are the only person home;
                {{ person_away.name | regex_replace(' .*$', '') }} left
                {{ person_away.last_changed | relative_time }} ago and is
                currently somewhere in {{ state_attr(sensor, 'locality') }}.
    - service: script.turn_on
      target:
        entity_id: script.tts_queue
      data:
        variables:
          chime: false
          message: >-
            While you were away,
            {% from 'voice.jinja' import activity_while_armed %}
            {% set activity_while_armed = activity_while_armed() %}
            {% if activity_while_armed | trim  == '' %}
               nothing of interest happened
            {% else %}
              {{ activity_while_armed }}
            {% endif %}.
- alias: üîä | ‚úàÔ∏è Clear queued up announcements (back from vacation)
  id: 2ee10a57-7f48-4a3b-9877-39ddff276020
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      from: armed_vacation
      to: disarmed
  condition: []
  action:
    - event: tts_queue_abort_all
