- alias: Queue Albert Heijn ETA announcement
  id: 381fa915-60ea-4d01-ab6c-51d245da3b8d
  triggers:
    - trigger: state
      entity_id: script.wakeup_alarm
      from: "off"
      to: "on"
  conditions:
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.last_notification_albert_heijn_eta
          state:
            - unavailable
            - unknown
    # Albert Heijn ETA is for today
    - condition: template
      value_template: >-
        {{
          states('sensor.last_notification_albert_heijn_eta') | as_datetime
            >= today_at('00:00:00')
        }}
  actions:
    - variables:
        eta_start: >-
          {{
            states('sensor.last_notification_albert_heijn_eta') |
              as_timestamp | timestamp_custom('%H:%M')
          }}
        eta_end: >-
          {{
            (states('sensor.last_notification_albert_heijn_eta') |
              as_datetime + timedelta(seconds=state_attr(
                  'sensor.last_notification_albert_heijn_eta', 'interval'))
            ) | as_timestamp | timestamp_custom('%H:%M')
          }}
    - action: script.turn_on
      target:
        entity_id: script.tts_queue
      data:
        variables:
          channel: announce
          tag: good_morning
          # Set to expire when at Albert Heijn's ETA. As an added benefit, this
          # allows %WAIT_REMAINING% to be used as a _dynamic_ indication as of
          # when Albert Heijn is expected to arrive (e.g. "in 30 minutes").
          expiry: >-
            {{
              [0,
                states('sensor.last_notification_albert_heijn_eta') |
                  as_timestamp - now() | as_timestamp
              ] | max
            }}
          message: >-
            Albert Heijn expects to arrive between {{ eta_start }} and
            {{ eta_end }}. That is %WAIT_REMAINING%
    # The initial wakeup alarm can sound twice within a 5-minute window; block
    # to prevent queuing twice
    - delay: "00:10:00"
  mode: single
  max_exceeded: silent
- alias: Queue Albert Heijn ETA announcement
  id: 4bc40f3a-f99c-4a8e-a76d-69bbe6992366
  triggers:
    - trigger: state
      entity_id: sensor.last_notification_albert_heijn_eta
      not_to:
        - unknown
        - unavailable
  variables:
    albert_heijn_eta: >-
      {% from 'voice.jinja' import albert_heijn_eta %}
      {{ albert_heijn_eta() }}
  conditions:
    - >-
      {{ albert_heijn_eta | trim != '' }}
    # Only relevant if ETA is in the future — prevents both stale notifications
    # (and the occasional notification that arrives after its actual ETA) from
    # getting queued...
    - >-
      {{
        states('sensor.last_notification_albert_heijn_eta') |
          as_datetime > now()
      }}
  actions:
    # Abort any previously queued (and now invalid) announcements...
    - event: tts_queue_abort
      event_data:
        tag: albert_heijn_eta
    - action: script.turn_on
      target:
        entity_id: script.tts_queue
      data:
        variables:
          tag: albert_heijn_eta
          expiry: "06:00:00"
          message: >-
            {{ albert_heijn_eta }}
- alias: Queue "Albert Heijn"-reminder
  id: e1aa5416-a8cd-4c82-b8e9-d9a0bf1da556
  triggers:
    - trigger: state
      entity_id: script.lights_out
      from: "off"
      to: "on"
  variables:
    albert_heijn_eta: >-
      {% from 'voice.jinja' import albert_heijn_eta %}
      {{ albert_heijn_eta() }}
    tablet_kitchen_user_id: !secret tablet_kitchen_user_id
  conditions:
    - >-
      {{ albert_heijn_eta | trim != '' }}
    # Only relevant if Albert Heijn ETA is in the future — otherwise we're
    # probably about to replay this morning's announcement...
    - >-
      {{
        states('sensor.last_notification_albert_heijn_eta') |
          as_datetime > now()
      }}
  actions:
    - delay: 4 # Queue this one up last
    - variables:
        priority: >-
          {% if trigger.to_state.context.user_id == tablet_kitchen_user_id %}
            regular
          {% else %}
            whisper
          {% endif %}
    - action: script.turn_on
      target:
        entity_id: script.tts_queue
      data:
        variables:
          channel: announce
          tag: goodnight
          priority: >-
            {{ priority }}
          message: >-
            {{ albert_heijn_eta }}
  mode: single
  max_exceeded: silent
