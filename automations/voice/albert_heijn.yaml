# The other "Good morning"-announcements are queued up at the "everyone awake"
# trigger (a more straightforward trigger). Depending on how quickly we snooze
# the wakeup alarm, the announcements could play a couple minutes later.
# As the contents of the Albert Heijn ETA are highly time-sensitive, it's queued
# up just before (ie, rendered) the announcements are played.
- alias: ğŸ›’ | ğŸ”Š Announce Albert Heijn ETA (wakeup alarm snoozed or silenced)
  id: 381fa915-60ea-4d01-ab6c-51d245da3b8d
  trigger:
    - platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.wakeup_snooze_time
    - platform: event
      event_type: wakeup_alarm_silenced
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.last_notification_albert_heijn_eta
          state:
            - unavailable
            - unknown
    # Albert Heijn ETA is for today
    - condition: template
      value_template: >-
        {{
          states('sensor.last_notification_albert_heijn_eta') | as_datetime
            >= today_at('00:00:00')
        }}
  action:
    - variables:
        eta_start: >-
          {{-
            states('sensor.last_notification_albert_heijn_eta') |
              as_timestamp | timestamp_custom('%H:%M')
          -}}
        eta_end: >-
          {{-
            (states('sensor.last_notification_albert_heijn_eta') |
              as_datetime + timedelta(seconds=state_attr(
                  'sensor.last_notification_albert_heijn_eta', 'interval'))
            ) | as_timestamp | timestamp_custom('%H:%M')
          -}}
        eta_minutes: >-
          {{-
            ((states('sensor.last_notification_albert_heijn_eta') |
              as_timestamp - now() | as_timestamp) / 60) | int
          -}}
    # Abort any previously queued announcements â€” they're superseded by this
    # "Good morning"-announcement...
    - event: tts_queue_abort
      event_data:
        tag: albert_heijn_eta
    - service: script.turn_on
      target:
        entity_id: script.tts_queue
      data:
        variables:
          channel: announce
          tag: good_morning
          chime: false
          message: >-
            Albert Heijn expects to arrive between {{ eta_start }} and
            {{ eta_end }}. That is
            {% if eta_minutes < 5 %}
              about now!
            {% elif eta_minutes < 55 %}
              in about {{ ((eta_minutes / 5) | round * 5) }} minutes...
            {% elif eta_minutes < 65 %}
              in about an hour...
            {% else %}
              in more than an hour...
            {% endif %}
  mode: single
- alias: ğŸ›’ | ğŸ”Š Queue Albert Heijn ETA announcement
  id: 4bc40f3a-f99c-4a8e-a76d-69bbe6992366
  trigger:
    - platform: state
      entity_id: sensor.last_notification_albert_heijn_eta
      not_to:
        - unknown
        - unavailable
  variables:
    albert_heijn_eta: >-
      {% from 'voice.jinja' import albert_heijn_eta %}
      {{ albert_heijn_eta() }}
  condition:
    - >-
      {{ albert_heijn_eta | trim != '' }}
    # Only relevant if ETA is in the future â€” prevents both stale notifications
    # (and the occasional notification that arrives after its actual ETA) from
    # getting queued...
    - >-
      {{
        states('sensor.last_notification_albert_heijn_eta') |
          as_datetime > now()
      }}
  action:
    # Abort any previously queued (and now invalid) announcements...
    - event: tts_queue_abort
      event_data:
        tag: albert_heijn_eta
    - service: script.turn_on
      target:
        entity_id: script.tts_queue
      data:
        variables:
          tag: albert_heijn_eta
          expiry: "06:00:00"
          message: >-
            {{ albert_heijn_eta }}
