# "TTS attention"-automations trigger important, but non-urgent/time-sensitive,
# notifications to be announced throughout the house.
#
# The announcements are queued up as they occur using "script.tts_queue". When
# any of the below automations trigger, they raise a "tss_attention" event with
# the relevant speaker (i.e., where to announce) in the event-data. This results
# in "script.tts_queue" releasing its queue into "script.tts_announce" which
# subsequently reads out all announcements.
#
# The goal is to define triggers that indicate immediate and purposeful human
# action (as opposed to most other automations which try to abstract away from
# explicit human actions). The thinking being that the best moment to send out
# (a blast of) TTS notification(s) is when someone is actively "interacting"
# with a room (e.g., switching on the lights; opening a window).

- alias: TTS attention — Attic
  id: c832165f-53c5-425e-a6dc-e3002b72bdde
  triggers:
    # Interaction with Attic Hue Tap
    - trigger: event
      event_type: hue_event
      event_data:
        id: attic_switch_button
        type: initial_press
    # Change of position/orientation for the Attic window
    - trigger: state
      id: attic_window
      entity_id: sensor.attic_window_position
      not_to:
        - unavailabe
        - unknown
    # Motion in the Attic hallway
    - trigger: state
      entity_id: binary_sensor.presence_91
      from: "off"
      to: "on"
    # HA Voice satellite
    - trigger: state
      entity_id: assist_satellite.ha_voice_attic
      from:
        - listening
        - processing
        - responding
      to: idle
      for: "00:00:10"
  conditions:
    # It seems using a combination of not_from/not_to to filter out transitions
    # that go "through" unavailable/unknown (happens, for example, when template
    # sensors are reloaded) doesn't work... So, rely on a template-condition
    # that achieves the same (in a somewhat more convoluted manner).
    - >-
      {{
        trigger.id != 'attic_window' or
          trigger.from_state.state not in ['unavailable', 'unknown']
      }}
    - condition: state
      entity_id: script.tts_queue
      state: "on"
    # Don't release the queue when the housekeeper is present — attention is
    # most likely not triggered by one of the house's occupants
    - condition: state
      entity_id: input_boolean.housekeeper_present
      state: "off"
  actions:
    - event: tts_attention
      event_data:
        room: attic
  mode: single
  max_exceeded: silent
- alias: TTS attention — Living Room
  id: 5d9c02cb-4720-46f0-b22d-87e278490cb9
  triggers:
    # Interaction with the Hue Tap (Dial) in the Living Room
    - trigger: event
      event_type: hue_event
      event_data:
        id: living_room_switch_garden_button
        type: initial_press
    - trigger: event
      event_type: hue_event
      event_data:
        id: living_room_switch_couch_button
        type: initial_press
    - trigger: event
      event_type: hue_event
      event_data:
        id: hue_tap_dial_ensuite_button
        type: short_release
    # Interaction with the tablet in the Kitchen
    - trigger: state
      entity_id: switch.redmi_pad_se_screen
      # Wait a short while; when the screen switches on, attention is initially
      # direct towards the tablet...
      id: delayed
      from: "off"
      to: "on"
    # Motion at the Kitchen counter
    - trigger: state
      entity_id:
        - binary_sensor.presence_53 # Sink
        - binary_sensor.presence_155 # Coffee machine
      from: "off"
      to: "on"
    # Switching off the Android TV
    - trigger: state
      entity_id: media_player.eh_ls800b
      from: "on"
      to: "off"
    # Closing the Kitchen door – relevant when _entering_ the house. Upon
    # departure, this might cause some messages to be missed.
    # For now the benefits outweigh the costs: When leaving it's likely other
    # triggers already fired (ie, there are no messages queued up). The trigger
    # could be made "smarter". That would require a separate automation which is
    # overkill for now...
    - trigger: state
      entity_id: binary_sensor.openclose_12
      id: delayed
      from: "on"
      to: "off"
    # HA Voice satellite
    - trigger: state
      entity_id: assist_satellite.ha_voice_living_room
      from:
        - listening
        - processing
        - responding
      to: idle
      for: "00:00:10"
  conditions:
    - condition: state
      entity_id: script.tts_queue
      state: "on"
    - condition: state
      entity_id: input_boolean.housekeeper_present
      state: "off"
  actions:
    - if:
        - condition: trigger
          id: delayed
      then:
        - delay: "00:00:10"
    - event: tts_attention
      event_data:
        room: living_room
  mode: single
  max_exceeded: silent
- alias: TTS attention — Bedroom
  id: 9e6be318-a6e4-4dc4-9536-bd8175580bd2
  triggers:
    # Interaction with Bedroom Hue Tap
    - trigger: event
      event_type: hue_event
      event_data:
        id: bedroom_switch_button
        type: initial_press
    # Opening the Balcony door
    - trigger: state
      entity_id: binary_sensor.openclose_18
      from: "off"
      to: "on"
    # Opening or closing the Bedroom windows
    - trigger: state
      entity_id:
        - binary_sensor.openclose_19
        - binary_sensor.openclose_20
      to: ~
    # Motion in the Upstairs hallway
    - trigger: state
      entity_id: binary_sensor.presence_127
      from: "off"
      to: "on"
    # HA Voice satellite
    - trigger: state
      entity_id: assist_satellite.ha_voice_bedroom
      from:
        - listening
        - processing
        - responding
      to: idle
      for: "00:00:10"
  conditions:
    - condition: state
      entity_id: script.tts_queue
      state: "on"
    - condition: state
      entity_id: input_boolean.housekeeper_present
      state: "off"
    # In the Bedroom we're a bit more strict: Don't trigger when everyone's
    # asleep, nor during the hard-coded "quiet hours"
    - condition: state
      entity_id: script.lights_out
      state: "off"
    - condition: state
      entity_id: timer.everyone_asleep_delay
      state: idle
    - condition: state
      entity_id: input_boolean.everyone_asleep
      state: "off"
    - condition: time
      after: "06:00:00"
      before: "23:00:00"
  actions:
    - event: tts_attention
      event_data:
        room: bedroom
  mode: single
  max_exceeded: silent
