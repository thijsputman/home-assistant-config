- alias: ðŸ›’ | ðŸ’¤ Prepone Â«wakeupÂ» time (Albert Heijn arriving early)
  id: 866031ac-89c6-4ab4-8a76-b0f67b910ae7
  trigger:
    - platform: state
      entity_id: sensor.last_notification_albert_heijn_eta
      not_to:
        - unavailabe
        - unknown
  condition:
    - condition: state
      entity_id: group.family
      state: home
    # Only act on Albert Heijn ETAs within 15-minutes of today's _or_ tomorrow's
    # Â«wakeupÂ» time (mainly to guard against acting on a stale ETA).
    # Note that we need to explicitly distinguish between today and tomorrow
    # _before_ comparing against Â«wakeupÂ» time, as that is date-less...
    - >-
      {%
        set eta = states('sensor.last_notification_albert_heijn_eta') |
          as_datetime - timedelta(minutes=15)
      %}
      {% set wakeup = today_at(states('input_datetime.wakeup')) %}
      {{
        (
          eta.day == now().day and eta <= wakeup
        ) or (
          eta.day == (now() + timedelta(days=1)).day and
            eta <= (wakeup + timedelta(days=1))
        )
      }}
  action:
    # Set Â«wakeupÂ» time to 15-minutes _before_ Albert Heijn ETA â€” note that
    # "input_datetime.wakeup" only cares about the time component; the date
    # component is ignored
    - service: input_datetime.set_datetime
      data:
        datetime: >-
          {%
            set wakeup = states('sensor.last_notification_albert_heijn_eta') |
              as_datetime - timedelta(minutes=15)
          %}
          {#
            If the Â«wakeupÂ» time would be _before_ the current time, set the
            alarm to sound ASAP. This is possible if an ETA change comes through
            very late (i.e., within the "wakeup grace-period").
          #}
          {% if wakeup <= now() %}
            {{ now() + timedelta(seconds=10) }}
          {% else %}
            {{ wakeup }}
          {% endif %}
      target:
        entity_id: input_datetime.wakeup
  mode: single
