- alias: Wakeup light Bedroom
  id: 8dfa00b1-9749-4b77-b0c9-7eceaf146bf6
  triggers:
    - trigger: time
      at: input_datetime.wakeup_light_start
  conditions:
    - condition: state
      entity_id: light.bedroom
      state: "off"
    # N.B. Compared to the wakeup alarm automation the omission of the occupancy
    # condition is intentionally (as the daily wakeup light is considered to be
    # part of occupancy simulation)
    - condition: state
      entity_id: timer.wakeup_grace_time
      state: idle
    - condition: state
      entity_id: input_boolean.wakeup_alarm_mute
      state: "off"
  actions:
    - action: script.turn_on
      target:
        entity_id: script.wakeup_light
  mode: single
  max_exceeded: silent
- alias: Bedroom lights on; off after 2-hours
  id: 41125109-0a50-4f70-aaaf-ec40cd780a3e
  triggers:
    - trigger: time
      at: input_datetime.wakeup
  conditions:
    # Run regardless of whether the lights are on – this ensures that if the
    # lights are on, but at a lower intensity, we punch them back to maximum
    # brightness at «wakeup » time...
    - condition: state
      entity_id: timer.wakeup_grace_time
      state: idle
    - condition: state
      entity_id: input_boolean.wakeup_alarm_mute
      state: "off"
  actions:
    - action: scene.turn_on
      target:
        entity_id: scene.bedroom_concentrate
    # Switch the lights off after 2-hours
    - wait_for_trigger:
        - trigger: state
          entity_id: light.bedroom
          from: "on"
          to: "off"
      timeout: "02:00:00"
      continue_on_timeout: true
    # Trigger expired – continue; otherwise we abort (the light were already
    # switched off)
    - condition: template
      value_template: >-
        {{ wait.trigger is none }}
    - action: light.turn_off
      entity_id: light.bedroom
  mode: single
  max_exceeded: silent
