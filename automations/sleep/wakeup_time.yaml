- alias: ğŸ’¤ Set next Â«wakeupÂ» (at Â«wakeupÂ» time)
  id: 01d828d8-da3e-432c-8beb-0f20392d2f8e
  trigger:
    - platform: time
      at: input_datetime.wakeup
  condition:
    - condition: state
      entity_id: timer.wakeup_grace_time
      state: idle
  action:
    # The "grace-time" timer prevents the alarm (and related logic) from,
    # _unintentionally_ running multiple times in the same day. This occurs
    # when today's alarm triggers _before_ tomorrow's preset alarm time (as
    # defined below). If the alarm is to sound a second time during the same
    # day, simple cancel the timer...
    # The start of the timer is delayed by 10-seconds to ensure it doesn't
    # create race-conditions with the other automations running at Â«wakeupÂ»
    # time (and thus unintentionally prevents them from running).
    # Interestingly, this only recently (as of HA 2022.2) became an issue, prior
    # to that it has worked fine without the delay for a long time... ğŸ¤¨
    - delay: "00:00:10"
    - service: timer.start
      entity_id: timer.wakeup_grace_time
    - choose:
        - conditions:
            - condition: time
              weekday: [fri, sat] # yamllint disable-line rule:brackets
          sequence:
            - service: input_datetime.set_datetime
              data:
                time: "09:00:00"
              entity_id: input_datetime.wakeup
        - conditions:
            - condition: time
              # yamllint disable-line rule:brackets
              weekday: [sun, mon, tue, wed, thu]
          sequence:
            - service: input_datetime.set_datetime
              data:
                time: "08:00:00"
              entity_id: input_datetime.wakeup
    # Unmute the wakeup alarm
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.wakeup_alarm_mute
  mode: single
- alias: ğŸ’¤ Set Â«wakeup light startÂ» time (on Â«wakeupÂ» time change)
  id: 2067fdfb-bad3-40fb-aa7d-d35430dd5b78
  trigger:
    - platform: state
      entity_id: input_datetime.wakeup
  condition: []
  action:
    - service: input_datetime.set_datetime
      data:
        time: >-
          {{
            (state_attr('input_datetime.wakeup', 'timestamp') | int - 1200) |
              timestamp_custom('%H:%M:%S', false)
          }}
      entity_id: input_datetime.wakeup_light_start
  mode: single
- alias: ğŸ’¤ | ğŸ“… Prepone Â«wakeupÂ» time (calendar-event)
  id: 2a7fa567-68f3-4327-9818-1bfe8a7c3e70
  trigger:
    - platform: calendar
      event: start
      entity_id: calendar.home
      # Update the Â«wakeupÂ» time well before we go to sleep (so it's visible on
      # the dashboard when we do), and (hopefully) well _after_ today's wakeup
      # alarm...
      offset: "-12:00:00"
  condition:
    # Ignore all-day appointments
    - >-
      {{ trigger.calendar_event.all_day is false }}
    # As an extra backstop, ensure we're running _after_ the current Â«wakeupÂ»
    # time (to prevent unintentionally changing today's wakeup alarm)
    - >-
      {{ today_at(states('input_datetime.wakeup')) < now()}}
  action:
    # Act if the appointment starts _within_ 30 minutes of the current Â«wakeupÂ»
    # time; accounting for the fact Â«wakeupÂ» time is dateless and we thus have
    # to explicitly do a comparison for today and tomorrow
    - if: >-
        {% set appointment = trigger.calendar_event.start | as_datetime %}
        {% set wakeup = today_at(states('input_datetime.wakeup')) %}
        {{
          (
            appointment.day == now().day and
              wakeup - appointment > timedelta(minutes = -30)
          ) or (
            appointment.day == (now() + timedelta(days=1)).day and
              (wakeup + timedelta(days=1)) - appointment >
                timedelta(minutes = -30)
          )
        }}
      then:
        - service: input_datetime.set_datetime
          data:
            # Set Â«wakeupÂ» time to 30-minutes _before_ the appointment
            datetime: >-
              {{
                trigger.calendar_event.start |
                  as_datetime - timedelta(minutes = 30)
              }}
          target:
            entity_id: input_datetime.wakeup
  mode: queued
