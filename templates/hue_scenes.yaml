# Heuristically track the Hue scene name based on the group's (i.e. Hue room/
# zone) brightness, xy_color and the number of lights switched on.
#
# Uses the custom light groups defined in "ðŸ“„ ./lights.yaml". This is necessary
# as the (relative) instability of some non-Signify bulbs cause the heuristic to
# fail. The custom lights groups explicitly exclude these instable bulbs.
# Additionally, the custom light groups are used to enumerate the number of
# lights switched on; this further increases the accuracy of the heuristic.
#
# Caveats:
#   * Transitions are not guaranteed to be discrete: There can be intermediate
#     state(s) as the individual lights catch up with the scene. The heuristic
#     tries its best to cope with this, but there are cases where a transition
#     through <Unknown> cannot be avoided.
#   * Some of the scenes are "unstable", they either initialise at slightly
#     different values from one activation to another or alternate between
#     values while active â€“ these variations have to be empirically determined
#     for each of the tracked scenes.

# Living room [Hue room]
- trigger:
    - platform: state
      entity_id: light.hue_group_living_room
      attribute: brightness
      to: ~
      # The Hue API doesn't always do a discrete transition â€“ hold the state for
      # 2 seconds to prevent transitioning through <Unknown> while the lights
      # catch up with the scene
      for: "00:00:02"
    - platform: state
      entity_id: light.hue_group_living_room
      attribute: xy_color
      to: ~
      # Idem...
      for: "00:00:02"
    # Short-circuit the "off"-state â€“ no need to wait for the attributes to
    # update in this case
    - platform: state
      entity_id: light.hue_group_living_room
      to: "off"
  sensor:
    - name: Hue scene (Living room)
      unique_id: 69b3fafe-1b0a-4f39-88c5-c92f31806e1a
      icon: mdi:movie-filter
      state: >-
        {% if states('light.living_room') == 'off' %}
          <Off>
        {% else %}
          {%
            set num_lights = expand(
              state_attr('light.hue_group_living_room', 'entity_id')
            ) | selectattr('state', '==', 'on') | list | length
          %}
          {%
            set brightness =
              state_attr('light.hue_group_living_room', 'brightness') | int(-1)
          %}
          {%
            if state_attr('light.hue_group_living_room', 'xy_color') == none
          %}
            {% set xy_color = [-1.0, -1.0] %}
          {% else %}
            {%
              set xy_color =
                state_attr('light.hue_group_living_room', 'xy_color')
            %}
            {%
              set xy_color = [xy_color[0] | round(2), xy_color[1] | round (2)]
            %}
          {% endif %}
          {% if num_lights == 0 %}
            <Off>
          {%
            elif num_lights == 6 and
              (brightness == 100 or brightness == 105) and
              (
                (xy_color[0] == 0.37 and xy_color[1] == 0.36) or
                (xy_color[0] == 0.4 and xy_color[1] == 0.36)
              )
          %}
            Daytime
          {%
            elif num_lights == 9 and
              (
                brightness == 122 or
                brightness == 123 or
                brightness == 127 or
                brightness == 128 or
                brightness == 130 or
                brightness == 132
              ) and (
                (xy_color[0] == 0.50 and xy_color[1] == 0.35) or
                (xy_color[0] == 0.51 and xy_color[1] == 0.35)
              )
          %}
            Ambiance
          {%
            elif num_lights == 7 and
              (
                brightness == 15 or
                brightness == 20 or
                brightness == 22 or
                brightness == 23 or
                brightness == 26
              ) and (
                (xy_color[0] == 0.50 and xy_color[1] == 0.36) or
                (xy_color[0] == 0.51 and xy_color[1] == 0.35) or
                (xy_color[0] == 0.51 and xy_color[1] == 0.36)
              )
          %}
            Movie
          {%
            elif num_lights == 7 and brightness == 58 and
              (xy_color[0] == 0.51 and xy_color[1] == 0.36)
          %}
            Movie (ambiance)
          {%
            elif num_lights == 9 and
              (brightness == 141 or brightness == 148 or brightness == 159) and
              (
                (xy_color[0] == 0.49 and xy_color[1] == 0.36) or
                (xy_color[0] == 0.5 and xy_color[1] == 0.36)
              )
          %}
            Active
          {% else %}
            <Unknown>
          {% endif %}
        {% endif %}
      attributes:
        light_id: light.living_room
        scene_id: >-
          {%
            if this.state not in
              ['unknown', 'unavailable', '<Unknown>', '<Off>']
          %}
            {{
              (
                this.attributes.light_id | replace('light.', 'scene.')
              ) ~ '_' ~ (
                this.state | lower | regex_replace('([^a-z ])+', '') |
                  replace(' ', '_')
              )
            }}
          {% else %}
            <None>
          {% endif %}
      availability: >-
        {{
          states('light.hue_group_living_room') not in
            ['unknown', 'unavailable']
        }}
# Kitchen counter & cupboards [Hue zone]
- trigger:
    - platform: state
      entity_id: light.hue_group_kitchen_counter_cupboards
      attribute: brightness
      to: ~
      for: "00:00:02"
    - platform: state
      entity_id: light.hue_group_kitchen_counter_cupboards
      attribute: xy_color
      to: ~
      for: "00:00:02"
    - platform: state
      entity_id: light.hue_group_kitchen_counter_cupboards
      to: "off"
  sensor:
    - name: Hue scene (Kitchen counter & cupboards) â€“ raw
      unique_id: b7842630-c541-4e0e-a7ce-c0f4deea3f81
      icon: mdi:movie-filter
      state: >-
        {% if states('light.hue_group_kitchen_counter_cupboards') == 'off' %}
          <Off>
        {% else %}
          {%
            set num_lights = expand(
              state_attr('light.hue_group_kitchen_counter_cupboards',
                'entity_id')
            ) | selectattr('state', '==', 'on') | list | length
          %}
          {%
            set brightness =
              state_attr('light.hue_group_kitchen_counter_cupboards',
                'brightness') |
              int(-1)
          %}
          {%
            if state_attr('light.hue_group_kitchen_counter_cupboards',
              'xy_color') == none
          %}
            {% set xy_color = [-1.0, -1.0] %}
          {% else %}
            {%
              set xy_color =
                state_attr('light.hue_group_kitchen_counter_cupboards',
                  'xy_color')
            %}
            {%
              set xy_color = [xy_color[0] | round(2), xy_color[1] | round (2)]
            %}
          {% endif %}
          {% if num_lights == 0 %}
            <Off>
          {%
            elif num_lights == 4 and
              (
                brightness == 122 or
                brightness == 126 or
                brightness == 128 or
                brightness == 130
              ) and (
                (xy_color[0] == 0.41 and xy_color[1] == 0.39) or
                (xy_color[0] == 0.42 and xy_color[1] == 0.39) or
                (xy_color[0] == 0.44 and xy_color[1] == 0.39) or
                (xy_color[0] == 0.46 and xy_color[1] == 0.38)
              )
          %}
            Activity
          {% else %}
            <Unknown>
          {% endif %}
        {% endif %}
      availability: >-
        {{
          states('light.hue_group_kitchen_counter_cupboards') not in
            ['unknown', 'unavailable']
        }}
- trigger:
    - platform: state
      entity_id:
        - sensor.hue_scene_kitchen_counter_cupboards_raw
        - sensor.hue_scene_kitchen_raw
      to: ~
      # Hold for 2 seconds to ensure all dependent sensors have transitioned
      for: "00:00:02"
  sensor:
    - name: Hue scene (Kitchen counter & cupboards)
      unique_id: d4b9f4af-0104-44d7-9e5c-3d3d33d53b26
      icon: mdi:movie-filter
      state: >-
        {#
          In case Kitchen counter & cupboards is <Unknown> and Kitchen itself is
          not, switch to <Kitchen> to indicate it's following the main Kitchen
          scene (and distinguish the situation from an actual <Unknown>)
        #}
        {%
          if states('sensor.hue_scene_kitchen_counter_cupboards_raw')
            == '<Unknown>' and
          states('sensor.hue_scene_kitchen_raw') != '<Unknown>'
        %}
          <Kitchen>
        {% else %}
          {{ states('sensor.hue_scene_kitchen_counter_cupboards_raw') }}
        {% endif %}
      attributes:
        light_id: light.kitchen_counter_cupboards
        # See comment for "Hue scene (Kitchen)"-sensor's scene_id attribute
        scene_id: >-
          {%
            if states('sensor.hue_scene_kitchen_counter_cupboards_raw')
              == '<Unknown>' and
            states('sensor.hue_scene_kitchen_raw') != '<Unknown>'
          %}
            <None>
          {%
            elif states('sensor.hue_scene_kitchen_counter_cupboards_raw') not in
              ['unknown', 'unavailable', '<Unknown>', '<Off>']
          %}
            {{
              (
                this.attributes.light_id | replace('light.', 'scene.')
              ) ~ '_' ~ (
                states('sensor.hue_scene_kitchen_counter_cupboards_raw') | lower
                  | regex_replace('([^a-z ])+', '') | replace(' ', '_')
              )
            }}
          {% else %}
            <None>
          {% endif %}
      availability: >-
        {{
          states('sensor.hue_scene_kitchen_counter_cupboards_raw') not in
            ['unknown', 'unavailable'] and
          states('sensor.hue_scene_kitchen_raw') not in
            ['unknown', 'unavailable']
        }}
# Kitchen [Hue room]
- trigger:
    - platform: state
      entity_id: light.hue_group_kitchen
      attribute: brightness
      to: ~
      for: "00:00:02"
    - platform: state
      entity_id: light.hue_group_kitchen
      attribute: xy_color
      to: ~
      for: "00:00:02"
    - platform: state
      entity_id: light.hue_group_kitchen
      to: "off"
  sensor:
    - name: Hue scene (Kitchen) â€“ raw
      unique_id: c5876824-72b0-4b40-9d70-a2cde1bc1d7f
      icon: mdi:movie-filter
      state: >-
        {% if states('light.hue_group_kitchen') == 'off' %}
          <Off>
        {% else %}
          {%
            set num_lights = expand(
              state_attr('light.hue_group_kitchen', 'entity_id')
            ) | selectattr('state', '==', 'on') | list | length
          %}
          {%
            set brightness =
              state_attr('light.hue_group_kitchen', 'brightness') | int(-1)
          %}
          {%
            if state_attr('light.hue_group_kitchen', 'xy_color') == none
          %}
            {% set xy_color = [-1.0, -1.0] %}
          {% else %}
            {%
              set xy_color = state_attr('light.hue_group_kitchen', 'xy_color')
            %}
            {%
              set xy_color = [xy_color[0] | round(2), xy_color[1] | round (2)]
            %}
          {% endif %}
          {% if num_lights == 0 %}
            <Off>
          {%
            elif num_lights == 14 and (
              brightness == 75 or
              brightness == 76 or
              brightness == 78
            ) and (
                (xy_color[0] == 0.38 and xy_color[1] == 0.37) or
                (xy_color[0] == 0.39 and xy_color[1] == 0.37) or
                (xy_color[0] == 0.4 and xy_color[1] == 0.36)
              )
          %}
            Daytime
          {%
            elif num_lights == 14 and (
              brightness == 58 or
              brightness == 59 or
              brightness == 60
            ) and (xy_color[0] == 0.48 and xy_color[1] == 0.33)
          %}
            Ambiance
          {%
            elif num_lights == 10 and brightness == 62 and
              (xy_color[0] == 0.46 and xy_color[1] == 0.3)
          %}
            Movie
          {%
            elif num_lights == 14 and brightness == 187 and
              (
                (xy_color[0] == 0.46 and xy_color[1] == 0.4) or
                (xy_color[0] == 0.49 and xy_color[1] == 0.38)
              )
          %}
            Bright (custom)
          {% else %}
            <Unknown>
          {% endif %}
        {% endif %}
      availability: >-
        {{
          states('light.hue_group_kitchen') not in ['unknown', 'unavailable']
        }}
- trigger:
    - platform: state
      entity_id: sensor.hue_scene_kitchen
      to: ~
  sensor:
    - name: Hue scene (Kitchen) â€“ previous
      unique_id: 833bdce8-e798-4279-8d0f-a021e7552a6e
      icon: mdi:movie-filter
      state: >-
        {%
          if trigger.from_state is defined and trigger.from_state.state not in
            ['unknown', 'unavailable', '<Unknown>']
        %}
          {{ trigger.from_state.state }}
        {% else %}
          <Unknown>
        {% endif %}
      attributes:
        light_id: light.kitchen
        # See comment for "Hue scene (Kitchen)"-sensor's scene_id attribute
        scene_id: >-
          {%
            if trigger.from_state is defined and trigger.from_state.state not in
              ['unknown', 'unavailable', '<Unknown>', '<Off>']
          %}
            {% if trigger.from_state.state != this.state %}
              {{
                (
                  this.attributes.light_id | replace('light.', 'scene.')
                ) ~ '_' ~ (
                  trigger.from_state.state | lower |
                    regex_replace('([^a-z ])+', '') | replace(' ', '_')
                )
              }}
            {% else %}
              {{ this.attributes.scene_id }}
            {% endif %}
          {% else %}
            <None>
          {% endif %}
      availability: >-
        {{
          states('sensor.hue_scene_kitchen') not in ['unknown', 'unavailable']
        }}
- trigger:
    - platform: state
      entity_id:
        - sensor.hue_scene_kitchen_raw
        - sensor.hue_scene_kitchen_counter_cupboards_raw
      to: ~
      # Hold for 2 seconds to ensure all dependent sensors have transitioned
      for: "00:00:02"
  sensor:
    - name: Hue scene (Kitchen)
      unique_id: 328350fb-0a61-4e9d-8081-8bc2febe5162
      icon: mdi:movie-filter
      state: >-
        {#
          If Kitchen is <Off> and Kitchen counter & cupboards switches to
          "Activity", keep reporting the Kitchen as <Off> instead of <Unknown>
        #}
        {%
          if states('sensor.hue_scene_kitchen_counter_cupboards_raw')
              == 'Activity'
          and states('sensor.hue_scene_kitchen_raw') == '<Unknown>' and
            this.state == '<Off>'
        %}
          <Off>
        {#
          If Kitchen counter & cupboards is "Activity", prevent Kitchen from
          changing state to <Unknown> â€“ instead, keep reporting its previous
          scene as the active scene
        #}
        {%
          elif states('sensor.hue_scene_kitchen_counter_cupboards_raw')
              == 'Activity'
          and states('sensor.hue_scene_kitchen_raw') == '<Unknown>'
        %}
          {{ this.state }}
        {% else %}
          {{ states('sensor.hue_scene_kitchen_raw') }}
        {% endif %}
      attributes:
        light_id: light.kitchen
        # Relying on "this.state" to capture the current (i.e., most recent)
        # state of the template sensor appears not 100% reliable â€” sometimes it
        # results in the _previous_ state of the sensor... Unclear what's
        # exactly going on, but this behaviour effects all sensors in this file
        # that _render_ outside variables (e.g. "this.state" or "states(...)"")
        # in their state template (although it could just as well be an odd/
        # infrequent timing issue).
        # Replicating the state template's logic inside the attribute template
        # appears to not suffer from this issue.
        scene_id: >-
          {%
            if states('sensor.hue_scene_kitchen_counter_cupboards_raw')
                == 'Activity'
            and states('sensor.hue_scene_kitchen_raw') == '<Unknown>'
          %}
            {{ this.attributes.scene_id }}
          {%
            elif states('sensor.hue_scene_kitchen_raw') not in
              ['unknown', 'unavailable', '<Unknown>', '<Off>']
          %}
            {{
              (
                this.attributes.light_id | replace('light.', 'scene.')
              ) ~ '_' ~ (
                states('sensor.hue_scene_kitchen_raw') | lower |
                  regex_replace('([^a-z ])+', '') | replace(' ', '_')
              )
            }}
          {% else %}
            <None>
          {% endif %}
      availability: >-
        {{
          states('sensor.hue_scene_kitchen_counter_cupboards_raw') not in
            ['unknown', 'unavailable'] and
          states('sensor.hue_scene_kitchen_raw') not in
            ['unknown', 'unavailable']
        }}
# Garden [Hue room]
- trigger:
    - platform: state
      entity_id: light.hue_group_garden
      attribute: brightness
      to: ~
      for: "00:00:02"
    - platform: state
      entity_id: light.hue_group_garden
      attribute: xy_color
      to: ~
      for: "00:00:02"
    - platform: state
      entity_id: light.hue_group_garden
      to: "off"
  sensor:
    - name: Hue scene (Garden)
      unique_id: 2e5bc57f-240a-4669-90e4-ace50876fb70
      icon: mdi:movie-filter
      state: >-
        {% if states('light.hue_group_garden') == 'off' %}
          <Off>
        {% else %}
          {%
            set num_lights = expand(
              state_attr('light.hue_group_garden', 'entity_id')
            ) | selectattr('state', '==', 'on') | list | length
          %}
          {%
            set brightness =
              state_attr('light.hue_group_garden', 'brightness') | int(-1)
          %}
          {%
            if state_attr('light.hue_group_garden', 'xy_color') == none
          %}
            {% set xy_color = [-1.0, -1.0] %}
          {% else %}
            {%
              set xy_color = state_attr('light.hue_group_garden', 'xy_color')
            %}
            {%
              set xy_color = [xy_color[0] | round(2), xy_color[1] | round (2)]
            %}
          {% endif %}
          {% if num_lights == 0 %}
            <Off>
          {%
            elif num_lights == 5 and brightness == 255 and
              (xy_color[0] == 0.41 and xy_color[1] == 0.36)
          %}
            Active
          {%
            elif num_lights == 6 and brightness == 114 and
              (xy_color[0] == 0.43 and xy_color[1] == 0.34)
          %}
            Ambiance
          {% else %}
            <Unknown>
          {% endif %}
        {% endif %}
      attributes:
        light_id: light.garden
        scene_id: >-
          {%
            if this.state not in
              ['unknown', 'unavailable', '<Unknown>', '<Off>']
          %}
            {{
              (
                this.attributes.light_id | replace('light.', 'scene.')
              ) ~ '_' ~ (
                this.state | lower | regex_replace('([^a-z ])+', '') |
                  replace(' ', '_')
              )
            }}
          {% else %}
            <None>
          {% endif %}
      availability: >-
        {{
          states('light.hue_group_garden') not in ['unknown', 'unavailable']
        }}
