- sensor:
    # Energy
    - name: Daily energy
      unique_id: 39aa08f9-a48d-40da-b649-9047eebdc6fc
      unit_of_measurement: kWh
      availability: >-
        {{
          has_value('sensor.daily_energy_offpeak') or
          has_value('sensor.daily_energy_peak')
        }}
      state: >-
        {{
          (
            states('sensor.daily_energy_offpeak') | float(0) +
            states('sensor.daily_energy_peak') | float(0)
          ) | round(3)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.daily_energy_offpeak', 'last_period') |
              float(0) > 0
            or state_attr('sensor.daily_energy_peak', 'last_period') |
              float(0) > 0
          %}
            {{
              (
                state_attr('sensor.daily_energy_offpeak', 'last_period') |
                  float(0) +
                state_attr('sensor.daily_energy_peak', 'last_period') | float(0)
              ) | round(3)
            }}
          {% endif %}
    - name: Monthly energy
      unique_id: 16585486-2137-46d8-9530-9c5c6af61894
      unit_of_measurement: kWh
      availability: >-
        {{
          has_value('sensor.monthly_energy_offpeak') or
          has_value('sensor.monthly_energy_peak')
        }}
      state: >-
        {{
          (
            states('sensor.monthly_energy_offpeak') | float(0) +
            states('sensor.monthly_energy_peak') | float(0)
          ) | round(3)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_energy_offpeak', 'last_period') |
              float(0) > 0
            or state_attr('sensor.monthly_energy_peak', 'last_period') |
              float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_energy_offpeak', 'last_period') |
                  float(0) +
                state_attr('sensor.monthly_energy_peak', 'last_period')
                  | float(0)
              ) | round(3)
            }}
          {% endif %}
    - name: Daily costs (Energy)
      unique_id: 0b67a8e9-94c7-47ba-8ec3-736b89a69741
      unit_of_measurement: €
      availability: >-
        {{
          has_value('sensor.daily_energy_offpeak') or
          has_value('sensor.daily_energy_peak')
        }}
      state: >-
        {{
          (
            (
              states('sensor.daily_energy_offpeak') | float(0) *
                states('input_number.rate_energy_offpeak') | float
            ) + (
              states('sensor.daily_energy_peak') | float(0) *
                states('input_number.rate_energy_peak') | float
            )
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.daily_energy_offpeak', 'last_period') |
              float(0) > 0
            or state_attr('sensor.daily_energy_peak', 'last_period') |
              float(0) > 0
          %}
            {{
              (
                (
                  state_attr('sensor.daily_energy_offpeak', 'last_period') |
                    float(0) *
                  states('input_number.rate_energy_offpeak') | float
                ) + (
                  state_attr('sensor.daily_energy_peak', 'last_period') |
                    float(0) *
                  states('input_number.rate_energy_peak') | float
                )
              ) | round(2)
            }}
          {% endif %}
    - name: Monthly costs (Energy)
      unique_id: c7693bbf-27f1-4417-941b-4f29482ce2e8
      unit_of_measurement: €
      availability: >-
        {{
          has_value('sensor.monthly_energy_offpeak') or
          has_value('sensor.monthly_energy_peak')
        }}
      state: >-
        {{
          (
            (
              states('sensor.monthly_energy_offpeak') | float(0) *
                states('input_number.rate_energy_offpeak') | float
            ) + (
              states('sensor.monthly_energy_peak') | float(0) *
                states('input_number.rate_energy_peak') | float
            )
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_energy_offpeak', 'last_period') |
              float(0) > 0
            or state_attr('sensor.monthly_energy_peak', 'last_period') |
              float(0) > 0
          %}
            {{
              (
                (
                  state_attr('sensor.monthly_energy_offpeak', 'last_period') |
                    float(0) *
                  states('input_number.rate_energy_offpeak') | float
                ) + (
                  state_attr('sensor.monthly_energy_peak', 'last_period') |
                    float(0) *
                  states('input_number.rate_energy_peak') | float
                )
              ) | round(2)
            }}
          {% endif %}
    - name: Monthly costs – daily average (Energy)
      unique_id: 26338d65-cf2e-4853-a4e9-a96b3cadb58f
      unit_of_measurement: €
      availability: >-
        {{
          (
            has_value('sensor.daily_energy_offpeak') or
            has_value('sensor.daily_energy_peak')
          ) and (
            has_value('sensor.monthly_energy_offpeak') or
            has_value('sensor.monthly_energy_peak')
          )
        }}
      # More complicated than "last_period" calculation as we need to disregard
      # today's (incomplete) value to prevent skewing the average
      state: >-
        {% if now().today().day | int <= 1 %}
          {{
            (
              (
                states('sensor.daily_energy_offpeak') | float(0) *
                  states('input_number.rate_energy_offpeak') | float
              ) + (
                states('sensor.daily_energy_peak') | float(0) *
                  states('input_number.rate_energy_peak') | float
              )
            ) | round(2)
          }}
        {% else %}
          {{
            (
              (
                (
                  (states('sensor.monthly_energy_offpeak') | float(0) -
                    states('sensor.daily_energy_offpeak') | float(0)
                  ) * states('input_number.rate_energy_offpeak') | float
                ) + (
                  (states('sensor.monthly_energy_peak') | float(0) -
                    states('sensor.daily_energy_peak') | float(0)
                  ) * states('input_number.rate_energy_peak') | float
                )
              ) / (now().today().day | int - 1)
            ) | round(2)
          }}
        {% endif %}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_energy_offpeak', 'last_period') |
              float(0) > 0
            or state_attr('sensor.monthly_energy_peak', 'last_period') |
              float(0) > 0
          %}
            {{
              (
                (
                  (
                    state_attr('sensor.monthly_energy_offpeak', 'last_period') |
                      float(0) *
                    states('input_number.rate_energy_offpeak') | float
                  ) + (
                    state_attr('sensor.monthly_energy_peak', 'last_period') |
                      float(0) *
                    states('input_number.rate_energy_peak') | float
                  )
                ) / (
                  strptime(
                    state_attr('sensor.monthly_energy_offpeak', 'last_reset'),
                    '%Y-%m-%dT%H:%M:%S.%f%z'
                  ) - timedelta(days=1)
                ).day | int
              ) | round(2)
            }}
          {% endif %}
    # Gas
    - name: Daily costs (Gas)
      unique_id: 2d9b26fa-f68b-4e19-a660-c29fd72560a8
      unit_of_measurement: €
      availability: >-
        {{
          has_value('sensor.daily_gas')
        }}
      state: >-
        {{
          (
            states('sensor.daily_gas') | float *
            states('input_number.rate_gas') | float
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.daily_gas', 'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.daily_gas', 'last_period') | float *
                states('input_number.rate_gas') | float
              ) | round(2)
            }}
          {% endif %}
    - name: Monthly costs (Gas)
      unique_id: 40998a68-d161-474e-a6ac-39870215013e
      unit_of_measurement: €
      availability: >-
        {{
          has_value('sensor.monthly_gas')
        }}
      state: >-
        {{
          (
            states('sensor.monthly_gas') | float *
            states('input_number.rate_gas') | float
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_gas', 'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_gas', 'last_period') | float *
                states('input_number.rate_gas') | float
              ) | round(2)
            }}
          {% endif %}
    - name: Monthly costs – daily average (Gas)
      unique_id: b46c162e-b4b9-453b-93da-b9e51b1ac7c5
      unit_of_measurement: €
      availability: >-
        {{
          has_value('sensor.daily_gas') and has_value('sensor.monthly_gas')
        }}
      state: >-
        {% if now().today().day | int <= 1 %}
          {{
            (
              states('sensor.daily_gas') | float *
              states('input_number.rate_gas') | float
            ) | round(2)
          }}
        {% else %}
          {{
            (
              (
                (
                  states('sensor.monthly_gas') | float -
                  states('sensor.daily_gas') | float
                ) * states('input_number.rate_gas') | float
              ) / (now().today().day | int - 1)
            ) | round(2)
          }}
        {% endif %}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_gas', 'last_period') | float(0) > 0
          %}
          {{
            (
              (
                state_attr('sensor.monthly_gas', 'last_period') | float *
                states('input_number.rate_gas') | float
              ) / (
                strptime(
                  state_attr('sensor.monthly_gas', 'last_reset'),
                  '%Y-%m-%dT%H:%M:%S.%f%z'
                ) - timedelta(days=1)
              ).day | int
            ) | round(2)
          }}
          {% endif %}
