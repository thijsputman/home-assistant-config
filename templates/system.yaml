- binary_sensor:
    # Power outage detection based on back-up UPS. To filter out minor hiccups,
    # this triggers when the UPS is discharging and battery level dips below
    # 98%. Under current load this happens after about 40 seconds...
    - name: Power outage
      unique_id: 679eb3a5-4052-445c-979c-a72cb5796048
      device_class: problem
      icon: mdi:transmission-tower
      availability: >-
        {{ states('sensor.ups_status') not in ['unknown', 'unavailable'] }}
      state: >-
        {%- if
          states('sensor.ups_battery_charge')|int < 98 and
          states('sensor.ups_status') == 'On Battery Battery Discharging'
        -%}
          on
        {%- else -%}
          off
        {%- endif -%}
# JSON-encoded list of failed devices – renders every 5 minutes. The list is
# sorted and deduplicated so the sensor state only changes if a device becomes
# (un)available.
- trigger:
    - platform: time_pattern
      hours: "*"
      minutes: /5
      seconds: 0
    - platform: event
      event_type: template_reloaded
  sensor:
    - name: Failed devices
      unique_id: b35c9d1a-715b-4216-a620-6308c47e0e8f
      icon: mdi:toy-brick-remove-outline
      # Find all devices that have one or more entities in the "unavailable"-,
      # "unknown"- or "none"-state. A small number of entity IDs is excluded as
      # their state can be one of these under normal circumstances (mainly
      # seems to apply to Mobile App entities).
      # The goal of this sensor is to detect failed devices and integrations,
      # entities that do not belong to a device are thus excluded.
      state: >-
        {{
          states |
          selectattr('state', 'in',
            [
              'unavailable',
              'unknown',
              'none'
            ]
          ) |
          map(attribute='entity_id') |
          reject('search',
            '^sensor\..+_(charger_type|next_alarm|do_not_disturb_sensor)$') |
          map('device_id') |
          unique | reject('none') | list | sort | to_json
        }}
# If the Home Alarm is in "Armed away"-mode for more than 16 hours, enable
# Vacation-mode – indicating we are away from home longer than on a regular
# working day.
# This mainly serves to make some of the alarm triggers stricter (a false alarm
# when coming home from a trip is less of an issue than one that can occur daily
# coming home from the office), but it has other potential uses too.
# Triggers at the top of every hour (and on Home Alarm disarm) to prevent
# unnecessarily rendering a not highly time-sensitive template.
- trigger:
    - platform: time_pattern
      hours: /1
      minutes: 0
      seconds: 0
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: disarmed
  binary_sensor:
    - name: Vacation-mode
      unique_id: b2d979d7-3a12-4722-92e4-64773edbb939
      icon: mdi:airplane-clock
      state: >-
        {%
          if states.alarm_control_panel.home_alarm.last_changed is defined
        %}
          {{
            states('alarm_control_panel.home_alarm') == 'armed_away' and
            states.alarm_control_panel.home_alarm.last_changed <
              now() - timedelta(hours=16)
          }}
        {# Err on the side of caution #}
        {% elif states('alarm_control_panel.home_alarm') == 'armed_away' %}
          true
        {% else %}
          false
        {% endif %}
