- sensor:
    # Close-in boiler (Kitchen)
    - name: Monthly costs (Close-in boiler – Kitchen)
      unique_id: defd65ee-4cde-44f6-b695-98f67c0cb6e9
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_boiler_kitchen') }}
      # Runs mostly during peak-hours, use peak-rate to approximate costs
      state: >-
        {{
          (
            (states('sensor.monthly_consumption_boiler_kitchen') | float *
              states('input_number.rate_energy_peak') | float)
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_boiler_kitchen',
              'last_period') | float(0) > 0
          %}
            {{
              (
                (
                  state_attr('sensor.monthly_consumption_boiler_kitchen',
                    'last_period') | float *
                  states('input_number.rate_energy_peak') | float
                )
              ) | round(2)
            }}
          {% endif %}
    # Electric heater (Shed)
    - name: Monthly costs (Electric heater – Shed)
      unique_id: 3ca41685-11d8-4b5f-8177-72461acd4dcb
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_heater_shed') }}
      # Runs all-day round, use average of the two rates to approximate costs
      state: >-
        {{
          (
            states('sensor.monthly_consumption_heater_shed') | float *
            (
              states('input_number.rate_energy_peak') | float +
              states('input_number.rate_energy_offpeak') | float
            ) / 2
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_heater_shed',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_heater_shed',
                  'last_period') | float *
                (
                  states('input_number.rate_energy_peak') | float +
                  states('input_number.rate_energy_offpeak') | float
                ) / 2
              ) | round(2)
            }}
          {% endif %}
    # Washing machine
    - name: Monthly costs (Washing machine)
      unique_id: 71358112-8f34-4b09-957d-6eed2c5cab19
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_washing_machine') }}
      # Runs mostly off-peak, use that rate to approximate
      state: >-
        {{
          (
            states('sensor.monthly_consumption_washing_machine') | float *
            states('input_number.rate_energy_offpeak') | float
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_washing_machine',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_washing_machine',
                  'last_period') | float *
                states('input_number.rate_energy_offpeak') | float
              ) | round(2)
            }}
          {% endif %}
    # Dryer
    - name: Monthly costs (Dryer)
      unique_id: 6c786e4d-5220-4537-82f8-e1f8c1eb6698
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_dryer') }}
      # Runs mostly off-peak, use that rate to approximate
      state: >-
        {{
          (
            states('sensor.monthly_consumption_dryer') | float *
            states('input_number.rate_energy_offpeak') | float
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_dryer',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_dryer',
                  'last_period') | float *
                states('input_number.rate_energy_offpeak') | float
              ) | round(2)
            }}
          {% endif %}
    # Dishwasher
    - name: Monthly costs (Dishwasher)
      unique_id: b7d0842f-9ee4-4d5f-977c-0a538e966424
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_dishwasher') }}
      # Runs mostly off-peak, use that rate to approximate
      state: >-
        {{
          (
            states('sensor.monthly_consumption_dishwasher') | float *
            states('input_number.rate_energy_offpeak') | float
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_dishwasher',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_dishwasher',
                  'last_period') | float *
                states('input_number.rate_energy_offpeak') | float
              ) | round(2)
            }}
          {% endif %}
    # Airco (Attic)
    - name: Monthly costs (Airco – Attic)
      unique_id: f1e16b9f-e636-49ae-8a0c-8e13373ffbe4
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_airco_attic') }}
      # Runs mostly during peak-hours, use peak-rate to approximate costs
      state: >-
        {{
          (
            states('sensor.monthly_consumption_airco_attic') | float *
            states('input_number.rate_energy_peak') | float
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_airco_attic',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_airco_attic',
                  'last_period') | float *
                states('input_number.rate_energy_peak') | float
              ) | round(2)
            }}
          {% endif %}
    # UPS
    - name: Monthly costs (UPS)
      unique_id: dd549132-514f-4e73-8922-cf234bb2a1f2
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_ups') }}
      # Use average of the two rates to approximate costs
      state: >-
        {{
          (
            states('sensor.monthly_consumption_ups') | float *
            (
              states('input_number.rate_energy_peak') | float +
              states('input_number.rate_energy_offpeak') | float
            ) / 2
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_ups',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_ups',
                  'last_period') | float *
                (
                  states('input_number.rate_energy_peak') | float +
                  states('input_number.rate_energy_offpeak') | float
                ) / 2
              ) | round(2)
            }}
          {% endif %}
    # All lights
    - name: Monthly costs (All lights)
      unique_id: 286f2b11-44bb-4a50-af03-6dbfe48ce726
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_all_lights') }}
      # Use average of the two rates to approximate costs
      state: >-
        {{
          (
            states('sensor.monthly_consumption_all_lights') | float *
            (
              states('input_number.rate_energy_peak') | float +
              states('input_number.rate_energy_offpeak') | float
            ) / 2
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_all_lights',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_all_lights',
                  'last_period') | float *
                (
                  states('input_number.rate_energy_peak') | float +
                  states('input_number.rate_energy_offpeak') | float
                ) / 2
              ) | round(2)
            }}
          {% endif %}
    # Television (i.e. "Multimedia hub")
    - name: Monthly costs (Television)
      unique_id: 619f29c6-d3db-48ba-827f-1cb7aaa7d3d5
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_television') }}
      # Runs mostly off-peak
      state: >-
        {{
          (
            states('sensor.monthly_consumption_television') | float *
              states('input_number.rate_energy_offpeak') | float
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_television',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_television',
                  'last_period') | float *
                states('input_number.rate_energy_offpeak') | float
              ) | round(2)
            }}
          {% endif %}
    # Sonair – combined measurement for all three Sonair units and the fan in
    # the Attic
    - name: Power (Sonair – combined)
      unique_id: e036c831-7770-4d3a-9e16-36890fd4ac71
      unit_of_measurement: W
      device_class: power
      # Using _or_ intentionally – even if only a single sensor is reporting
      # power data it makes sense to report it as the combined total
      availability: >-
        {{
          has_value('sensor.power_110') and
          has_value('sensor.power_113') and
          has_value('sensor.power_115') and
          has_value('sensor.power_149_actual')
        }}
      state: >-
        {{
          states('sensor.power_110') | int(0) +
          states('sensor.power_113') | int(0) +
          states('sensor.power_115') | int(0) +
          states('sensor.power_149_actual') | int(0)
        }}
    - name: Consumption (Sonair – combined)
      unique_id: 426baa58-79dd-4714-8713-f55e1a24ade0
      unit_of_measurement: kWh
      device_class: energy
      # Using _and_ intentionally – as this is a cumulative measure, reporting
      # data when not all sensors are available would lead to strange drops in
      # the cumulative number...
      availability: >-
        {{
          has_value('sensor.consumption_111') and
          has_value('sensor.consumption_114') and
          has_value('sensor.consumption_116') and
          has_value('sensor.consumption_148_actual')
        }}
      state: >-
        {{
          (
            states('sensor.consumption_111') | float(0) +
            states('sensor.consumption_114') | float(0) +
            states('sensor.consumption_116') | float(0) +
            states('sensor.consumption_148_actual') | float(0)
          ) | round(2)
        }}
    - name: Monthly costs (Sonair – combined)
      unique_id: 373d8b30-e8d3-4995-8a10-8e76e515d8a1
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_sonair_combined') }}
      # Runs mostly during peak-hours, use peak-rate to approximate costs
      state: >-
        {{
          (
            states('sensor.monthly_consumption_sonair_combined') | float *
              states('input_number.rate_energy_peak') | float
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_sonair_combined',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_sonair_combined',
                  'last_period') | float *
                states('input_number.rate_energy_peak') | float
              ) | round(2)
            }}
          {% endif %}
    # Airco (Bedroom)
    - name: Monthly costs (Airco – Bedroom)
      unique_id: c7aad2d5-7536-4143-82bb-2b2fc62a86f4
      unit_of_measurement: €
      availability: >-
        {{ has_value('sensor.monthly_consumption_airco_bedroom') }}
      # Runs mostly at night
      state: >-
        {{
          (
            states('sensor.monthly_consumption_airco_bedroom') | float *
              states('input_number.rate_energy_offpeak') | float
          ) | round(2)
        }}
      attributes:
        last_period: >-
          {%
            if state_attr('sensor.monthly_consumption_airco_bedroom',
              'last_period') | float(0) > 0
          %}
            {{
              (
                state_attr('sensor.monthly_consumption_airco_bedroom',
                  'last_period') | float *
                states('input_number.rate_energy_offpeak') | float
              ) | round(2)
            }}
          {% endif %}
- binary_sensor:
    # Television (i.e. Multimedia hub)
    - name: Television
      unique_id: 579cc669-4c98-41c0-8c42-bb49ec8346d0
      device_class: power
      icon: mdi:television
      availability: >-
        {{ has_value('sensor.power_108') }}
      # Idle/standby consumption is anywhere between 5 and 20 Watt
      state: >-
        {%- if states('sensor.power_108')|float(0) > 20 -%}
          on
        {%- else -%}
          off
        {%- endif -%}
    # Sonair (combined)
    - name: Sonair (combined)
      unique_id: 80fe5a11-0776-4407-98da-4401ab9de0e3
      device_class: power
      icon: mdi:air-filter
      availability: >-
        {{ has_value('sensor.power_sonair_combined') }}
      state: >-
        {%- if states('sensor.power_sonair_combined') | int(0) > 0 -%}
          on
        {%- else -%}
          off
        {%- endif -%}
    # Airco (Attic)
    - name: Airco (Attic)
      unique_id: 6cf706bc-7c95-4ec0-a522-dc207a8e720c
      device_class: power
      icon: mdi:hvac
      availability: >-
        {{ has_value('sensor.power_99') }}
      # Idle/standby consumption is 1 Watt
      state: >-
        {%- if states('sensor.power_99') | float > 1 -%}
          on
        {%- else -%}
          off
        {%- endif -%}
    # Airco (Bedroom)
    - name: Airco (Bedroom)
      unique_id: d315b0b3-e39d-46ff-a10c-5be1c5c462bc
      device_class: power
      icon: mdi:hvac
      availability: >-
        {{ has_value('sensor.power_117') }}
      # Idle/standby consumption is below 5 Watt
      state: >-
        {%- if states('sensor.power_117') | float(0) > 5 -%}
          on
        {%- else -%}
          off
        {%- endif -%}
    # Dishwasher
    - name: Dishwasher
      unique_id: 3fda1cfb-c3bc-4474-b2c1-f8658679058f
      device_class: power
      icon: mdi:dishwasher
      availability: >-
        {{ has_value('sensor.power_88_actual') }}
      # Idle/standby consumption is 3 Watt
      state: >-
        {%- if states('sensor.power_88_actual') | float > 3 -%}
          on
        {%- else -%}
          off
        {%- endif -%}
    # Washing machine
    - name: Washing machine
      unique_id: a3237e4c-c072-4b1a-99e6-78272059975b
      device_class: power
      icon: mdi:washing-machine
      availability: >-
        {{ has_value('sensor.power_86_actual') }}
      state: >-
        {%- if states('sensor.power_86_actual') | float > 0 -%}
          on
        {%- else -%}
          off
        {%- endif -%}
    # Dryer
    - name: Dryer
      unique_id: 07c24e37-0968-438c-bf9d-10e8266cfa96
      device_class: power
      icon: mdi:tumble-dryer
      availability: >-
        {{ has_value('sensor.power_83') }}
      # Idle/standby consumption is 2 Watt
      state: >-
        {%- if states('sensor.power_83') | float(0) > 2 -%}
          on
        {%- else -%}
          off
        {%- endif -%}
